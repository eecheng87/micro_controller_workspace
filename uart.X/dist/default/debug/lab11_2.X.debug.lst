

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Dec 14 05:18:04 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=2
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    64                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68  0000                     
    69                           ; Version 2.10
    70                           ; Generated 31/07/2019 GMT
    71                           ; 
    72                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution.
    86                           ; 
    87                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    88                           ;        software without specific prior written permission.
    89                           ; 
    90                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    91                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    92                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    93                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    94                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    95                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    96                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    97                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    98                           ; 
    99                           ; 
   100                           ; Code-generator required, PIC18F4520 Definitions
   101                           ; 
   102                           ; SFR Addresses
   103  0000                     _TRISA	set	3986
   104  0000                     _TRISCbits	set	3988
   105  0000                     _RC2	set	31762
   106  0000                     _TMR3	set	4018
   107  0000                     _ADCON0bits	set	4034
   108  0000                     _ADRESL	set	4035
   109  0000                     _ADRESH	set	4036
   110  0000                     _ADCON2bits	set	4032
   111  0000                     _ADCON1	set	4033
   112  0000                     _CCP1CON	set	4029
   113  0000                     _RCONbits	set	4048
   114  0000                     _RCREG	set	4014
   115  0000                     _TXREG	set	4013
   116  0000                     _IPR1bits	set	3999
   117  0000                     _PIE1bits	set	3997
   118  0000                     _PIR1bits	set	3998
   119  0000                     _RCSTAbits	set	4011
   120  0000                     _SPBRG	set	4015
   121  0000                     _BAUDCONbits	set	4024
   122  0000                     _TXSTAbits	set	4012
   123  0000                     _OSCCONbits	set	4051
   124  0000                     _ADFM	set	32263
   125  0000                     _CREN	set	32092
   126  0000                     _RCIF	set	31989
   127  0000                     _INTCONbits	set	4082
   128                           
   129                           	psect	smallconst
   130  000600                     __psmallconst:
   131                           	opt callstack 0
   132  000600  00                 	db	0
   133  000601                     STR_1:
   134  000601  48                 	db	72	;'H'
   135  000602  65                 	db	101	;'e'
   136  000603  6C                 	db	108	;'l'
   137  000604  6C                 	db	108	;'l'
   138  000605  6F                 	db	111	;'o'
   139  000606  20                 	db	32
   140  000607  00                 	db	0
   141  000608                     STR_2:
   142  000608  57                 	db	87	;'W'
   143  000609  6F                 	db	111	;'o'
   144  00060A  72                 	db	114	;'r'
   145  00060B  6C                 	db	108	;'l'
   146  00060C  64                 	db	100	;'d'
   147  00060D  21                 	db	33
   148  00060E  00                 	db	0
   149  00060F                     STR_7:
   150  00060F  6D                 	db	109	;'m'
   151  000610  6F                 	db	111	;'o'
   152  000611  64                 	db	100	;'d'
   153  000612  65                 	db	101	;'e'
   154  000613  31                 	db	49	;'1'
   155  000614  00                 	db	0
   156  000615                     STR_8:
   157  000615  6D                 	db	109	;'m'
   158  000616  6F                 	db	111	;'o'
   159  000617  64                 	db	100	;'d'
   160  000618  65                 	db	101	;'e'
   161  000619  32                 	db	50	;'2'
   162  00061A  00                 	db	0
   163  00061B                     STR_6:
   164  00061B  63                 	db	99	;'c'
   165  00061C  6C                 	db	108	;'l'
   166  00061D  65                 	db	101	;'e'
   167  00061E  61                 	db	97	;'a'
   168  00061F  72                 	db	114	;'r'
   169  000620  00                 	db	0
   170  000621                     STR_4:
   171  000621  25                 	db	37
   172  000622  2E                 	db	46
   173  000623  32                 	db	50	;'2'
   174  000624  66                 	db	102	;'f'
   175  000625  00                 	db	0
   176  000626                     STR_9:
   177  000626  49                 	db	73	;'I'
   178  000627  4E                 	db	78	;'N'
   179  000628  46                 	db	70	;'F'
   180  000629  00                 	db	0
   181  00062A                     STR_13:
   182  00062A  4E                 	db	78	;'N'
   183  00062B  41                 	db	65	;'A'
   184  00062C  4E                 	db	78	;'N'
   185  00062D  00                 	db	0
   186  00062E                     STR_10:
   187  00062E  69                 	db	105	;'i'
   188  00062F  6E                 	db	110	;'n'
   189  000630  66                 	db	102	;'f'
   190  000631  00                 	db	0
   191  000632                     STR_14:
   192  000632  6E                 	db	110	;'n'
   193  000633  61                 	db	97	;'a'
   194  000634  6E                 	db	110	;'n'
   195  000635  00                 	db	0
   196  000636                     STR_17:
   197  000636  6C                 	db	108	;'l'
   198  000637  66                 	db	102	;'f'
   199  000638  00                 	db	0
   200  000639                     STR_3:
   201  000639  65                 	db	101	;'e'
   202  00063A  00                 	db	0
   203  0000                     
   204                           ; #config settings
   205  00063B  00                 	db	0	; dummy byte at the end
   206  0000                     
   207                           	psect	cinit
   208  00391E                     __pcinit:
   209                           	opt callstack 0
   210  00391E                     start_initialization:
   211                           	opt callstack 0
   212  00391E                     __initialization:
   213                           	opt callstack 0
   214                           
   215                           ; Clear objects allocated to BANK1 (80 bytes)
   216  00391E  EE01  F000         	lfsr	0,__pbssBANK1
   217  003922  0E50               	movlw	80
   218  003924                     clear_0:
   219  003924  6AEE               	clrf	postinc0,c
   220  003926  06E8               	decf	wreg,f,c
   221  003928  E1FD               	bnz	clear_0
   222                           
   223                           ; Clear objects allocated to BANK0 (38 bytes)
   224  00392A  EE00  F0D2         	lfsr	0,__pbssBANK0
   225  00392E  0E26               	movlw	38
   226  003930                     clear_1:
   227  003930  6AEE               	clrf	postinc0,c
   228  003932  06E8               	decf	wreg,f,c
   229  003934  E1FD               	bnz	clear_1
   230                           
   231                           ; Clear objects allocated to COMRAM (10 bytes)
   232  003936  EE00  F069         	lfsr	0,__pbssCOMRAM
   233  00393A  0E0A               	movlw	10
   234  00393C                     clear_2:
   235  00393C  6AEE               	clrf	postinc0,c
   236  00393E  06E8               	decf	wreg,f,c
   237  003940  E1FD               	bnz	clear_2
   238  003942                     end_of_initialization:
   239                           	opt callstack 0
   240  003942                     __end_of__initialization:
   241                           	opt callstack 0
   242  003942  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   243  003944  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   244  003946  0E00               	movlw	low (__Lmediumconst shr (0+16))
   245  003948  6EF8               	movwf	tblptru,c
   246  00394A  0100               	movlb	0
   247  00394C  EFDA  F019         	goto	_main	;jump to C main() function
   248                           
   249                           	psect	bssCOMRAM
   250  000069                     __pbssCOMRAM:
   251                           	opt callstack 0
   252  000069                     _nout:
   253                           	opt callstack 0
   254  000069                     	ds	2
   255  00006B                     _width:
   256                           	opt callstack 0
   257  00006B                     	ds	2
   258  00006D                     _prec:
   259                           	opt callstack 0
   260  00006D                     	ds	2
   261  00006F                     _flags:
   262                           	opt callstack 0
   263  00006F                     	ds	2
   264  000071                     _lenStr:
   265                           	opt callstack 0
   266  000071                     	ds	2
   267                           
   268                           	psect	bssBANK0
   269  0000D2                     __pbssBANK0:
   270                           	opt callstack 0
   271  0000D2                     floorf@F524:
   272                           	opt callstack 0
   273  0000D2                     	ds	4
   274  0000D6                     ___fpclassifyf@F463:
   275                           	opt callstack 0
   276  0000D6                     	ds	4
   277  0000DA                     _mystring:
   278                           	opt callstack 0
   279  0000DA                     	ds	20
   280  0000EE                     _str:
   281                           	opt callstack 0
   282  0000EE                     	ds	10
   283                           
   284                           	psect	bssBANK1
   285  000100                     __pbssBANK1:
   286                           	opt callstack 0
   287  000100                     _dbuf:
   288                           	opt callstack 0
   289  000100                     	ds	80
   290                           
   291                           	psect	cstackBANK0
   292  000080                     __pcstackBANK0:
   293                           	opt callstack 0
   294  000080                     efgtoa@ou:
   295                           	opt callstack 0
   296                           
   297                           ; 4 bytes @ 0x0
   298  000080                     	ds	4
   299  000084                     _efgtoa$931:
   300                           	opt callstack 0
   301                           
   302                           ; 2 bytes @ 0x4
   303  000084                     	ds	2
   304  000086                     _efgtoa$932:
   305                           	opt callstack 0
   306                           
   307                           ; 2 bytes @ 0x6
   308  000086                     	ds	2
   309  000088                     _efgtoa$937:
   310                           	opt callstack 0
   311                           
   312                           ; 2 bytes @ 0x8
   313  000088                     	ds	2
   314  00008A                     _efgtoa$941:
   315                           	opt callstack 0
   316                           
   317                           ; 2 bytes @ 0xA
   318  00008A                     	ds	2
   319  00008C                     _efgtoa$942:
   320                           	opt callstack 0
   321                           
   322                           ; 2 bytes @ 0xC
   323  00008C                     	ds	2
   324  00008E                     _efgtoa$943:
   325                           	opt callstack 0
   326                           
   327                           ; 2 bytes @ 0xE
   328  00008E                     	ds	2
   329  000090                     efgtoa@t:
   330                           	opt callstack 0
   331                           
   332                           ; 2 bytes @ 0x10
   333  000090                     	ds	2
   334  000092                     efgtoa@pp:
   335                           	opt callstack 0
   336                           
   337                           ; 2 bytes @ 0x12
   338  000092                     	ds	2
   339  000094                     efgtoa@m:
   340                           	opt callstack 0
   341                           
   342                           ; 2 bytes @ 0x14
   343  000094                     	ds	2
   344  000096                     efgtoa@ne:
   345                           	opt callstack 0
   346                           
   347                           ; 2 bytes @ 0x16
   348  000096                     	ds	2
   349  000098                     efgtoa@d:
   350                           	opt callstack 0
   351                           
   352                           ; 2 bytes @ 0x18
   353  000098                     	ds	2
   354  00009A                     efgtoa@sign:
   355                           	opt callstack 0
   356                           
   357                           ; 2 bytes @ 0x1A
   358  00009A                     	ds	2
   359  00009C                     efgtoa@p:
   360                           	opt callstack 0
   361                           
   362                           ; 2 bytes @ 0x1C
   363  00009C                     	ds	2
   364  00009E                     efgtoa@nmode:
   365                           	opt callstack 0
   366                           
   367                           ; 1 bytes @ 0x1E
   368  00009E                     	ds	1
   369  00009F                     efgtoa@w:
   370                           	opt callstack 0
   371                           
   372                           ; 2 bytes @ 0x1F
   373  00009F                     	ds	2
   374  0000A1                     efgtoa@mode:
   375                           	opt callstack 0
   376                           
   377                           ; 1 bytes @ 0x21
   378  0000A1                     	ds	1
   379  0000A2                     efgtoa@h:
   380                           	opt callstack 0
   381                           
   382                           ; 4 bytes @ 0x22
   383  0000A2                     	ds	4
   384  0000A6                     efgtoa@l:
   385                           	opt callstack 0
   386                           
   387                           ; 4 bytes @ 0x26
   388  0000A6                     	ds	4
   389  0000AA                     efgtoa@i:
   390                           	opt callstack 0
   391                           
   392                           ; 2 bytes @ 0x2A
   393  0000AA                     	ds	2
   394  0000AC                     efgtoa@g:
   395                           	opt callstack 0
   396                           
   397                           ; 4 bytes @ 0x2C
   398  0000AC                     	ds	4
   399  0000B0                     efgtoa@e:
   400                           	opt callstack 0
   401                           
   402                           ; 2 bytes @ 0x30
   403  0000B0                     	ds	2
   404  0000B2                     efgtoa@n:
   405                           	opt callstack 0
   406                           
   407                           ; 2 bytes @ 0x32
   408  0000B2                     	ds	2
   409  0000B4                     efgtoa@u:
   410                           	opt callstack 0
   411                           
   412                           ; 4 bytes @ 0x34
   413  0000B4                     	ds	4
   414  0000B8                     ?_sprintf:
   415                           	opt callstack 0
   416  0000B8                     sprintf@s:
   417                           	opt callstack 0
   418                           
   419                           ; 2 bytes @ 0x38
   420  0000B8                     	ds	2
   421  0000BA                     sprintf@fmt:
   422                           	opt callstack 0
   423                           
   424                           ; 2 bytes @ 0x3A
   425  0000BA                     	ds	8
   426  0000C2                     sprintf@ap:
   427                           	opt callstack 0
   428                           
   429                           ; 2 bytes @ 0x42
   430  0000C2                     	ds	2
   431  0000C4                     sprintf@f:
   432                           	opt callstack 0
   433                           
   434                           ; 6 bytes @ 0x44
   435  0000C4                     	ds	6
   436  0000CA                     Mode2@voltage:
   437                           	opt callstack 0
   438                           
   439                           ; 4 bytes @ 0x4A
   440  0000CA                     	ds	4
   441  0000CE                     Mode2@digital:
   442                           	opt callstack 0
   443                           
   444                           ; 2 bytes @ 0x4E
   445  0000CE                     	ds	2
   446  0000D0                     Mode2@i:
   447                           	opt callstack 0
   448                           
   449                           ; 2 bytes @ 0x50
   450  0000D0                     	ds	2
   451                           
   452                           	psect	cstackCOMRAM
   453  000001                     __pcstackCOMRAM:
   454                           	opt callstack 0
   455  000001                     ?i1___awmod:
   456                           	opt callstack 0
   457  000001                     i1UART_Write@data:
   458                           	opt callstack 0
   459  000001                     i1___awmod@dividend:
   460                           	opt callstack 0
   461                           
   462                           ; 2 bytes @ 0x0
   463  000001                     	ds	2
   464  000003                     i1___awmod@divisor:
   465                           	opt callstack 0
   466                           
   467                           ; 2 bytes @ 0x2
   468  000003                     	ds	2
   469  000005                     i1___awmod@counter:
   470                           	opt callstack 0
   471                           
   472                           ; 1 bytes @ 0x4
   473  000005                     	ds	1
   474  000006                     i1___awmod@sign:
   475                           	opt callstack 0
   476                           
   477                           ; 1 bytes @ 0x5
   478  000006                     	ds	1
   479  000007                     ??_Lo_ISR:
   480                           
   481                           ; 1 bytes @ 0x6
   482  000007                     	ds	5
   483  00000C                     ?_GetString:
   484                           	opt callstack 0
   485  00000C                     ?_strlen:
   486                           	opt callstack 0
   487  00000C                     ?___fpclassifyf:
   488                           	opt callstack 0
   489  00000C                     ?_isupper:
   490                           	opt callstack 0
   491  00000C                     ?_isdigit:
   492                           	opt callstack 0
   493  00000C                     ?_strncmp:
   494                           	opt callstack 0
   495  00000C                     ?_isspace:
   496                           	opt callstack 0
   497  00000C                     ?_strchr:
   498                           	opt callstack 0
   499  00000C                     ?_ADC_Read:
   500                           	opt callstack 0
   501  00000C                     ?___wmul:
   502                           	opt callstack 0
   503  00000C                     ?___awdiv:
   504                           	opt callstack 0
   505  00000C                     ?___awmod:
   506                           	opt callstack 0
   507  00000C                     ?___fladd:
   508                           	opt callstack 0
   509  00000C                     ?___fldiv:
   510                           	opt callstack 0
   511  00000C                     ?___flneg:
   512                           	opt callstack 0
   513  00000C                     ?___fltol:
   514                           	opt callstack 0
   515  00000C                     ?___xxtofl:
   516                           	opt callstack 0
   517  00000C                     UART_Write@data:
   518                           	opt callstack 0
   519  00000C                     ClearBuffer@i:
   520                           	opt callstack 0
   521  00000C                     ADC_Read@channel:
   522                           	opt callstack 0
   523  00000C                     ___wmul@multiplier:
   524                           	opt callstack 0
   525  00000C                     ___awdiv@dividend:
   526                           	opt callstack 0
   527  00000C                     ___awmod@dividend:
   528                           	opt callstack 0
   529  00000C                     isdigit@c:
   530                           	opt callstack 0
   531  00000C                     isspace@c:
   532                           	opt callstack 0
   533  00000C                     isupper@c:
   534                           	opt callstack 0
   535  00000C                     memset@dest:
   536                           	opt callstack 0
   537  00000C                     fputc@c:
   538                           	opt callstack 0
   539  00000C                     strcpy@dest:
   540                           	opt callstack 0
   541  00000C                     strlen@s:
   542                           	opt callstack 0
   543  00000C                     strncmp@_l:
   544                           	opt callstack 0
   545  00000C                     strchr@s:
   546                           	opt callstack 0
   547  00000C                     ___fleq@ff1:
   548                           	opt callstack 0
   549  00000C                     ___flneg@f1:
   550                           	opt callstack 0
   551  00000C                     ___fltol@f1:
   552                           	opt callstack 0
   553  00000C                     ___fladd@b:
   554                           	opt callstack 0
   555  00000C                     ___fldiv@b:
   556                           	opt callstack 0
   557  00000C                     ___xxtofl@val:
   558                           	opt callstack 0
   559  00000C                     ___fpclassifyf@x:
   560                           	opt callstack 0
   561                           
   562                           ; 4 bytes @ 0xB
   563  00000C                     	ds	1
   564  00000D                     UART_Write_Text@text:
   565                           	opt callstack 0
   566                           
   567                           ; 2 bytes @ 0xC
   568  00000D                     	ds	1
   569  00000E                     ??_isupper:
   570  00000E                     ??_isdigit:
   571  00000E                     ??_isspace:
   572  00000E                     ??_ADC_Read:
   573  00000E                     ___wmul@multiplicand:
   574                           	opt callstack 0
   575  00000E                     ___awdiv@divisor:
   576                           	opt callstack 0
   577  00000E                     ___awmod@divisor:
   578                           	opt callstack 0
   579  00000E                     memset@c:
   580                           	opt callstack 0
   581  00000E                     fputc@fp:
   582                           	opt callstack 0
   583  00000E                     strcpy@src:
   584                           	opt callstack 0
   585  00000E                     strlen@a:
   586                           	opt callstack 0
   587  00000E                     strncmp@_r:
   588                           	opt callstack 0
   589  00000E                     strchr@c:
   590                           	opt callstack 0
   591                           
   592                           ; 2 bytes @ 0xD
   593  00000E                     	ds	1
   594  00000F                     ??_UART_Write_Text:
   595                           
   596                           ; 1 bytes @ 0xE
   597  00000F                     	ds	1
   598  000010                     ??_fputc:
   599  000010                     ??___fpclassifyf:
   600  000010                     ??_strcpy:
   601  000010                     ??___fltol:
   602  000010                     ??___xxtofl:
   603  000010                     ___awdiv@counter:
   604                           	opt callstack 0
   605  000010                     ___awmod@counter:
   606                           	opt callstack 0
   607  000010                     ADC_Read@digital:
   608                           	opt callstack 0
   609  000010                     ___wmul@product:
   610                           	opt callstack 0
   611  000010                     memset@n:
   612                           	opt callstack 0
   613  000010                     strncmp@n:
   614                           	opt callstack 0
   615  000010                     ___fleq@ff2:
   616                           	opt callstack 0
   617  000010                     ___fladd@a:
   618                           	opt callstack 0
   619  000010                     ___fldiv@a:
   620                           	opt callstack 0
   621                           
   622                           ; 4 bytes @ 0xF
   623  000010                     	ds	1
   624  000011                     ___awdiv@sign:
   625                           	opt callstack 0
   626  000011                     ___awmod@sign:
   627                           	opt callstack 0
   628  000011                     UART_Write_Text@i:
   629                           	opt callstack 0
   630                           
   631                           ; 2 bytes @ 0x10
   632  000011                     	ds	1
   633  000012                     ??_memset:
   634  000012                     ??_strncmp:
   635  000012                     ?_tolower:
   636                           	opt callstack 0
   637  000012                     _isspace$1463:
   638                           	opt callstack 0
   639  000012                     ___awdiv@quotient:
   640                           	opt callstack 0
   641  000012                     strcpy@s:
   642                           	opt callstack 0
   643  000012                     tolower@c:
   644                           	opt callstack 0
   645                           
   646                           ; 2 bytes @ 0x11
   647  000012                     	ds	1
   648  000013                     ?_atoi:
   649                           	opt callstack 0
   650  000013                     atoi@s:
   651                           	opt callstack 0
   652  000013                     strncmp@l:
   653                           	opt callstack 0
   654                           
   655                           ; 2 bytes @ 0x12
   656  000013                     	ds	1
   657  000014                     ??_tolower:
   658  000014                     ??___fladd:
   659  000014                     ??___fldiv:
   660  000014                     ??___fleq:
   661  000014                     ___fltol@sign1:
   662                           	opt callstack 0
   663  000014                     ___xxtofl@sign:
   664                           	opt callstack 0
   665  000014                     ___fpclassifyf@e:
   666                           	opt callstack 0
   667  000014                     memset@k:
   668                           	opt callstack 0
   669  000014                     strcpy@d:
   670                           	opt callstack 0
   671                           
   672                           ; 2 bytes @ 0x13
   673  000014                     	ds	1
   674  000015                     ??_atoi:
   675  000015                     ___fltol@exp1:
   676                           	opt callstack 0
   677  000015                     ___xxtofl@exp:
   678                           	opt callstack 0
   679  000015                     fputs@s:
   680                           	opt callstack 0
   681  000015                     strncmp@r:
   682                           	opt callstack 0
   683                           
   684                           ; 2 bytes @ 0x14
   685  000015                     	ds	1
   686  000016                     memset@s:
   687                           	opt callstack 0
   688  000016                     ___xxtofl@arg:
   689                           	opt callstack 0
   690  000016                     ___fpclassifyf@u:
   691                           	opt callstack 0
   692                           
   693                           ; 4 bytes @ 0x15
   694  000016                     	ds	1
   695  000017                     ?_strstr:
   696                           	opt callstack 0
   697  000017                     fputs@fp:
   698                           	opt callstack 0
   699  000017                     strstr@h:
   700                           	opt callstack 0
   701                           
   702                           ; 2 bytes @ 0x16
   703  000017                     	ds	1
   704  000018                     ___fladd@signs:
   705                           	opt callstack 0
   706  000018                     _tolower$1566:
   707                           	opt callstack 0
   708  000018                     ___fldiv@rem:
   709                           	opt callstack 0
   710                           
   711                           ; 4 bytes @ 0x17
   712  000018                     	ds	1
   713  000019                     ___fladd@aexp:
   714                           	opt callstack 0
   715  000019                     fputs@c:
   716                           	opt callstack 0
   717  000019                     atoi@neg:
   718                           	opt callstack 0
   719  000019                     strstr@n:
   720                           	opt callstack 0
   721                           
   722                           ; 2 bytes @ 0x18
   723  000019                     	ds	1
   724  00001A                     ?___flmul:
   725                           	opt callstack 0
   726  00001A                     ___fladd@bexp:
   727                           	opt callstack 0
   728  00001A                     fputs@i:
   729                           	opt callstack 0
   730  00001A                     ___flmul@b:
   731                           	opt callstack 0
   732                           
   733                           ; 4 bytes @ 0x19
   734  00001A                     	ds	1
   735  00001B                     ___fladd@grs:
   736                           	opt callstack 0
   737  00001B                     _atoi$1432:
   738                           	opt callstack 0
   739  00001B                     strstr@nl:
   740                           	opt callstack 0
   741                           
   742                           ; 2 bytes @ 0x1A
   743  00001B                     	ds	1
   744  00001C                     ?_pad:
   745                           	opt callstack 0
   746  00001C                     ___fldiv@sign:
   747                           	opt callstack 0
   748  00001C                     pad@fp:
   749                           	opt callstack 0
   750                           
   751                           ; 2 bytes @ 0x1B
   752  00001C                     	ds	1
   753  00001D                     ___fldiv@new_exp:
   754                           	opt callstack 0
   755  00001D                     _atoi$1434:
   756                           	opt callstack 0
   757                           
   758                           ; 2 bytes @ 0x1C
   759  00001D                     	ds	1
   760  00001E                     pad@buf:
   761                           	opt callstack 0
   762  00001E                     ___flmul@a:
   763                           	opt callstack 0
   764                           
   765                           ; 4 bytes @ 0x1D
   766  00001E                     	ds	1
   767  00001F                     _atoi$1433:
   768                           	opt callstack 0
   769  00001F                     ___fldiv@grs:
   770                           	opt callstack 0
   771                           
   772                           ; 4 bytes @ 0x1E
   773  00001F                     	ds	1
   774  000020                     pad@p:
   775                           	opt callstack 0
   776  000020                     atoi@n:
   777                           	opt callstack 0
   778                           
   779                           ; 2 bytes @ 0x1F
   780  000020                     	ds	2
   781  000022                     ??___flmul:
   782  000022                     ??_pad:
   783                           
   784                           ; 1 bytes @ 0x21
   785  000022                     	ds	1
   786  000023                     ___fldiv@bexp:
   787                           	opt callstack 0
   788  000023                     pad@i:
   789                           	opt callstack 0
   790                           
   791                           ; 2 bytes @ 0x22
   792  000023                     	ds	1
   793  000024                     ___fldiv@aexp:
   794                           	opt callstack 0
   795                           
   796                           ; 1 bytes @ 0x23
   797  000024                     	ds	1
   798  000025                     ?_floorf:
   799                           	opt callstack 0
   800  000025                     pad@w:
   801                           	opt callstack 0
   802  000025                     floorf@x:
   803                           	opt callstack 0
   804                           
   805                           ; 4 bytes @ 0x24
   806  000025                     	ds	1
   807  000026                     ___flmul@sign:
   808                           	opt callstack 0
   809                           
   810                           ; 1 bytes @ 0x25
   811  000026                     	ds	1
   812  000027                     ___flmul@aexp:
   813                           	opt callstack 0
   814                           
   815                           ; 1 bytes @ 0x26
   816  000027                     	ds	1
   817  000028                     ___flmul@grs:
   818                           	opt callstack 0
   819                           
   820                           ; 4 bytes @ 0x27
   821  000028                     	ds	1
   822  000029                     ??_floorf:
   823                           
   824                           ; 1 bytes @ 0x28
   825  000029                     	ds	3
   826  00002C                     ___flmul@bexp:
   827                           	opt callstack 0
   828                           
   829                           ; 1 bytes @ 0x2B
   830  00002C                     	ds	1
   831  00002D                     ___flmul@prod:
   832                           	opt callstack 0
   833                           
   834                           ; 4 bytes @ 0x2C
   835  00002D                     	ds	2
   836  00002F                     floorf@m:
   837                           	opt callstack 0
   838                           
   839                           ; 4 bytes @ 0x2E
   840  00002F                     	ds	2
   841  000031                     ___flmul@temp:
   842                           	opt callstack 0
   843                           
   844                           ; 2 bytes @ 0x30
   845  000031                     	ds	2
   846  000033                     ?___flsub:
   847                           	opt callstack 0
   848  000033                     floorf@e:
   849                           	opt callstack 0
   850  000033                     ___flge@ff1:
   851                           	opt callstack 0
   852  000033                     ___flsub@b:
   853                           	opt callstack 0
   854                           
   855                           ; 4 bytes @ 0x32
   856  000033                     	ds	2
   857  000035                     floorf@u:
   858                           	opt callstack 0
   859                           
   860                           ; 4 bytes @ 0x34
   861  000035                     	ds	2
   862  000037                     ___flge@ff2:
   863                           	opt callstack 0
   864  000037                     ___flsub@a:
   865                           	opt callstack 0
   866                           
   867                           ; 4 bytes @ 0x36
   868  000037                     	ds	4
   869  00003B                     ??___flge:
   870                           
   871                           ; 1 bytes @ 0x3A
   872  00003B                     	ds	4
   873  00003F                     ?_efgtoa:
   874                           	opt callstack 0
   875  00003F                     efgtoa@fp:
   876                           	opt callstack 0
   877                           
   878                           ; 2 bytes @ 0x3E
   879  00003F                     	ds	2
   880  000041                     efgtoa@f:
   881                           	opt callstack 0
   882                           
   883                           ; 4 bytes @ 0x40
   884  000041                     	ds	4
   885  000045                     efgtoa@c:
   886                           	opt callstack 0
   887                           
   888                           ; 1 bytes @ 0x44
   889  000045                     	ds	1
   890  000046                     ??_efgtoa:
   891                           
   892                           ; 1 bytes @ 0x45
   893  000046                     	ds	5
   894  00004B                     ?_vfpfcnvrt:
   895                           	opt callstack 0
   896  00004B                     vfpfcnvrt@fp:
   897                           	opt callstack 0
   898                           
   899                           ; 2 bytes @ 0x4A
   900  00004B                     	ds	2
   901  00004D                     vfpfcnvrt@fmt:
   902                           	opt callstack 0
   903                           
   904                           ; 2 bytes @ 0x4C
   905  00004D                     	ds	2
   906  00004F                     vfpfcnvrt@ap:
   907                           	opt callstack 0
   908                           
   909                           ; 2 bytes @ 0x4E
   910  00004F                     	ds	2
   911  000051                     ??_vfpfcnvrt:
   912                           
   913                           ; 1 bytes @ 0x50
   914  000051                     	ds	4
   915  000055                     _vfpfcnvrt$957:
   916                           	opt callstack 0
   917                           
   918                           ; 2 bytes @ 0x54
   919  000055                     	ds	2
   920  000057                     _vfpfcnvrt$961:
   921                           	opt callstack 0
   922                           
   923                           ; 2 bytes @ 0x56
   924  000057                     	ds	2
   925  000059                     vfpfcnvrt@f:
   926                           	opt callstack 0
   927                           
   928                           ; 4 bytes @ 0x58
   929  000059                     	ds	4
   930  00005D                     vfpfcnvrt@ct:
   931                           	opt callstack 0
   932                           
   933                           ; 3 bytes @ 0x5C
   934  00005D                     	ds	3
   935  000060                     vfpfcnvrt@c:
   936                           	opt callstack 0
   937                           
   938                           ; 1 bytes @ 0x5F
   939  000060                     	ds	1
   940  000061                     ?_vfprintf:
   941                           	opt callstack 0
   942  000061                     vfprintf@fp:
   943                           	opt callstack 0
   944                           
   945                           ; 2 bytes @ 0x60
   946  000061                     	ds	2
   947  000063                     vfprintf@fmt:
   948                           	opt callstack 0
   949                           
   950                           ; 2 bytes @ 0x62
   951  000063                     	ds	2
   952  000065                     vfprintf@ap:
   953                           	opt callstack 0
   954                           
   955                           ; 2 bytes @ 0x64
   956  000065                     	ds	2
   957  000067                     vfprintf@cfmt:
   958                           	opt callstack 0
   959                           
   960                           ; 2 bytes @ 0x66
   961  000067                     	ds	2
   962  000069                     
   963                           ; 1 bytes @ 0x68
   964 ;;
   965 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   966 ;;
   967 ;; *************** function _main *****************
   968 ;; Defined at:
   969 ;;		line 44 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   983 ;;      Params:         0       0       0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels required when called:   13
   989 ;; This function calls:
   990 ;;		_ClearBuffer
   991 ;;		_GetString
   992 ;;		_Mode1
   993 ;;		_Mode2
   994 ;;		_SYSTEM_Initialize
   995 ;;		_strstr
   996 ;; This function is called by:
   997 ;;		Startup code after reset
   998 ;; This function uses a non-reentrant model
   999 ;;
  1000                           
  1001                           	psect	text0
  1002  0033B4                     __ptext0:
  1003                           	opt callstack 0
  1004  0033B4                     _main:
  1005                           	opt callstack 18
  1006  0033B4                     
  1007                           ;main.c: 47:     SYSTEM_Initialize() ;
  1008  0033B4  ECED  F01C         	call	_SYSTEM_Initialize	;wreg free
  1009  0033B8                     l5656:
  1010                           
  1011                           ;main.c: 51:         if(strstr(GetString(), "clear") != ((void*)0))
  1012  0033B8  EC1F  F01D         	call	_GetString	;wreg free
  1013  0033BC  C00C  F017         	movff	?_GetString,strstr@h
  1014  0033C0  C00D  F018         	movff	?_GetString+1,strstr@h+1
  1015  0033C4  0E1B               	movlw	low STR_6
  1016  0033C6  6E19               	movwf	strstr@n^0,c
  1017  0033C8  0E06               	movlw	high STR_6
  1018  0033CA  6E1A               	movwf	(strstr@n+1)^0,c
  1019  0033CC  EC75  F018         	call	_strstr	;wreg free
  1020  0033D0  5017               	movf	?_strstr^0,w,c
  1021  0033D2  1018               	iorwf	(?_strstr+1)^0,w,c
  1022  0033D4  B4D8               	btfsc	status,2,c
  1023  0033D6  EFEF  F019         	goto	u7711
  1024  0033DA  EFF1  F019         	goto	u7710
  1025  0033DE                     u7711:
  1026  0033DE  EFF5  F019         	goto	l5660
  1027  0033E2                     u7710:
  1028  0033E2                     
  1029                           ;main.c: 52:             ClearBuffer();
  1030  0033E2  ECFD  F01B         	call	_ClearBuffer	;wreg free
  1031  0033E6  EFDC  F019         	goto	l5656
  1032  0033EA                     l5660:
  1033  0033EA  EC1F  F01D         	call	_GetString	;wreg free
  1034  0033EE  C00C  F017         	movff	?_GetString,strstr@h
  1035  0033F2  C00D  F018         	movff	?_GetString+1,strstr@h+1
  1036  0033F6  0E0F               	movlw	low STR_7
  1037  0033F8  6E19               	movwf	strstr@n^0,c
  1038  0033FA  0E06               	movlw	high STR_7
  1039  0033FC  6E1A               	movwf	(strstr@n+1)^0,c
  1040  0033FE  EC75  F018         	call	_strstr	;wreg free
  1041  003402  5017               	movf	?_strstr^0,w,c
  1042  003404  1018               	iorwf	(?_strstr+1)^0,w,c
  1043  003406  B4D8               	btfsc	status,2,c
  1044  003408  EF08  F01A         	goto	u7721
  1045  00340C  EF0A  F01A         	goto	u7720
  1046  003410                     u7721:
  1047  003410  EF0E  F01A         	goto	l5664
  1048  003414                     u7720:
  1049  003414                     
  1050                           ;main.c: 54:             Mode1();
  1051  003414  ECCC  F01C         	call	_Mode1	;wreg free
  1052  003418  EFDC  F019         	goto	l5656
  1053  00341C                     l5664:
  1054  00341C  EC1F  F01D         	call	_GetString	;wreg free
  1055  003420  C00C  F017         	movff	?_GetString,strstr@h
  1056  003424  C00D  F018         	movff	?_GetString+1,strstr@h+1
  1057  003428  0E15               	movlw	low STR_8
  1058  00342A  6E19               	movwf	strstr@n^0,c
  1059  00342C  0E06               	movlw	high STR_8
  1060  00342E  6E1A               	movwf	(strstr@n+1)^0,c
  1061  003430  EC75  F018         	call	_strstr	;wreg free
  1062  003434  5017               	movf	?_strstr^0,w,c
  1063  003436  1018               	iorwf	(?_strstr+1)^0,w,c
  1064  003438  B4D8               	btfsc	status,2,c
  1065  00343A  EF21  F01A         	goto	u7731
  1066  00343E  EF23  F01A         	goto	u7730
  1067  003442                     u7731:
  1068  003442  EF27  F01A         	goto	l165
  1069  003446                     u7730:
  1070  003446                     
  1071                           ;main.c: 57:             Mode2();
  1072  003446  ECCE  F014         	call	_Mode2	;wreg free
  1073  00344A  EFDC  F019         	goto	l5656
  1074  00344E                     l165:
  1075  00344E  EFDC  F019         	goto	l5656
  1076  003452  EF36  F000         	goto	start
  1077  003456                     __end_of_main:
  1078                           	opt callstack 0
  1079                           
  1080 ;; *************** function _SYSTEM_Initialize *****************
  1081 ;; Defined at:
  1082 ;;		line 60 in file "setting_hardaware/setting.c"
  1083 ;; Parameters:    Size  Location     Type
  1084 ;;		None
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;		None
  1087 ;; Return value:  Size  Location     Type
  1088 ;;                  1    wreg      void 
  1089 ;; Registers used:
  1090 ;;		wreg, status,2, cstack
  1091 ;; Tracked objects:
  1092 ;;		On entry : 0/0
  1093 ;;		On exit  : 0/0
  1094 ;;		Unchanged: 0/0
  1095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1096 ;;      Params:         0       0       0       0       0       0       0
  1097 ;;      Locals:         0       0       0       0       0       0       0
  1098 ;;      Temps:          0       0       0       0       0       0       0
  1099 ;;      Totals:         0       0       0       0       0       0       0
  1100 ;;Total ram usage:        0 bytes
  1101 ;; Hardware stack levels used:    1
  1102 ;; Hardware stack levels required when called:    5
  1103 ;; This function calls:
  1104 ;;		_ADC_Initialize
  1105 ;;		_CCP1_Initialize
  1106 ;;		_INTERRUPT_Initialize
  1107 ;;		_OSCILLATOR_Initialize
  1108 ;;		_UART_Initialize
  1109 ;; This function is called by:
  1110 ;;		_main
  1111 ;; This function uses a non-reentrant model
  1112 ;;
  1113                           
  1114                           	psect	text1
  1115  0039DA                     __ptext1:
  1116                           	opt callstack 0
  1117  0039DA                     _SYSTEM_Initialize:
  1118                           	opt callstack 25
  1119  0039DA                     
  1120                           ;setting_hardaware/setting.c: 63:     OSCILLATOR_Initialize();
  1121  0039DA  EC24  F01D         	call	_OSCILLATOR_Initialize	;wreg free
  1122                           
  1123                           ;setting_hardaware/setting.c: 67:     INTERRUPT_Initialize();
  1124  0039DE  EC28  F01D         	call	_INTERRUPT_Initialize	;wreg free
  1125  0039E2                     
  1126                           ;setting_hardaware/setting.c: 68:     UART_Initialize();
  1127  0039E2  ECBB  F01C         	call	_UART_Initialize	;wreg free
  1128  0039E6                     
  1129                           ;setting_hardaware/setting.c: 69:     CCP1_Initialize();
  1130  0039E6  EC19  F01D         	call	_CCP1_Initialize	;wreg free
  1131  0039EA                     
  1132                           ;setting_hardaware/setting.c: 70:     ADC_Initialize();
  1133  0039EA  ECF8  F01C         	call	_ADC_Initialize	;wreg free
  1134  0039EE  0012               	return		;funcret
  1135  0039F0                     __end_of_SYSTEM_Initialize:
  1136                           	opt callstack 0
  1137                           
  1138 ;; *************** function _UART_Initialize *****************
  1139 ;; Defined at:
  1140 ;;		line 7 in file "setting_hardaware/uart.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;                  1    wreg      void 
  1147 ;; Registers used:
  1148 ;;		wreg, status,2
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1154 ;;      Params:         0       0       0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0       0       0
  1156 ;;      Temps:          0       0       0       0       0       0       0
  1157 ;;      Totals:         0       0       0       0       0       0       0
  1158 ;;Total ram usage:        0 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    4
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_SYSTEM_Initialize
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text2
  1169  003976                     __ptext2:
  1170                           	opt callstack 0
  1171  003976                     _UART_Initialize:
  1172                           	opt callstack 25
  1173  003976                     
  1174                           ;setting_hardaware/uart.c: 12:     TRISCbits.TRISC6 = 0;
  1175  003976  9C94               	bcf	148,6,c	;volatile
  1176                           
  1177                           ;setting_hardaware/uart.c: 13:     TRISCbits.TRISC7 = 1;
  1178  003978  8E94               	bsf	148,7,c	;volatile
  1179                           
  1180                           ;setting_hardaware/uart.c: 28:     TXSTAbits.SYNC = 0;
  1181  00397A  98AC               	bcf	172,4,c	;volatile
  1182                           
  1183                           ;setting_hardaware/uart.c: 35:     BAUDCONbits.BRG16 = 0;
  1184  00397C  96B8               	bcf	184,3,c	;volatile
  1185                           
  1186                           ;setting_hardaware/uart.c: 36:     TXSTAbits.BRGH = 0;
  1187  00397E  94AC               	bcf	172,2,c	;volatile
  1188  003980                     
  1189                           ;setting_hardaware/uart.c: 37:     SPBRG = 12;
  1190  003980  0E0C               	movlw	12
  1191  003982  6EAF               	movwf	175,c	;volatile
  1192  003984                     
  1193                           ;setting_hardaware/uart.c: 43:     RCSTAbits.SPEN = 1;
  1194  003984  8EAB               	bsf	171,7,c	;volatile
  1195  003986                     
  1196                           ;setting_hardaware/uart.c: 44:     PIR1bits.TXIF = 0;
  1197  003986  989E               	bcf	158,4,c	;volatile
  1198  003988                     
  1199                           ;setting_hardaware/uart.c: 45:     PIR1bits.RCIF = 0;
  1200  003988  9A9E               	bcf	158,5,c	;volatile
  1201  00398A                     
  1202                           ;setting_hardaware/uart.c: 46:     TXSTAbits.TXEN = 1;
  1203  00398A  8AAC               	bsf	172,5,c	;volatile
  1204  00398C                     
  1205                           ;setting_hardaware/uart.c: 47:     RCSTAbits.CREN = 1;
  1206  00398C  88AB               	bsf	171,4,c	;volatile
  1207  00398E                     
  1208                           ;setting_hardaware/uart.c: 51:     PIE1bits.TXIE = 0;
  1209  00398E  989D               	bcf	157,4,c	;volatile
  1210  003990                     
  1211                           ;setting_hardaware/uart.c: 52:     IPR1bits.TXIP = 0;
  1212  003990  989F               	bcf	159,4,c	;volatile
  1213  003992                     
  1214                           ;setting_hardaware/uart.c: 53:     PIE1bits.RCIE = 1;
  1215  003992  8A9D               	bsf	157,5,c	;volatile
  1216  003994                     
  1217                           ;setting_hardaware/uart.c: 54:     IPR1bits.RCIP = 0;
  1218  003994  9A9F               	bcf	159,5,c	;volatile
  1219  003996  0012               	return		;funcret
  1220  003998                     __end_of_UART_Initialize:
  1221                           	opt callstack 0
  1222                           
  1223 ;; *************** function _OSCILLATOR_Initialize *****************
  1224 ;; Defined at:
  1225 ;;		line 73 in file "setting_hardaware/setting.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;		None
  1228 ;; Auto vars:     Size  Location     Type
  1229 ;;		None
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  1    wreg      void 
  1232 ;; Registers used:
  1233 ;;		None
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1239 ;;      Params:         0       0       0       0       0       0       0
  1240 ;;      Locals:         0       0       0       0       0       0       0
  1241 ;;      Temps:          0       0       0       0       0       0       0
  1242 ;;      Totals:         0       0       0       0       0       0       0
  1243 ;;Total ram usage:        0 bytes
  1244 ;; Hardware stack levels used:    1
  1245 ;; Hardware stack levels required when called:    4
  1246 ;; This function calls:
  1247 ;;		Nothing
  1248 ;; This function is called by:
  1249 ;;		_SYSTEM_Initialize
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text3
  1254  003A48                     __ptext3:
  1255                           	opt callstack 0
  1256  003A48                     _OSCILLATOR_Initialize:
  1257                           	opt callstack 25
  1258  003A48                     
  1259                           ;setting_hardaware/setting.c: 78:     OSCCONbits.IRCF2 = 1;
  1260  003A48  8CD3               	bsf	211,6,c	;volatile
  1261                           
  1262                           ;setting_hardaware/setting.c: 79:     OSCCONbits.IRCF1 = 1;
  1263  003A4A  8AD3               	bsf	211,5,c	;volatile
  1264                           
  1265                           ;setting_hardaware/setting.c: 80:     OSCCONbits.IRCF0 = 1;
  1266  003A4C  88D3               	bsf	211,4,c	;volatile
  1267  003A4E  0012               	return		;funcret
  1268  003A50                     __end_of_OSCILLATOR_Initialize:
  1269                           	opt callstack 0
  1270                           
  1271 ;; *************** function _INTERRUPT_Initialize *****************
  1272 ;; Defined at:
  1273 ;;		line 3 in file "setting_hardaware/interrupt_manager.c"
  1274 ;; Parameters:    Size  Location     Type
  1275 ;;		None
  1276 ;; Auto vars:     Size  Location     Type
  1277 ;;		None
  1278 ;; Return value:  Size  Location     Type
  1279 ;;                  1    wreg      void 
  1280 ;; Registers used:
  1281 ;;		None
  1282 ;; Tracked objects:
  1283 ;;		On entry : 0/0
  1284 ;;		On exit  : 0/0
  1285 ;;		Unchanged: 0/0
  1286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1287 ;;      Params:         0       0       0       0       0       0       0
  1288 ;;      Locals:         0       0       0       0       0       0       0
  1289 ;;      Temps:          0       0       0       0       0       0       0
  1290 ;;      Totals:         0       0       0       0       0       0       0
  1291 ;;Total ram usage:        0 bytes
  1292 ;; Hardware stack levels used:    1
  1293 ;; Hardware stack levels required when called:    4
  1294 ;; This function calls:
  1295 ;;		Nothing
  1296 ;; This function is called by:
  1297 ;;		_SYSTEM_Initialize
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           	psect	text4
  1302  003A50                     __ptext4:
  1303                           	opt callstack 0
  1304  003A50                     _INTERRUPT_Initialize:
  1305                           	opt callstack 25
  1306  003A50                     
  1307                           ;setting_hardaware/interrupt_manager.c: 5:     RCONbits.IPEN = 1;
  1308  003A50  8ED0               	bsf	208,7,c	;volatile
  1309                           
  1310                           ;setting_hardaware/interrupt_manager.c: 6:     INTCONbits.GIEH = 1;
  1311  003A52  8EF2               	bsf	242,7,c	;volatile
  1312                           
  1313                           ;setting_hardaware/interrupt_manager.c: 7:     INTCONbits.GIEL = 1;
  1314  003A54  8CF2               	bsf	242,6,c	;volatile
  1315  003A56  0012               	return		;funcret
  1316  003A58                     __end_of_INTERRUPT_Initialize:
  1317                           	opt callstack 0
  1318                           
  1319 ;; *************** function _CCP1_Initialize *****************
  1320 ;; Defined at:
  1321 ;;		line 3 in file "setting_hardaware/ccp1.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1335 ;;      Params:         0       0       0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    4
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_SYSTEM_Initialize
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text5
  1350  003A32                     __ptext5:
  1351                           	opt callstack 0
  1352  003A32                     _CCP1_Initialize:
  1353                           	opt callstack 25
  1354  003A32                     
  1355                           ;setting_hardaware/ccp1.c: 4:     TRISCbits.TRISC2=0;
  1356  003A32  9494               	bcf	148,2,c	;volatile
  1357  003A34                     
  1358                           ;setting_hardaware/ccp1.c: 5:     CCP1CON=9;
  1359  003A34  0E09               	movlw	9
  1360  003A36  6EBD               	movwf	189,c	;volatile
  1361  003A38                     
  1362                           ;setting_hardaware/ccp1.c: 6:     PIR1bits.CCP1IF=0;
  1363  003A38  949E               	bcf	158,2,c	;volatile
  1364  003A3A                     
  1365                           ;setting_hardaware/ccp1.c: 7:     IPR1bits.CCP1IP = 1;
  1366  003A3A  849F               	bsf	159,2,c	;volatile
  1367  003A3C  0012               	return		;funcret
  1368  003A3E                     __end_of_CCP1_Initialize:
  1369                           	opt callstack 0
  1370                           
  1371 ;; *************** function _ADC_Initialize *****************
  1372 ;; Defined at:
  1373 ;;		line 3 in file "setting_hardaware/adc.c"
  1374 ;; Parameters:    Size  Location     Type
  1375 ;;		None
  1376 ;; Auto vars:     Size  Location     Type
  1377 ;;		None
  1378 ;; Return value:  Size  Location     Type
  1379 ;;                  1    wreg      void 
  1380 ;; Registers used:
  1381 ;;		wreg, status,2
  1382 ;; Tracked objects:
  1383 ;;		On entry : 0/0
  1384 ;;		On exit  : 0/0
  1385 ;;		Unchanged: 0/0
  1386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1387 ;;      Params:         0       0       0       0       0       0       0
  1388 ;;      Locals:         0       0       0       0       0       0       0
  1389 ;;      Temps:          0       0       0       0       0       0       0
  1390 ;;      Totals:         0       0       0       0       0       0       0
  1391 ;;Total ram usage:        0 bytes
  1392 ;; Hardware stack levels used:    1
  1393 ;; Hardware stack levels required when called:    4
  1394 ;; This function calls:
  1395 ;;		Nothing
  1396 ;; This function is called by:
  1397 ;;		_SYSTEM_Initialize
  1398 ;; This function uses a non-reentrant model
  1399 ;;
  1400                           
  1401                           	psect	text6
  1402  0039F0                     __ptext6:
  1403                           	opt callstack 0
  1404  0039F0                     _ADC_Initialize:
  1405                           	opt callstack 25
  1406  0039F0                     
  1407                           ;setting_hardaware/adc.c: 4:     TRISA = 0xff;
  1408  0039F0  6892               	setf	146,c	;volatile
  1409  0039F2                     
  1410                           ;setting_hardaware/adc.c: 5:     ADCON1 = 0x0e;
  1411  0039F2  0E0E               	movlw	14
  1412  0039F4  6EC1               	movwf	193,c	;volatile
  1413  0039F6                     
  1414                           ;setting_hardaware/adc.c: 7:     ADFM = 1 ;
  1415  0039F6  8EC0               	bsf	4032,7,c	;volatile
  1416                           
  1417                           ;setting_hardaware/adc.c: 8:     ADCON2bits.ADCS = 7;
  1418  0039F8  0E07               	movlw	7
  1419  0039FA  12C0               	iorwf	192,f,c	;volatile
  1420                           
  1421                           ;setting_hardaware/adc.c: 9:     ADRESH=0;
  1422  0039FC  0E00               	movlw	0
  1423  0039FE  6EC4               	movwf	196,c	;volatile
  1424                           
  1425                           ;setting_hardaware/adc.c: 10:     ADRESL=0;
  1426  003A00  0E00               	movlw	0
  1427  003A02  6EC3               	movwf	195,c	;volatile
  1428  003A04  0012               	return		;funcret
  1429  003A06                     __end_of_ADC_Initialize:
  1430                           	opt callstack 0
  1431                           
  1432 ;; *************** function _Mode2 *****************
  1433 ;; Defined at:
  1434 ;;		line 20 in file "main.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;  i               2   80[BANK0 ] int 
  1439 ;;  voltage         4   74[BANK0 ] float 
  1440 ;;  digital         2   78[BANK0 ] int 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         0       0       0       0       0       0       0
  1451 ;;      Locals:         0       8       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0
  1453 ;;      Totals:         0       8       0       0       0       0       0
  1454 ;;Total ram usage:        8 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:   12
  1457 ;; This function calls:
  1458 ;;		_ADC_Read
  1459 ;;		_ClearBuffer
  1460 ;;		_GetString
  1461 ;;		_UART_Write_Text
  1462 ;;		___flmul
  1463 ;;		___xxtofl
  1464 ;;		_memset
  1465 ;;		_sprintf
  1466 ;;		_strstr
  1467 ;; This function is called by:
  1468 ;;		_main
  1469 ;; This function uses a non-reentrant model
  1470 ;;
  1471                           
  1472                           	psect	text7
  1473  00299C                     __ptext7:
  1474                           	opt callstack 0
  1475  00299C                     _Mode2:
  1476                           	opt callstack 18
  1477  00299C                     
  1478                           ;main.c: 21:     ClearBuffer();
  1479  00299C  ECFD  F01B         	call	_ClearBuffer	;wreg free
  1480  0029A0                     l5626:
  1481                           
  1482                           ;main.c: 25:     {;main.c: 26:         if(strstr(GetString(), "e") != ((void*)0)){
  1483  0029A0  EC1F  F01D         	call	_GetString	;wreg free
  1484  0029A4  C00C  F017         	movff	?_GetString,strstr@h
  1485  0029A8  C00D  F018         	movff	?_GetString+1,strstr@h+1
  1486  0029AC  0E39               	movlw	low STR_3
  1487  0029AE  6E19               	movwf	strstr@n^0,c
  1488  0029B0  0E06               	movlw	high STR_3
  1489  0029B2  6E1A               	movwf	(strstr@n+1)^0,c
  1490  0029B4  EC75  F018         	call	_strstr	;wreg free
  1491  0029B8  5017               	movf	?_strstr^0,w,c
  1492  0029BA  1018               	iorwf	(?_strstr+1)^0,w,c
  1493  0029BC  B4D8               	btfsc	status,2,c
  1494  0029BE  EFE3  F014         	goto	u7691
  1495  0029C2  EFE5  F014         	goto	u7690
  1496  0029C6                     u7691:
  1497  0029C6  EFE7  F014         	goto	l5630
  1498  0029CA                     u7690:
  1499  0029CA  EF5B  F015         	goto	l5652
  1500  0029CE                     l5630:
  1501                           
  1502                           ;main.c: 29:         digital=ADC_Read(0);
  1503  0029CE  0E00               	movlw	0
  1504  0029D0  6E0D               	movwf	(ADC_Read@channel+1)^0,c
  1505  0029D2  0E00               	movlw	0
  1506  0029D4  6E0C               	movwf	ADC_Read@channel^0,c
  1507  0029D6  EC1E  F01C         	call	_ADC_Read	;wreg free
  1508  0029DA  C00C  F0CE         	movff	?_ADC_Read,Mode2@digital
  1509  0029DE  C00D  F0CF         	movff	?_ADC_Read+1,Mode2@digital+1
  1510  0029E2                     
  1511                           ;main.c: 30:         voltage = digital* ((float)5/1023);
  1512  0029E2  C0CE  F00C         	movff	Mode2@digital,___xxtofl@val
  1513  0029E6  C0CF  F00D         	movff	Mode2@digital+1,___xxtofl@val+1
  1514  0029EA  0E00               	movlw	0
  1515  0029EC  BE0D               	btfsc	(___xxtofl@val+1)^0,7,c
  1516  0029EE  0EFF               	movlw	-1
  1517  0029F0  6E0E               	movwf	(___xxtofl@val+2)^0,c
  1518  0029F2  6E0F               	movwf	(___xxtofl@val+3)^0,c
  1519  0029F4  0E01               	movlw	1
  1520  0029F6  EC71  F012         	call	___xxtofl
  1521  0029FA  C00C  F01A         	movff	?___xxtofl,___flmul@b
  1522  0029FE  C00D  F01B         	movff	?___xxtofl+1,___flmul@b+1
  1523  002A02  C00E  F01C         	movff	?___xxtofl+2,___flmul@b+2
  1524  002A06  C00F  F01D         	movff	?___xxtofl+3,___flmul@b+3
  1525  002A0A  0E0A               	movlw	10
  1526  002A0C  6E1E               	movwf	___flmul@a^0,c
  1527  002A0E  0E28               	movlw	40
  1528  002A10  6E1F               	movwf	(___flmul@a+1)^0,c
  1529  002A12  0EA0               	movlw	160
  1530  002A14  6E20               	movwf	(___flmul@a+2)^0,c
  1531  002A16  0E3B               	movlw	59
  1532  002A18  6E21               	movwf	(___flmul@a+3)^0,c
  1533  002A1A  EC86  F00D         	call	___flmul	;wreg free
  1534  002A1E  C01A  F0CA         	movff	?___flmul,Mode2@voltage
  1535  002A22  C01B  F0CB         	movff	?___flmul+1,Mode2@voltage+1
  1536  002A26  C01C  F0CC         	movff	?___flmul+2,Mode2@voltage+2
  1537  002A2A  C01D  F0CD         	movff	?___flmul+3,Mode2@voltage+3
  1538  002A2E                     
  1539                           ;main.c: 33:         memset(str, 0, 10);
  1540  002A2E  0EEE               	movlw	low _str
  1541  002A30  6E0C               	movwf	memset@dest^0,c
  1542  002A32  0E00               	movlw	high _str
  1543  002A34  6E0D               	movwf	(memset@dest+1)^0,c
  1544  002A36  0E00               	movlw	0
  1545  002A38  6E0F               	movwf	(memset@c+1)^0,c
  1546  002A3A  0E00               	movlw	0
  1547  002A3C  6E0E               	movwf	memset@c^0,c
  1548  002A3E  0E00               	movlw	0
  1549  002A40  6E11               	movwf	(memset@n+1)^0,c
  1550  002A42  0E0A               	movlw	10
  1551  002A44  6E10               	movwf	memset@n^0,c
  1552  002A46  EC13  F014         	call	_memset	;wreg free
  1553  002A4A                     
  1554                           ;main.c: 34:         sprintf(str, "%.2f", voltage);
  1555  002A4A  0EEE               	movlw	low _str
  1556  002A4C  0100               	movlb	0	; () banked
  1557  002A4E  6FB8               	movwf	sprintf@s& (0+255),b
  1558  002A50  0E00               	movlw	high _str
  1559  002A52  6FB9               	movwf	(sprintf@s+1)& (0+255),b
  1560  002A54  0E21               	movlw	low STR_4
  1561  002A56  6FBA               	movwf	sprintf@fmt& (0+255),b
  1562  002A58  0E06               	movlw	high STR_4
  1563  002A5A  6FBB               	movwf	(sprintf@fmt+1)& (0+255),b
  1564  002A5C  C0CA  F0BC         	movff	Mode2@voltage,?_sprintf+4
  1565  002A60  C0CB  F0BD         	movff	Mode2@voltage+1,?_sprintf+5
  1566  002A64  C0CC  F0BE         	movff	Mode2@voltage+2,?_sprintf+6
  1567  002A68  C0CD  F0BF         	movff	Mode2@voltage+3,?_sprintf+7
  1568  002A6C  ECF7  F01A         	call	_sprintf	;wreg free
  1569  002A70                     
  1570                           ;main.c: 35:         UART_Write_Text(str);
  1571  002A70  0EEE               	movlw	low _str
  1572  002A72  6E0D               	movwf	UART_Write_Text@text^0,c
  1573  002A74  0E00               	movlw	high _str
  1574  002A76  6E0E               	movwf	(UART_Write_Text@text+1)^0,c
  1575  002A78  EC2B  F01A         	call	_UART_Write_Text	;wreg free
  1576  002A7C                     
  1577                           ;main.c: 36:         UART_Write_Text(" ");
  1578  002A7C  0E06               	movlw	low (STR_1+5)
  1579  002A7E  6E0D               	movwf	UART_Write_Text@text^0,c
  1580  002A80  0E06               	movlw	high (STR_1+5)
  1581  002A82  6E0E               	movwf	(UART_Write_Text@text+1)^0,c
  1582  002A84  EC2B  F01A         	call	_UART_Write_Text	;wreg free
  1583  002A88                     
  1584                           ;main.c: 38:         for(int i = 0 ; i < 10000 ; i++) ;
  1585  002A88  0E00               	movlw	0
  1586  002A8A  0100               	movlb	0	; () banked
  1587  002A8C  6FD1               	movwf	(Mode2@i+1)& (0+255),b
  1588  002A8E  0E00               	movlw	0
  1589  002A90  6FD0               	movwf	Mode2@i& (0+255),b
  1590  002A92                     l5648:
  1591                           
  1592                           ; BSR set to: 0
  1593  002A92  4BD0               	infsnz	Mode2@i& (0+255),f,b
  1594  002A94  2BD1               	incf	(Mode2@i+1)& (0+255),f,b
  1595  002A96                     
  1596                           ; BSR set to: 0
  1597  002A96  BFD1               	btfsc	(Mode2@i+1)& (0+255),7,b
  1598  002A98  EF57  F015         	goto	u7701
  1599  002A9C  0E10               	movlw	16
  1600  002A9E  5DD0               	subwf	Mode2@i& (0+255),w,b
  1601  002AA0  0E27               	movlw	39
  1602  002AA2  59D1               	subwfb	(Mode2@i+1)& (0+255),w,b
  1603  002AA4  A0D8               	btfss	status,0,c
  1604  002AA6  EF57  F015         	goto	u7701
  1605  002AAA  EF59  F015         	goto	u7700
  1606  002AAE                     u7701:
  1607  002AAE  EF49  F015         	goto	l5648
  1608  002AB2                     u7700:
  1609  002AB2  EFD0  F014         	goto	l5626
  1610  002AB6                     l5652:
  1611                           
  1612                           ;main.c: 41:     ClearBuffer();
  1613  002AB6  ECFD  F01B         	call	_ClearBuffer	;wreg free
  1614  002ABA  0012               	return		;funcret
  1615  002ABC                     __end_of_Mode2:
  1616                           	opt callstack 0
  1617                           
  1618 ;; *************** function _strstr *****************
  1619 ;; Defined at:
  1620 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strstr.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;  h               2   22[COMRAM] PTR const unsigned char 
  1623 ;;		 -> NULL(0), mystring(20), 
  1624 ;;  n               2   24[COMRAM] PTR const unsigned char 
  1625 ;;		 -> STR_8(6), STR_7(6), STR_6(6), STR_3(2), 
  1626 ;; Auto vars:     Size  Location     Type
  1627 ;;  nl              2   26[COMRAM] unsigned int 
  1628 ;; Return value:  Size  Location     Type
  1629 ;;                  2   22[COMRAM] PTR unsigned char 
  1630 ;; Registers used:
  1631 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1632 ;; Tracked objects:
  1633 ;;		On entry : 0/0
  1634 ;;		On exit  : 0/0
  1635 ;;		Unchanged: 0/0
  1636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1637 ;;      Params:         4       0       0       0       0       0       0
  1638 ;;      Locals:         2       0       0       0       0       0       0
  1639 ;;      Temps:          0       0       0       0       0       0       0
  1640 ;;      Totals:         6       0       0       0       0       0       0
  1641 ;;Total ram usage:        6 bytes
  1642 ;; Hardware stack levels used:    1
  1643 ;; Hardware stack levels required when called:    5
  1644 ;; This function calls:
  1645 ;;		_strchr
  1646 ;;		_strlen
  1647 ;;		_strncmp
  1648 ;; This function is called by:
  1649 ;;		_Mode2
  1650 ;;		_main
  1651 ;; This function uses a non-reentrant model
  1652 ;;
  1653                           
  1654                           	psect	text8
  1655  0030EA                     __ptext8:
  1656                           	opt callstack 0
  1657  0030EA                     _strstr:
  1658                           	opt callstack 25
  1659  0030EA  5019               	movf	strstr@n^0,w,c
  1660  0030EC  101A               	iorwf	(strstr@n+1)^0,w,c
  1661  0030EE  B4D8               	btfsc	status,2,c
  1662  0030F0  EF7C  F018         	goto	u7651
  1663  0030F4  EF7E  F018         	goto	u7650
  1664  0030F8                     u7651:
  1665  0030F8  EFD0  F018         	goto	l5604
  1666  0030FC                     u7650:
  1667  0030FC  C019  F00C         	movff	strstr@n,strlen@s
  1668  003100  C01A  F00D         	movff	strstr@n+1,strlen@s+1
  1669  003104  EC49  F01B         	call	_strlen	;wreg free
  1670  003108  C00C  F01B         	movff	?_strlen,strstr@nl
  1671  00310C  C00D  F01C         	movff	?_strlen+1,strstr@nl+1
  1672  003110  EFBB  F018         	goto	l5600
  1673  003114                     l5592:
  1674  003114  C017  F00C         	movff	strstr@h,strncmp@_l
  1675  003118  C018  F00D         	movff	strstr@h+1,strncmp@_l+1
  1676  00311C  C019  F00E         	movff	strstr@n,strncmp@_r
  1677  003120  C01A  F00F         	movff	strstr@n+1,strncmp@_r+1
  1678  003124  C01B  F010         	movff	strstr@nl,strncmp@n
  1679  003128  C01C  F011         	movff	strstr@nl+1,strncmp@n+1
  1680  00312C  ECE2  F016         	call	_strncmp	;wreg free
  1681  003130  500C               	movf	?_strncmp^0,w,c
  1682  003132  100D               	iorwf	(?_strncmp+1)^0,w,c
  1683  003134  A4D8               	btfss	status,2,c
  1684  003136  EF9F  F018         	goto	u7661
  1685  00313A  EFA1  F018         	goto	u7660
  1686  00313E                     u7661:
  1687  00313E  EFA7  F018         	goto	l5598
  1688  003142                     u7660:
  1689  003142  C017  F017         	movff	strstr@h,?_strstr
  1690  003146  C018  F018         	movff	strstr@h+1,?_strstr+1
  1691  00314A  EFD4  F018         	goto	l1168
  1692  00314E                     l5598:
  1693  00314E  0E01               	movlw	1
  1694  003150  2417               	addwf	strstr@h^0,w,c
  1695  003152  6E0C               	movwf	strchr@s^0,c
  1696  003154  0E00               	movlw	0
  1697  003156  2018               	addwfc	(strstr@h+1)^0,w,c
  1698  003158  6E0D               	movwf	(strchr@s+1)^0,c
  1699  00315A  C019  FFF6         	movff	strstr@n,tblptrl
  1700  00315E  C01A  FFF7         	movff	strstr@n+1,tblptrh
  1701  003162                     	if	0	;tblptru may be non-zero
  1702  003162                     	endif
  1703  003162                     	if	0	;tblptru may be non-zero
  1704  003162                     	endif
  1705  003162  0008               	tblrd		*
  1706  003164  50F5               	movf	tablat,w,c
  1707  003166  6E0E               	movwf	strchr@c^0,c
  1708  003168  6A0F               	clrf	(strchr@c+1)^0,c
  1709  00316A  EC70  F01B         	call	_strchr	;wreg free
  1710  00316E  C00C  F017         	movff	?_strchr,strstr@h
  1711  003172  C00D  F018         	movff	?_strchr+1,strstr@h+1
  1712  003176                     l5600:
  1713  003176  5017               	movf	strstr@h^0,w,c
  1714  003178  1018               	iorwf	(strstr@h+1)^0,w,c
  1715  00317A  B4D8               	btfsc	status,2,c
  1716  00317C  EFC2  F018         	goto	u7671
  1717  003180  EFC4  F018         	goto	u7670
  1718  003184                     u7671:
  1719  003184  EFD0  F018         	goto	l5604
  1720  003188                     u7670:
  1721  003188  C017  FFD9         	movff	strstr@h,fsr2l
  1722  00318C  C018  FFDA         	movff	strstr@h+1,fsr2h
  1723  003190  50DF               	movf	indf2,w,c
  1724  003192  A4D8               	btfss	status,2,c
  1725  003194  EFCE  F018         	goto	u7681
  1726  003198  EFD0  F018         	goto	u7680
  1727  00319C                     u7681:
  1728  00319C  EF8A  F018         	goto	l5592
  1729  0031A0                     u7680:
  1730  0031A0                     l5604:
  1731  0031A0  0E00               	movlw	0
  1732  0031A2  6E17               	movwf	?_strstr^0,c
  1733  0031A4  0E00               	movlw	0
  1734  0031A6  6E18               	movwf	(?_strstr+1)^0,c
  1735  0031A8                     l1168:
  1736  0031A8  0012               	return		;funcret
  1737  0031AA                     __end_of_strstr:
  1738                           	opt callstack 0
  1739                           
  1740 ;; *************** function _strchr *****************
  1741 ;; Defined at:
  1742 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strchr.c"
  1743 ;; Parameters:    Size  Location     Type
  1744 ;;  s               2   11[COMRAM] PTR const unsigned char 
  1745 ;;		 -> NULL(0), mystring(20), 
  1746 ;;  c               2   13[COMRAM] int 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;		None
  1749 ;; Return value:  Size  Location     Type
  1750 ;;                  2   11[COMRAM] PTR unsigned char 
  1751 ;; Registers used:
  1752 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1753 ;; Tracked objects:
  1754 ;;		On entry : 0/0
  1755 ;;		On exit  : 0/0
  1756 ;;		Unchanged: 0/0
  1757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1758 ;;      Params:         4       0       0       0       0       0       0
  1759 ;;      Locals:         0       0       0       0       0       0       0
  1760 ;;      Temps:          1       0       0       0       0       0       0
  1761 ;;      Totals:         5       0       0       0       0       0       0
  1762 ;;Total ram usage:        5 bytes
  1763 ;; Hardware stack levels used:    1
  1764 ;; Hardware stack levels required when called:    4
  1765 ;; This function calls:
  1766 ;;		Nothing
  1767 ;; This function is called by:
  1768 ;;		_strstr
  1769 ;; This function uses a non-reentrant model
  1770 ;;
  1771                           
  1772                           	psect	text9
  1773  0036E0                     __ptext9:
  1774                           	opt callstack 0
  1775  0036E0                     _strchr:
  1776                           	opt callstack 25
  1777  0036E0                     l1187:
  1778  0036E0  C00C  FFD9         	movff	strchr@s,fsr2l
  1779  0036E4  C00D  FFDA         	movff	strchr@s+1,fsr2h
  1780  0036E8  500E               	movf	strchr@c^0,w,c
  1781  0036EA  18DE               	xorwf	postinc2,w,c
  1782  0036EC  A4D8               	btfss	status,2,c
  1783  0036EE  EF7B  F01B         	goto	u4981
  1784  0036F2  EF7D  F01B         	goto	u4980
  1785  0036F6                     u4981:
  1786  0036F6  EF83  F01B         	goto	l4052
  1787  0036FA                     u4980:
  1788  0036FA  C00C  F00C         	movff	strchr@s,?_strchr
  1789  0036FE  C00D  F00D         	movff	strchr@s+1,?_strchr+1
  1790  003702  EF95  F01B         	goto	l1189
  1791  003706                     l4052:
  1792  003706  C00C  FFD9         	movff	strchr@s,fsr2l
  1793  00370A  C00D  FFDA         	movff	strchr@s+1,fsr2h
  1794  00370E  4A0C               	infsnz	strchr@s^0,f,c
  1795  003710  2A0D               	incf	(strchr@s+1)^0,f,c
  1796  003712  50DF               	movf	indf2,w,c
  1797  003714  A4D8               	btfss	status,2,c
  1798  003716  EF8F  F01B         	goto	u4991
  1799  00371A  EF91  F01B         	goto	u4990
  1800  00371E                     u4991:
  1801  00371E  EF70  F01B         	goto	l1187
  1802  003722                     u4990:
  1803  003722  0E00               	movlw	0
  1804  003724  6E0C               	movwf	?_strchr^0,c
  1805  003726  0E00               	movlw	0
  1806  003728  6E0D               	movwf	(?_strchr+1)^0,c
  1807  00372A                     l1189:
  1808  00372A  0012               	return		;funcret
  1809  00372C                     __end_of_strchr:
  1810                           	opt callstack 0
  1811                           
  1812 ;; *************** function _sprintf *****************
  1813 ;; Defined at:
  1814 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;  s               2   56[BANK0 ] PTR unsigned char 
  1817 ;;		 -> str(10), 
  1818 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  1819 ;;		 -> STR_4(5), 
  1820 ;; Auto vars:     Size  Location     Type
  1821 ;;  f               6   68[BANK0 ] struct _IO_FILE
  1822 ;;  ap              2   66[BANK0 ] PTR void [1]
  1823 ;;		 -> ?_sprintf(2), 
  1824 ;;  ret             2    0        int 
  1825 ;; Return value:  Size  Location     Type
  1826 ;;                  2   56[BANK0 ] int 
  1827 ;; Registers used:
  1828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1829 ;; Tracked objects:
  1830 ;;		On entry : 0/0
  1831 ;;		On exit  : 0/0
  1832 ;;		Unchanged: 0/0
  1833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1834 ;;      Params:         0       8       0       0       0       0       0
  1835 ;;      Locals:         0      10       0       0       0       0       0
  1836 ;;      Temps:          0       0       0       0       0       0       0
  1837 ;;      Totals:         0      18       0       0       0       0       0
  1838 ;;Total ram usage:       18 bytes
  1839 ;; Hardware stack levels used:    1
  1840 ;; Hardware stack levels required when called:   11
  1841 ;; This function calls:
  1842 ;;		_vfprintf
  1843 ;; This function is called by:
  1844 ;;		_Mode2
  1845 ;; This function uses a non-reentrant model
  1846 ;;
  1847                           
  1848                           	psect	text10
  1849  0035EE                     __ptext10:
  1850                           	opt callstack 0
  1851  0035EE                     _sprintf:
  1852                           	opt callstack 18
  1853  0035EE  0EBC               	movlw	low (?_sprintf+4)
  1854  0035F0  0100               	movlb	0	; () banked
  1855  0035F2  6FC2               	movwf	sprintf@ap& (0+255),b
  1856  0035F4  0E00               	movlw	high (?_sprintf+4)
  1857  0035F6  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  1858  0035F8  C0B8  F0C4         	movff	sprintf@s,sprintf@f
  1859  0035FC  C0B9  F0C5         	movff	sprintf@s+1,sprintf@f+1
  1860  003600                     
  1861                           ; BSR set to: 0
  1862  003600  0E00               	movlw	0
  1863  003602  6FC7               	movwf	(sprintf@f+3)& (0+255),b
  1864  003604  0E00               	movlw	0
  1865  003606  6FC6               	movwf	(sprintf@f+2)& (0+255),b
  1866  003608                     
  1867                           ; BSR set to: 0
  1868  003608  0E00               	movlw	0
  1869  00360A  6FC9               	movwf	(sprintf@f+5)& (0+255),b
  1870  00360C  0E00               	movlw	0
  1871  00360E  6FC8               	movwf	(sprintf@f+4)& (0+255),b
  1872  003610                     
  1873                           ; BSR set to: 0
  1874  003610  0EC4               	movlw	low sprintf@f
  1875  003612  6E61               	movwf	vfprintf@fp^0,c
  1876  003614  0E00               	movlw	high sprintf@f
  1877  003616  6E62               	movwf	(vfprintf@fp+1)^0,c
  1878  003618  C0BA  F063         	movff	sprintf@fmt,vfprintf@fmt
  1879  00361C  C0BB  F064         	movff	sprintf@fmt+1,vfprintf@fmt+1
  1880  003620  0EC2               	movlw	low sprintf@ap
  1881  003622  6E65               	movwf	vfprintf@ap^0,c
  1882  003624  0E00               	movlw	high sprintf@ap
  1883  003626  6E66               	movwf	(vfprintf@ap+1)^0,c
  1884  003628  EC9A  F01A         	call	_vfprintf	;wreg free
  1885  00362C  0100               	movlb	0	; () banked
  1886  00362E  51C6               	movf	(sprintf@f+2)& (0+255),w,b
  1887  003630  25B8               	addwf	sprintf@s& (0+255),w,b
  1888  003632  6ED9               	movwf	fsr2l,c
  1889  003634  51C7               	movf	(sprintf@f+3)& (0+255),w,b
  1890  003636  21B9               	addwfc	(sprintf@s+1)& (0+255),w,b
  1891  003638  6EDA               	movwf	fsr2h,c
  1892  00363A  0E00               	movlw	0
  1893  00363C  6EDF               	movwf	indf2,c
  1894  00363E                     
  1895                           ; BSR set to: 0
  1896  00363E  0012               	return		;funcret
  1897  003640                     __end_of_sprintf:
  1898                           	opt callstack 0
  1899                           
  1900 ;; *************** function _vfprintf *****************
  1901 ;; Defined at:
  1902 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  fp              2   96[COMRAM] PTR struct _IO_FILE
  1905 ;;		 -> sprintf@f(6), 
  1906 ;;  fmt             2   98[COMRAM] PTR const unsigned char 
  1907 ;;		 -> STR_4(5), 
  1908 ;;  ap              2  100[COMRAM] PTR PTR void 
  1909 ;;		 -> sprintf@ap(2), 
  1910 ;; Auto vars:     Size  Location     Type
  1911 ;;  cfmt            2  102[COMRAM] PTR unsigned char 
  1912 ;;		 -> STR_4(5), 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  2   96[COMRAM] int 
  1915 ;; Registers used:
  1916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1922 ;;      Params:         6       0       0       0       0       0       0
  1923 ;;      Locals:         2       0       0       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0       0       0
  1925 ;;      Totals:         8       0       0       0       0       0       0
  1926 ;;Total ram usage:        8 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:   10
  1929 ;; This function calls:
  1930 ;;		_vfpfcnvrt
  1931 ;; This function is called by:
  1932 ;;		_sprintf
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           	psect	text11
  1937  003534                     __ptext11:
  1938                           	opt callstack 0
  1939  003534                     _vfprintf:
  1940                           	opt callstack 18
  1941  003534                     
  1942                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  1943  003534  C063  F067         	movff	vfprintf@fmt,vfprintf@cfmt
  1944  003538  C064  F068         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1945  00353C                     
  1946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  1947  00353C  0E00               	movlw	0
  1948  00353E  6E6A               	movwf	(_nout+1)^0,c
  1949  003540  0E00               	movlw	0
  1950  003542  6E69               	movwf	_nout^0,c
  1951                           
  1952                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1953  003544  EFB6  F01A         	goto	l5586
  1954  003548                     l5584:
  1955                           
  1956                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  1957  003548  C061  F04B         	movff	vfprintf@fp,vfpfcnvrt@fp
  1958  00354C  C062  F04C         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1959  003550  0E67               	movlw	low vfprintf@cfmt
  1960  003552  6E4D               	movwf	vfpfcnvrt@fmt^0,c
  1961  003554  0E00               	movlw	high vfprintf@cfmt
  1962  003556  6E4E               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1963  003558  C065  F04F         	movff	vfprintf@ap,vfpfcnvrt@ap
  1964  00355C  C066  F050         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1965  003560  EC57  F00B         	call	_vfpfcnvrt	;wreg free
  1966  003564  504B               	movf	?_vfpfcnvrt^0,w,c
  1967  003566  2669               	addwf	_nout^0,f,c
  1968  003568  504C               	movf	(?_vfpfcnvrt+1)^0,w,c
  1969  00356A  226A               	addwfc	(_nout+1)^0,f,c
  1970  00356C                     l5586:
  1971                           
  1972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  1973  00356C  C067  FFF6         	movff	vfprintf@cfmt,tblptrl
  1974  003570  C068  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1975  003574                     	if	0	;tblptru may be non-zero
  1976  003574                     	endif
  1977  003574                     	if	0	;tblptru may be non-zero
  1978  003574                     	endif
  1979  003574  0008               	tblrd		*
  1980  003576  50F5               	movf	tablat,w,c
  1981  003578  0900               	iorlw	0
  1982  00357A  A4D8               	btfss	status,2,c
  1983  00357C  EFC2  F01A         	goto	u7641
  1984  003580  EFC4  F01A         	goto	u7640
  1985  003584                     u7641:
  1986  003584  EFA4  F01A         	goto	l5584
  1987  003588                     u7640:
  1988  003588                     
  1989                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  1990  003588  C069  F061         	movff	_nout,?_vfprintf
  1991  00358C  C06A  F062         	movff	_nout+1,?_vfprintf+1
  1992  003590  0012               	return		;funcret
  1993  003592                     __end_of_vfprintf:
  1994                           	opt callstack 0
  1995                           
  1996 ;; *************** function _vfpfcnvrt *****************
  1997 ;; Defined at:
  1998 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  1999 ;; Parameters:    Size  Location     Type
  2000 ;;  fp              2   74[COMRAM] PTR struct _IO_FILE
  2001 ;;		 -> sprintf@f(6), 
  2002 ;;  fmt             2   76[COMRAM] PTR PTR unsigned char 
  2003 ;;		 -> vfprintf@cfmt(2), 
  2004 ;;  ap              2   78[COMRAM] PTR PTR void 
  2005 ;;		 -> sprintf@ap(2), 
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;  llu             8    0        unsigned long long 
  2008 ;;  ll              8    0        long long 
  2009 ;;  f               4   88[COMRAM] long long 
  2010 ;;  ct              3   92[COMRAM] unsigned char [3]
  2011 ;;  vp              3    0        PTR void 
  2012 ;;  cp              3    0        PTR unsigned char 
  2013 ;;  i               2    0        int 
  2014 ;;  done            2    0        int 
  2015 ;;  c               1   95[COMRAM] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  2   74[COMRAM] int 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2025 ;;      Params:         6       0       0       0       0       0       0
  2026 ;;      Locals:        12       0       0       0       0       0       0
  2027 ;;      Temps:          4       0       0       0       0       0       0
  2028 ;;      Totals:        22       0       0       0       0       0       0
  2029 ;;Total ram usage:       22 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:    9
  2032 ;; This function calls:
  2033 ;;		_atoi
  2034 ;;		_efgtoa
  2035 ;;		_fputc
  2036 ;;		_isdigit
  2037 ;;		_isupper
  2038 ;;		_strncmp
  2039 ;;		_tolower
  2040 ;; This function is called by:
  2041 ;;		_vfprintf
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           
  2045                           	psect	text12
  2046  0016AE                     __ptext12:
  2047                           	opt callstack 0
  2048  0016AE                     _vfpfcnvrt:
  2049                           	opt callstack 18
  2050  0016AE                     
  2051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  2052  0016AE  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2053  0016B2  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2054  0016B6  CFDE FFF6          	movff	postinc2,tblptrl
  2055  0016BA  CFDD FFF7          	movff	postdec2,tblptrh
  2056  0016BE                     	if	0	;tblptru may be non-zero
  2057  0016BE                     	endif
  2058  0016BE                     	if	0	;tblptru may be non-zero
  2059  0016BE                     	endif
  2060  0016BE  0008               	tblrd		*
  2061  0016C0  50F5               	movf	tablat,w,c
  2062  0016C2  0A25               	xorlw	37
  2063  0016C4  A4D8               	btfss	status,2,c
  2064  0016C6  EF67  F00B         	goto	u7501
  2065  0016CA  EF69  F00B         	goto	u7500
  2066  0016CE                     u7501:
  2067  0016CE  EF6A  F00D         	goto	l5572
  2068  0016D2                     u7500:
  2069  0016D2                     
  2070                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  2071  0016D2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2072  0016D6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2073  0016DA  2ADE               	incf	postinc2,f,c
  2074  0016DC  0E00               	movlw	0
  2075  0016DE  22DD               	addwfc	postdec2,f,c
  2076  0016E0                     
  2077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  2078  0016E0  0E00               	movlw	0
  2079  0016E2  6E6C               	movwf	(_width+1)^0,c
  2080  0016E4  0E00               	movlw	0
  2081  0016E6  6E6B               	movwf	_width^0,c
  2082  0016E8  C06B  F06F         	movff	_width,_flags
  2083  0016EC  C06C  F070         	movff	_width+1,_flags+1
  2084  0016F0                     
  2085                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  2086  0016F0  686D               	setf	_prec^0,c
  2087  0016F2  686E               	setf	(_prec+1)^0,c
  2088  0016F4                     
  2089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  2090  0016F4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2091  0016F8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2092  0016FC  CFDE FFF6          	movff	postinc2,tblptrl
  2093  001700  CFDD FFF7          	movff	postdec2,tblptrh
  2094  001704                     	if	0	;tblptru may be non-zero
  2095  001704                     	endif
  2096  001704                     	if	0	;tblptru may be non-zero
  2097  001704                     	endif
  2098  001704  0008               	tblrd		*
  2099  001706  50F5               	movf	tablat,w,c
  2100  001708  0A2E               	xorlw	46
  2101  00170A  A4D8               	btfss	status,2,c
  2102  00170C  EF8A  F00B         	goto	u7511
  2103  001710  EF8C  F00B         	goto	u7510
  2104  001714                     u7511:
  2105  001714  EF09  F00C         	goto	l5518
  2106  001718                     u7510:
  2107  001718                     
  2108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  2109  001718  0E00               	movlw	0
  2110  00171A  6E6E               	movwf	(_prec+1)^0,c
  2111  00171C  0E00               	movlw	0
  2112  00171E  6E6D               	movwf	_prec^0,c
  2113  001720                     
  2114                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  2115  001720  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2116  001724  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2117  001728  2ADE               	incf	postinc2,f,c
  2118  00172A  0E00               	movlw	0
  2119  00172C  22DD               	addwfc	postdec2,f,c
  2120  00172E                     
  2121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  2122  00172E  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  001732  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  001736  CFDE FFF6          	movff	postinc2,tblptrl
  2125  00173A  CFDD FFF7          	movff	postdec2,tblptrh
  2126  00173E                     	if	0	;tblptru may be non-zero
  2127  00173E                     	endif
  2128  00173E                     	if	0	;tblptru may be non-zero
  2129  00173E                     	endif
  2130  00173E  0008               	tblrd		*
  2131  001740  50F5               	movf	tablat,w,c
  2132  001742  0A2A               	xorlw	42
  2133  001744  A4D8               	btfss	status,2,c
  2134  001746  EFA7  F00B         	goto	u7521
  2135  00174A  EFA9  F00B         	goto	u7520
  2136  00174E                     u7521:
  2137  00174E  EFC6  F00B         	goto	l5508
  2138  001752                     u7520:
  2139  001752                     
  2140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  2141  001752  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2142  001756  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2143  00175A  2ADE               	incf	postinc2,f,c
  2144  00175C  0E00               	movlw	0
  2145  00175E  22DD               	addwfc	postdec2,f,c
  2146                           
  2147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  2148  001760  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2149  001764  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2150  001768  CFDF F051          	movff	indf2,??_vfpfcnvrt
  2151  00176C  0E02               	movlw	2
  2152  00176E  26DE               	addwf	postinc2,f,c
  2153  001770  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
  2154  001774  0E00               	movlw	0
  2155  001776  22DD               	addwfc	postdec2,f,c
  2156  001778  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2157  00177C  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2158  001780  CFDE F06D          	movff	postinc2,_prec
  2159  001784  CFDD F06E          	movff	postdec2,_prec+1
  2160                           
  2161                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  2162  001788  EF09  F00C         	goto	l5518
  2163  00178C                     l5508:
  2164                           
  2165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  2166  00178C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2167  001790  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2168  001794  CFDE F013          	movff	postinc2,atoi@s
  2169  001798  CFDD F014          	movff	postdec2,atoi@s+1
  2170  00179C  EC4B  F013         	call	_atoi	;wreg free
  2171  0017A0  C013  F06D         	movff	?_atoi,_prec
  2172  0017A4  C014  F06E         	movff	?_atoi+1,_prec+1
  2173                           
  2174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2175  0017A8  EFDD  F00B         	goto	l5512
  2176  0017AC                     l5510:
  2177                           
  2178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  2179  0017AC  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2180  0017B0  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2181  0017B4  2ADE               	incf	postinc2,f,c
  2182  0017B6  0E00               	movlw	0
  2183  0017B8  22DD               	addwfc	postdec2,f,c
  2184  0017BA                     l5512:
  2185  0017BA  0ED0               	movlw	208
  2186  0017BC  6E51               	movwf	??_vfpfcnvrt^0,c
  2187  0017BE  0EFF               	movlw	255
  2188  0017C0  6E52               	movwf	(??_vfpfcnvrt+1)^0,c
  2189  0017C2  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2190  0017C6  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2191  0017CA  CFDE FFF6          	movff	postinc2,tblptrl
  2192  0017CE  CFDD FFF7          	movff	postdec2,tblptrh
  2193  0017D2                     	if	0	;tblptru may be non-zero
  2194  0017D2                     	endif
  2195  0017D2                     	if	0	;tblptru may be non-zero
  2196  0017D2                     	endif
  2197  0017D2  0008               	tblrd		*
  2198  0017D4  50F5               	movf	tablat,w,c
  2199  0017D6  6E53               	movwf	(??_vfpfcnvrt+2)^0,c
  2200  0017D8  6A54               	clrf	(??_vfpfcnvrt+3)^0,c
  2201  0017DA  5051               	movf	??_vfpfcnvrt^0,w,c
  2202  0017DC  2653               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2203  0017DE  5052               	movf	(??_vfpfcnvrt+1)^0,w,c
  2204  0017E0  2254               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2205  0017E2  5054               	movf	(??_vfpfcnvrt+3)^0,w,c
  2206  0017E4  E10A               	bnz	u7530
  2207  0017E6  0E0A               	movlw	10
  2208  0017E8  5C53               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2209  0017EA  A0D8               	btfss	status,0,c
  2210  0017EC  EFFA  F00B         	goto	u7531
  2211  0017F0  EFFD  F00B         	goto	u7530
  2212  0017F4                     u7531:
  2213  0017F4  0E01               	movlw	1
  2214  0017F6  EFFE  F00B         	goto	u7540
  2215  0017FA                     u7530:
  2216  0017FA  0E00               	movlw	0
  2217  0017FC                     u7540:
  2218  0017FC  6E55               	movwf	_vfpfcnvrt$957^0,c
  2219  0017FE  6A56               	clrf	(_vfpfcnvrt$957+1)^0,c
  2220  001800  5055               	movf	_vfpfcnvrt$957^0,w,c
  2221  001802  1056               	iorwf	(_vfpfcnvrt$957+1)^0,w,c
  2222  001804  A4D8               	btfss	status,2,c
  2223  001806  EF07  F00C         	goto	u7551
  2224  00180A  EF09  F00C         	goto	u7550
  2225  00180E                     u7551:
  2226  00180E  EFD6  F00B         	goto	l5510
  2227  001812                     u7550:
  2228  001812                     l5518:
  2229                           
  2230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  2231  001812  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2232  001816  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2233  00181A  CFDE FFF6          	movff	postinc2,tblptrl
  2234  00181E  CFDD FFF7          	movff	postdec2,tblptrh
  2235  001822                     	if	0	;tblptru may be non-zero
  2236  001822                     	endif
  2237  001822                     	if	0	;tblptru may be non-zero
  2238  001822                     	endif
  2239  001822  0008               	tblrd		*
  2240  001824  50F5               	movf	tablat,w,c
  2241  001826  6E12               	movwf	tolower@c^0,c
  2242  001828  6A13               	clrf	(tolower@c+1)^0,c
  2243  00182A  EC6A  F01A         	call	_tolower	;wreg free
  2244  00182E  5012               	movf	?_tolower^0,w,c
  2245  001830  6E5D               	movwf	vfpfcnvrt@ct^0,c
  2246  001832                     
  2247                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  2248  001832  505D               	movf	vfpfcnvrt@ct^0,w,c
  2249  001834  B4D8               	btfsc	status,2,c
  2250  001836  EF1F  F00C         	goto	u7561
  2251  00183A  EF21  F00C         	goto	u7560
  2252  00183E                     u7561:
  2253  00183E  EF59  F00C         	goto	l5528
  2254  001842                     u7560:
  2255  001842                     
  2256                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  2257  001842  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2258  001846  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2259  00184A  CFDE F051          	movff	postinc2,??_vfpfcnvrt
  2260  00184E  CFDD F052          	movff	postdec2,??_vfpfcnvrt+1
  2261  001852  0E01               	movlw	1
  2262  001854  2651               	addwf	??_vfpfcnvrt^0,f,c
  2263  001856  0E00               	movlw	0
  2264  001858  2252               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2265  00185A  C051  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2266  00185E  C052  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2267  001862                     	if	0	;tblptru may be non-zero
  2268  001862                     	endif
  2269  001862                     	if	0	;tblptru may be non-zero
  2270  001862                     	endif
  2271  001862  0008               	tblrd		*
  2272  001864  50F5               	movf	tablat,w,c
  2273  001866  6E12               	movwf	tolower@c^0,c
  2274  001868  6A13               	clrf	(tolower@c+1)^0,c
  2275  00186A  EC6A  F01A         	call	_tolower	;wreg free
  2276  00186E  5012               	movf	?_tolower^0,w,c
  2277  001870  6E5E               	movwf	(vfpfcnvrt@ct+1)^0,c
  2278  001872                     
  2279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  2280  001872  505E               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2281  001874  B4D8               	btfsc	status,2,c
  2282  001876  EF3F  F00C         	goto	u7571
  2283  00187A  EF41  F00C         	goto	u7570
  2284  00187E                     u7571:
  2285  00187E  EF59  F00C         	goto	l5528
  2286  001882                     u7570:
  2287  001882                     
  2288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  2289  001882  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2290  001886  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2291  00188A  CFDE F051          	movff	postinc2,??_vfpfcnvrt
  2292  00188E  CFDD F052          	movff	postdec2,??_vfpfcnvrt+1
  2293  001892  0E02               	movlw	2
  2294  001894  2651               	addwf	??_vfpfcnvrt^0,f,c
  2295  001896  0E00               	movlw	0
  2296  001898  2252               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2297  00189A  C051  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2298  00189E  C052  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2299  0018A2                     	if	0	;tblptru may be non-zero
  2300  0018A2                     	endif
  2301  0018A2                     	if	0	;tblptru may be non-zero
  2302  0018A2                     	endif
  2303  0018A2  0008               	tblrd		*
  2304  0018A4  50F5               	movf	tablat,w,c
  2305  0018A6  6E12               	movwf	tolower@c^0,c
  2306  0018A8  6A13               	clrf	(tolower@c+1)^0,c
  2307  0018AA  EC6A  F01A         	call	_tolower	;wreg free
  2308  0018AE  5012               	movf	?_tolower^0,w,c
  2309  0018B0  6E5F               	movwf	(vfpfcnvrt@ct+2)^0,c
  2310  0018B2                     l5528:
  2311                           
  2312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  2313  0018B2  0E66               	movlw	102
  2314  0018B4  185D               	xorwf	vfpfcnvrt@ct^0,w,c
  2315  0018B6  A4D8               	btfss	status,2,c
  2316  0018B8  EF60  F00C         	goto	u7581
  2317  0018BC  EF62  F00C         	goto	u7580
  2318  0018C0                     u7581:
  2319  0018C0  EFA2  F00C         	goto	l5540
  2320  0018C4                     u7580:
  2321  0018C4                     
  2322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  2323  0018C4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  0018C8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  0018CC  CFDE FFF6          	movff	postinc2,tblptrl
  2326  0018D0  CFDD FFF7          	movff	postdec2,tblptrh
  2327  0018D4                     	if	0	;tblptru may be non-zero
  2328  0018D4                     	endif
  2329  0018D4                     	if	0	;tblptru may be non-zero
  2330  0018D4                     	endif
  2331  0018D4  0008               	tblrd		*
  2332  0018D6  CFF5 F060          	movff	tablat,vfpfcnvrt@c
  2333  0018DA                     
  2334                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  2335  0018DA  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2336  0018DE  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2337  0018E2  2ADE               	incf	postinc2,f,c
  2338  0018E4  0E00               	movlw	0
  2339  0018E6  22DD               	addwfc	postdec2,f,c
  2340  0018E8                     
  2341                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  2342  0018E8  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2343  0018EC  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2344  0018F0  CFDF F051          	movff	indf2,??_vfpfcnvrt
  2345  0018F4  0E04               	movlw	4
  2346  0018F6  26DE               	addwf	postinc2,f,c
  2347  0018F8  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
  2348  0018FC  0E00               	movlw	0
  2349  0018FE  22DD               	addwfc	postdec2,f,c
  2350  001900  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2351  001904  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2352  001908  CFDE F059          	movff	postinc2,vfpfcnvrt@f
  2353  00190C  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+1
  2354  001910  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+2
  2355  001914  CFDE F05C          	movff	postinc2,vfpfcnvrt@f+3
  2356  001918                     l5536:
  2357                           
  2358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  2359  001918  C04B  F03F         	movff	vfpfcnvrt@fp,efgtoa@fp
  2360  00191C  C04C  F040         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2361  001920  C059  F041         	movff	vfpfcnvrt@f,efgtoa@f
  2362  001924  C05A  F042         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2363  001928  C05B  F043         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2364  00192C  C05C  F044         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2365  001930  C060  F045         	movff	vfpfcnvrt@c,efgtoa@c
  2366  001934  EC1E  F003         	call	_efgtoa	;wreg free
  2367  001938  C03F  F04B         	movff	?_efgtoa,?_vfpfcnvrt
  2368  00193C  C040  F04C         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2369  001940  EF85  F00D         	goto	l331
  2370  001944                     l5540:
  2371                           
  2372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2373  001944  0E5D               	movlw	low vfpfcnvrt@ct
  2374  001946  6E0C               	movwf	strncmp@_l^0,c
  2375  001948  0E00               	movlw	high vfpfcnvrt@ct
  2376  00194A  6E0D               	movwf	(strncmp@_l+1)^0,c
  2377  00194C  0E36               	movlw	low STR_17
  2378  00194E  6E0E               	movwf	strncmp@_r^0,c
  2379  001950  0E06               	movlw	high STR_17
  2380  001952  6E0F               	movwf	(strncmp@_r+1)^0,c
  2381  001954  0E00               	movlw	0
  2382  001956  6E11               	movwf	(strncmp@n+1)^0,c
  2383  001958  0E02               	movlw	2
  2384  00195A  6E10               	movwf	strncmp@n^0,c
  2385  00195C  ECE2  F016         	call	_strncmp	;wreg free
  2386  001960  500C               	movf	?_strncmp^0,w,c
  2387  001962  100D               	iorwf	(?_strncmp+1)^0,w,c
  2388  001964  A4D8               	btfss	status,2,c
  2389  001966  EFB7  F00C         	goto	u7591
  2390  00196A  EFB9  F00C         	goto	u7590
  2391  00196E                     u7591:
  2392  00196E  EF34  F00D         	goto	l5556
  2393  001972                     u7590:
  2394  001972                     
  2395                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2396  001972  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2397  001976  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2398  00197A  CFDE F051          	movff	postinc2,??_vfpfcnvrt
  2399  00197E  CFDD F052          	movff	postdec2,??_vfpfcnvrt+1
  2400  001982  0E01               	movlw	1
  2401  001984  2651               	addwf	??_vfpfcnvrt^0,f,c
  2402  001986  0E00               	movlw	0
  2403  001988  2252               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2404  00198A  C051  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2405  00198E  C052  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2406  001992                     	if	0	;tblptru may be non-zero
  2407  001992                     	endif
  2408  001992                     	if	0	;tblptru may be non-zero
  2409  001992                     	endif
  2410  001992  0008               	tblrd		*
  2411  001994  CFF5 F060          	movff	tablat,vfpfcnvrt@c
  2412  001998  0EBF               	movlw	191
  2413  00199A  6E51               	movwf	??_vfpfcnvrt^0,c
  2414  00199C  0EFF               	movlw	255
  2415  00199E  6E52               	movwf	(??_vfpfcnvrt+1)^0,c
  2416  0019A0  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  0019A4  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  0019A8  CFDE FFF6          	movff	postinc2,tblptrl
  2419  0019AC  CFDD FFF7          	movff	postdec2,tblptrh
  2420  0019B0                     	if	0	;tblptru may be non-zero
  2421  0019B0                     	endif
  2422  0019B0                     	if	0	;tblptru may be non-zero
  2423  0019B0                     	endif
  2424  0019B0  0008               	tblrd		*
  2425  0019B2  50F5               	movf	tablat,w,c
  2426  0019B4  6E53               	movwf	(??_vfpfcnvrt+2)^0,c
  2427  0019B6  6A54               	clrf	(??_vfpfcnvrt+3)^0,c
  2428  0019B8  5051               	movf	??_vfpfcnvrt^0,w,c
  2429  0019BA  2653               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2430  0019BC  5052               	movf	(??_vfpfcnvrt+1)^0,w,c
  2431  0019BE  2254               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2432  0019C0  5054               	movf	(??_vfpfcnvrt+3)^0,w,c
  2433  0019C2  E10A               	bnz	u7600
  2434  0019C4  0E1A               	movlw	26
  2435  0019C6  5C53               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2436  0019C8  A0D8               	btfss	status,0,c
  2437  0019CA  EFE9  F00C         	goto	u7601
  2438  0019CE  EFEC  F00C         	goto	u7600
  2439  0019D2                     u7601:
  2440  0019D2  0E01               	movlw	1
  2441  0019D4  EFED  F00C         	goto	u7610
  2442  0019D8                     u7600:
  2443  0019D8  0E00               	movlw	0
  2444  0019DA                     u7610:
  2445  0019DA  6E57               	movwf	_vfpfcnvrt$961^0,c
  2446  0019DC  6A58               	clrf	(_vfpfcnvrt$961+1)^0,c
  2447  0019DE  5057               	movf	_vfpfcnvrt$961^0,w,c
  2448  0019E0  1058               	iorwf	(_vfpfcnvrt$961+1)^0,w,c
  2449  0019E2  B4D8               	btfsc	status,2,c
  2450  0019E4  EFF6  F00C         	goto	u7621
  2451  0019E8  EFF8  F00C         	goto	u7620
  2452  0019EC                     u7621:
  2453  0019EC  EF12  F00D         	goto	l5550
  2454  0019F0                     u7620:
  2455  0019F0                     
  2456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  2457  0019F0  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2458  0019F4  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2459  0019F8  CFDF F051          	movff	indf2,??_vfpfcnvrt
  2460  0019FC  0E04               	movlw	4
  2461  0019FE  26DE               	addwf	postinc2,f,c
  2462  001A00  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
  2463  001A04  0E00               	movlw	0
  2464  001A06  22DD               	addwfc	postdec2,f,c
  2465  001A08  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2466  001A0C  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2467  001A10  CFDE F059          	movff	postinc2,vfpfcnvrt@f
  2468  001A14  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+1
  2469  001A18  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+2
  2470  001A1C  CFDE F05C          	movff	postinc2,vfpfcnvrt@f+3
  2471                           
  2472                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  2473  001A20  EF2A  F00D         	goto	l338
  2474  001A24                     l5550:
  2475                           
  2476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2477  001A24  C04F  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2478  001A28  C050  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2479  001A2C  CFDF F051          	movff	indf2,??_vfpfcnvrt
  2480  001A30  0E04               	movlw	4
  2481  001A32  26DE               	addwf	postinc2,f,c
  2482  001A34  CFDF F052          	movff	indf2,??_vfpfcnvrt+1
  2483  001A38  0E00               	movlw	0
  2484  001A3A  22DD               	addwfc	postdec2,f,c
  2485  001A3C  C051  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2486  001A40  C052  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2487  001A44  CFDE F059          	movff	postinc2,vfpfcnvrt@f
  2488  001A48  CFDE F05A          	movff	postinc2,vfpfcnvrt@f+1
  2489  001A4C  CFDE F05B          	movff	postinc2,vfpfcnvrt@f+2
  2490  001A50  CFDE F05C          	movff	postinc2,vfpfcnvrt@f+3
  2491  001A54                     l338:
  2492                           
  2493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  2494  001A54  0E02               	movlw	2
  2495  001A56  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2496  001A5A  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2497  001A5E  26DE               	addwf	postinc2,f,c
  2498  001A60  0E00               	movlw	0
  2499  001A62  22DD               	addwfc	postdec2,f,c
  2500  001A64  EF8C  F00C         	goto	l5536
  2501  001A68                     l5556:
  2502                           
  2503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  2504  001A68  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2505  001A6C  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2506  001A70  CFDE FFF6          	movff	postinc2,tblptrl
  2507  001A74  CFDD FFF7          	movff	postdec2,tblptrh
  2508  001A78                     	if	0	;tblptru may be non-zero
  2509  001A78                     	endif
  2510  001A78                     	if	0	;tblptru may be non-zero
  2511  001A78                     	endif
  2512  001A78  0008               	tblrd		*
  2513  001A7A  50F5               	movf	tablat,w,c
  2514  001A7C  0A25               	xorlw	37
  2515  001A7E  A4D8               	btfss	status,2,c
  2516  001A80  EF44  F00D         	goto	u7631
  2517  001A84  EF46  F00D         	goto	u7630
  2518  001A88                     u7631:
  2519  001A88  EF5D  F00D         	goto	l5566
  2520  001A8C                     u7630:
  2521  001A8C                     
  2522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  2523  001A8C  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2524  001A90  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2525  001A94  2ADE               	incf	postinc2,f,c
  2526  001A96  0E00               	movlw	0
  2527  001A98  22DD               	addwfc	postdec2,f,c
  2528  001A9A                     
  2529                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  2530  001A9A  0E00               	movlw	0
  2531  001A9C  6E0D               	movwf	(fputc@c+1)^0,c
  2532  001A9E  0E25               	movlw	37
  2533  001AA0  6E0C               	movwf	fputc@c^0,c
  2534  001AA2  C04B  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2535  001AA6  C04C  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2536  001AAA  EC4D  F017         	call	_fputc	;wreg free
  2537  001AAE                     l5562:
  2538                           
  2539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  2540  001AAE  0E00               	movlw	0
  2541  001AB0  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  2542  001AB2  0E01               	movlw	1
  2543  001AB4  6E4B               	movwf	?_vfpfcnvrt^0,c
  2544  001AB6  EF85  F00D         	goto	l331
  2545  001ABA                     l5566:
  2546                           
  2547                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  2548  001ABA  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2549  001ABE  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2550  001AC2  2ADE               	incf	postinc2,f,c
  2551  001AC4  0E00               	movlw	0
  2552  001AC6  22DD               	addwfc	postdec2,f,c
  2553  001AC8                     
  2554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  2555  001AC8  0E00               	movlw	0
  2556  001ACA  6E4C               	movwf	(?_vfpfcnvrt+1)^0,c
  2557  001ACC  0E00               	movlw	0
  2558  001ACE  6E4B               	movwf	?_vfpfcnvrt^0,c
  2559  001AD0  EF85  F00D         	goto	l331
  2560  001AD4                     l5572:
  2561                           
  2562                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  2563  001AD4  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2564  001AD8  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2565  001ADC  CFDE FFF6          	movff	postinc2,tblptrl
  2566  001AE0  CFDD FFF7          	movff	postdec2,tblptrh
  2567  001AE4                     	if	0	;tblptru may be non-zero
  2568  001AE4                     	endif
  2569  001AE4                     	if	0	;tblptru may be non-zero
  2570  001AE4                     	endif
  2571  001AE4  0008               	tblrd		*
  2572  001AE6  50F5               	movf	tablat,w,c
  2573  001AE8  6E0C               	movwf	fputc@c^0,c
  2574  001AEA  6A0D               	clrf	(fputc@c+1)^0,c
  2575  001AEC  C04B  F00E         	movff	vfpfcnvrt@fp,fputc@fp
  2576  001AF0  C04C  F00F         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2577  001AF4  EC4D  F017         	call	_fputc	;wreg free
  2578  001AF8                     
  2579                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  2580  001AF8  C04D  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2581  001AFC  C04E  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2582  001B00  2ADE               	incf	postinc2,f,c
  2583  001B02  0E00               	movlw	0
  2584  001B04  22DD               	addwfc	postdec2,f,c
  2585  001B06  EF57  F00D         	goto	l5562
  2586  001B0A                     l331:
  2587  001B0A  0012               	return		;funcret
  2588  001B0C                     __end_of_vfpfcnvrt:
  2589                           	opt callstack 0
  2590                           
  2591 ;; *************** function _strncmp *****************
  2592 ;; Defined at:
  2593 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;  _l              2   11[COMRAM] PTR const unsigned char 
  2596 ;;		 -> vfpfcnvrt@ct(3), NULL(0), mystring(20), 
  2597 ;;  _r              2   13[COMRAM] PTR const unsigned char 
  2598 ;;		 -> STR_19(3), STR_8(6), STR_7(6), STR_6(6), 
  2599 ;;		 -> STR_3(2), 
  2600 ;;  n               2   15[COMRAM] unsigned int 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  r               2   20[COMRAM] PTR const unsigned char 
  2603 ;;		 -> STR_19(3), STR_8(6), STR_7(6), STR_6(6), 
  2604 ;;		 -> STR_3(2), 
  2605 ;;  l               2   18[COMRAM] PTR const unsigned char 
  2606 ;;		 -> vfpfcnvrt@ct(3), NULL(0), mystring(20), 
  2607 ;; Return value:  Size  Location     Type
  2608 ;;                  2   11[COMRAM] int 
  2609 ;; Registers used:
  2610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2611 ;; Tracked objects:
  2612 ;;		On entry : 0/0
  2613 ;;		On exit  : 0/0
  2614 ;;		Unchanged: 0/0
  2615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2616 ;;      Params:         6       0       0       0       0       0       0
  2617 ;;      Locals:         4       0       0       0       0       0       0
  2618 ;;      Temps:          1       0       0       0       0       0       0
  2619 ;;      Totals:        11       0       0       0       0       0       0
  2620 ;;Total ram usage:       11 bytes
  2621 ;; Hardware stack levels used:    1
  2622 ;; Hardware stack levels required when called:    4
  2623 ;; This function calls:
  2624 ;;		Nothing
  2625 ;; This function is called by:
  2626 ;;		_vfpfcnvrt
  2627 ;;		_strstr
  2628 ;; This function uses a non-reentrant model
  2629 ;;
  2630                           
  2631                           	psect	text13
  2632  002DC4                     __ptext13:
  2633                           	opt callstack 0
  2634  002DC4                     _strncmp:
  2635                           	opt callstack 25
  2636  002DC4  C00C  F013         	movff	strncmp@_l,strncmp@l
  2637  002DC8  C00D  F014         	movff	strncmp@_l+1,strncmp@l+1
  2638  002DCC  C00E  F015         	movff	strncmp@_r,strncmp@r
  2639  002DD0  C00F  F016         	movff	strncmp@_r+1,strncmp@r+1
  2640  002DD4  0610               	decf	strncmp@n^0,f,c
  2641  002DD6  A0D8               	btfss	status,0,c
  2642  002DD8  0611               	decf	(strncmp@n+1)^0,f,c
  2643  002DDA  2810               	incf	strncmp@n^0,w,c
  2644  002DDC  E106               	bnz	u7451
  2645  002DDE  2811               	incf	(strncmp@n+1)^0,w,c
  2646  002DE0  A4D8               	btfss	status,2,c
  2647  002DE2  EFF5  F016         	goto	u7451
  2648  002DE6  EFF7  F016         	goto	u7450
  2649  002DEA                     u7451:
  2650  002DEA  EF04  F017         	goto	l5478
  2651  002DEE                     u7450:
  2652  002DEE  0E00               	movlw	0
  2653  002DF0  6E0D               	movwf	(?_strncmp+1)^0,c
  2654  002DF2  0E00               	movlw	0
  2655  002DF4  6E0C               	movwf	?_strncmp^0,c
  2656  002DF6  EF4C  F017         	goto	l1150
  2657  002DFA                     l5476:
  2658  002DFA  4A13               	infsnz	strncmp@l^0,f,c
  2659  002DFC  2A14               	incf	(strncmp@l+1)^0,f,c
  2660  002DFE  4A15               	infsnz	strncmp@r^0,f,c
  2661  002E00  2A16               	incf	(strncmp@r+1)^0,f,c
  2662  002E02  0610               	decf	strncmp@n^0,f,c
  2663  002E04  A0D8               	btfss	status,0,c
  2664  002E06  0611               	decf	(strncmp@n+1)^0,f,c
  2665  002E08                     l5478:
  2666  002E08  C013  FFD9         	movff	strncmp@l,fsr2l
  2667  002E0C  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2668  002E10  50DF               	movf	indf2,w,c
  2669  002E12  B4D8               	btfsc	status,2,c
  2670  002E14  EF0E  F017         	goto	u7461
  2671  002E18  EF10  F017         	goto	u7460
  2672  002E1C                     u7461:
  2673  002E1C  EF3B  F017         	goto	l5486
  2674  002E20                     u7460:
  2675  002E20  C015  FFF6         	movff	strncmp@r,tblptrl
  2676  002E24  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2677  002E28                     	if	0	;tblptru may be non-zero
  2678  002E28                     	endif
  2679  002E28                     	if	0	;tblptru may be non-zero
  2680  002E28                     	endif
  2681  002E28  0008               	tblrd		*
  2682  002E2A  50F5               	movf	tablat,w,c
  2683  002E2C  0900               	iorlw	0
  2684  002E2E  B4D8               	btfsc	status,2,c
  2685  002E30  EF1C  F017         	goto	u7471
  2686  002E34  EF1E  F017         	goto	u7470
  2687  002E38                     u7471:
  2688  002E38  EF3B  F017         	goto	l5486
  2689  002E3C                     u7470:
  2690  002E3C  5010               	movf	strncmp@n^0,w,c
  2691  002E3E  1011               	iorwf	(strncmp@n+1)^0,w,c
  2692  002E40  B4D8               	btfsc	status,2,c
  2693  002E42  EF25  F017         	goto	u7481
  2694  002E46  EF27  F017         	goto	u7480
  2695  002E4A                     u7481:
  2696  002E4A  EF3B  F017         	goto	l5486
  2697  002E4E                     u7480:
  2698  002E4E  C013  FFD9         	movff	strncmp@l,fsr2l
  2699  002E52  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2700  002E56  50DF               	movf	indf2,w,c
  2701  002E58  6E12               	movwf	??_strncmp^0,c
  2702  002E5A  C015  FFF6         	movff	strncmp@r,tblptrl
  2703  002E5E  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2704  002E62                     	if	0	;tblptru may be non-zero
  2705  002E62                     	endif
  2706  002E62                     	if	0	;tblptru may be non-zero
  2707  002E62                     	endif
  2708  002E62  0008               	tblrd		*
  2709  002E64  50F5               	movf	tablat,w,c
  2710  002E66  1812               	xorwf	??_strncmp^0,w,c
  2711  002E68  B4D8               	btfsc	status,2,c
  2712  002E6A  EF39  F017         	goto	u7491
  2713  002E6E  EF3B  F017         	goto	u7490
  2714  002E72                     u7491:
  2715  002E72  EFFD  F016         	goto	l5476
  2716  002E76                     u7490:
  2717  002E76                     l5486:
  2718  002E76  C013  FFD9         	movff	strncmp@l,fsr2l
  2719  002E7A  C014  FFDA         	movff	strncmp@l+1,fsr2h
  2720  002E7E  50DF               	movf	indf2,w,c
  2721  002E80  6E12               	movwf	??_strncmp^0,c
  2722  002E82  C015  FFF6         	movff	strncmp@r,tblptrl
  2723  002E86  C016  FFF7         	movff	strncmp@r+1,tblptrh
  2724  002E8A                     	if	0	;tblptru may be non-zero
  2725  002E8A                     	endif
  2726  002E8A                     	if	0	;tblptru may be non-zero
  2727  002E8A                     	endif
  2728  002E8A  0008               	tblrd		*
  2729  002E8C  50F5               	movf	tablat,w,c
  2730  002E8E  5C12               	subwf	??_strncmp^0,w,c
  2731  002E90  6E0C               	movwf	?_strncmp^0,c
  2732  002E92  6A0D               	clrf	(?_strncmp+1)^0,c
  2733  002E94  A0D8               	btfss	status,0,c
  2734  002E96  060D               	decf	(?_strncmp+1)^0,f,c
  2735  002E98                     l1150:
  2736  002E98  0012               	return		;funcret
  2737  002E9A                     __end_of_strncmp:
  2738                           	opt callstack 0
  2739                           
  2740 ;; *************** function _efgtoa *****************
  2741 ;; Defined at:
  2742 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  2743 ;; Parameters:    Size  Location     Type
  2744 ;;  fp              2   62[COMRAM] PTR struct _IO_FILE
  2745 ;;		 -> sprintf@f(6), 
  2746 ;;  f               4   64[COMRAM] PTR struct _IO_FILE
  2747 ;;  c               1   68[COMRAM] unsigned char 
  2748 ;; Auto vars:     Size  Location     Type
  2749 ;;  u               4   52[BANK0 ] unsigned char 
  2750 ;;  g               4   44[BANK0 ] unsigned char 
  2751 ;;  l               4   38[BANK0 ] unsigned char 
  2752 ;;  h               4   34[BANK0 ] unsigned char 
  2753 ;;  ou              4    0[BANK0 ] unsigned char 
  2754 ;;  n               2   50[BANK0 ] int 
  2755 ;;  e               2   48[BANK0 ] int 
  2756 ;;  i               2   42[BANK0 ] int 
  2757 ;;  w               2   31[BANK0 ] int 
  2758 ;;  p               2   28[BANK0 ] int 
  2759 ;;  sign            2   26[BANK0 ] int 
  2760 ;;  d               2   24[BANK0 ] int 
  2761 ;;  ne              2   22[BANK0 ] int 
  2762 ;;  m               2   20[BANK0 ] int 
  2763 ;;  pp              2   18[BANK0 ] int 
  2764 ;;  t               2   16[BANK0 ] int 
  2765 ;;  mode            1   33[BANK0 ] unsigned char 
  2766 ;;  nmode           1   30[BANK0 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  2   62[COMRAM] int 
  2769 ;; Registers used:
  2770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         7       0       0       0       0       0       0
  2777 ;;      Locals:         0      56       0       0       0       0       0
  2778 ;;      Temps:          5       0       0       0       0       0       0
  2779 ;;      Totals:        12      56       0       0       0       0       0
  2780 ;;Total ram usage:       68 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:    8
  2783 ;; This function calls:
  2784 ;;		___awdiv
  2785 ;;		___awmod
  2786 ;;		___fladd
  2787 ;;		___fldiv
  2788 ;;		___fleq
  2789 ;;		___flge
  2790 ;;		___flmul
  2791 ;;		___flneg
  2792 ;;		___flsub
  2793 ;;		___fltol
  2794 ;;		___fpclassifyf
  2795 ;;		_floorf
  2796 ;;		_isupper
  2797 ;;		_pad
  2798 ;;		_strcpy
  2799 ;;		_tolower
  2800 ;; This function is called by:
  2801 ;;		_vfpfcnvrt
  2802 ;; This function uses a non-reentrant model
  2803 ;;
  2804                           
  2805                           	psect	text14
  2806  00063C                     __ptext14:
  2807                           	opt callstack 0
  2808  00063C                     _efgtoa:
  2809                           	opt callstack 18
  2810  00063C                     
  2811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
  2812  00063C  0E00               	movlw	0
  2813  00063E  0100               	movlb	0	; () banked
  2814  000640  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  2815  000642  0E00               	movlw	0
  2816  000644  6F9A               	movwf	efgtoa@sign& (0+255),b
  2817  000646                     
  2818                           ; BSR set to: 0
  2819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
  2820  000646  C041  F0AC         	movff	efgtoa@f,efgtoa@g
  2821  00064A  C042  F0AD         	movff	efgtoa@f+1,efgtoa@g+1
  2822  00064E  C043  F0AE         	movff	efgtoa@f+2,efgtoa@g+2
  2823  000652  C044  F0AF         	movff	efgtoa@f+3,efgtoa@g+3
  2824  000656                     
  2825                           ; BSR set to: 0
  2826                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
  2827  000656  BFAF               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2828  000658  EF32  F003         	goto	u6860
  2829  00065C  EF30  F003         	goto	u6861
  2830  000660                     u6861:
  2831  000660  EF48  F003         	goto	l5140
  2832  000664                     u6860:
  2833  000664                     
  2834                           ; BSR set to: 0
  2835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
  2836  000664  0E00               	movlw	0
  2837  000666  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  2838  000668  0E01               	movlw	1
  2839  00066A  6F9A               	movwf	efgtoa@sign& (0+255),b
  2840  00066C                     
  2841                           ; BSR set to: 0
  2842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
  2843  00066C  C0AC  F00C         	movff	efgtoa@g,___flneg@f1
  2844  000670  C0AD  F00D         	movff	efgtoa@g+1,___flneg@f1+1
  2845  000674  C0AE  F00E         	movff	efgtoa@g+2,___flneg@f1+2
  2846  000678  C0AF  F00F         	movff	efgtoa@g+3,___flneg@f1+3
  2847  00067C  EC57  F01C         	call	___flneg	;wreg free
  2848  000680  C00C  F0AC         	movff	?___flneg,efgtoa@g
  2849  000684  C00D  F0AD         	movff	?___flneg+1,efgtoa@g+1
  2850  000688  C00E  F0AE         	movff	?___flneg+2,efgtoa@g+2
  2851  00068C  C00F  F0AF         	movff	?___flneg+3,efgtoa@g+3
  2852  000690                     l5140:
  2853                           
  2854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
  2855  000690  0E00               	movlw	0
  2856  000692  0100               	movlb	0	; () banked
  2857  000694  6FB3               	movwf	(efgtoa@n+1)& (0+255),b
  2858  000696  0E00               	movlw	0
  2859  000698  6FB2               	movwf	efgtoa@n& (0+255),b
  2860  00069A                     
  2861                           ; BSR set to: 0
  2862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
  2863  00069A  C06B  F09F         	movff	_width,efgtoa@w
  2864  00069E  C06C  F0A0         	movff	_width+1,efgtoa@w+1
  2865  0006A2                     
  2866                           ; BSR set to: 0
  2867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
  2868  0006A2  519A               	movf	efgtoa@sign& (0+255),w,b
  2869  0006A4  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2870  0006A6  A4D8               	btfss	status,2,c
  2871  0006A8  EF58  F003         	goto	u6871
  2872  0006AC  EF5A  F003         	goto	u6870
  2873  0006B0                     u6871:
  2874  0006B0  EF61  F003         	goto	l5148
  2875  0006B4                     u6870:
  2876  0006B4                     
  2877                           ; BSR set to: 0
  2878  0006B4  A46F               	btfss	_flags^0,2,c
  2879  0006B6  EF5F  F003         	goto	u6881
  2880  0006BA  EF61  F003         	goto	u6880
  2881  0006BE                     u6881:
  2882  0006BE  EF7B  F003         	goto	l5160
  2883  0006C2                     u6880:
  2884  0006C2                     l5148:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
  2888  0006C2  519A               	movf	efgtoa@sign& (0+255),w,b
  2889  0006C4  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2890  0006C6  A4D8               	btfss	status,2,c
  2891  0006C8  EF68  F003         	goto	u6891
  2892  0006CC  EF6A  F003         	goto	u6890
  2893  0006D0                     u6891:
  2894  0006D0  EF70  F003         	goto	l5152
  2895  0006D4                     u6890:
  2896  0006D4                     
  2897                           ; BSR set to: 0
  2898  0006D4  0E00               	movlw	0
  2899  0006D6  6F85               	movwf	(_efgtoa$931+1)& (0+255),b
  2900  0006D8  0E2B               	movlw	43
  2901  0006DA  6F84               	movwf	_efgtoa$931& (0+255),b
  2902  0006DC  EF74  F003         	goto	l5154
  2903  0006E0                     l5152:
  2904                           
  2905                           ; BSR set to: 0
  2906  0006E0  0E00               	movlw	0
  2907  0006E2  6F85               	movwf	(_efgtoa$931+1)& (0+255),b
  2908  0006E4  0E2D               	movlw	45
  2909  0006E6  6F84               	movwf	_efgtoa$931& (0+255),b
  2910  0006E8                     l5154:
  2911                           
  2912                           ; BSR set to: 0
  2913  0006E8  C084  F100         	movff	_efgtoa$931,_dbuf
  2914  0006EC                     
  2915                           ; BSR set to: 0
  2916                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
  2917  0006EC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  2918  0006EE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  2919  0006F0                     
  2920                           ; BSR set to: 0
  2921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
  2922  0006F0  079F               	decf	efgtoa@w& (0+255),f,b
  2923  0006F2  A0D8               	btfss	status,0,c
  2924  0006F4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  2925  0006F6                     l5160:
  2926                           
  2927                           ; BSR set to: 0
  2928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2929  0006F6  C0AC  F00C         	movff	efgtoa@g,___fpclassifyf@x
  2930  0006FA  C0AD  F00D         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2931  0006FE  C0AE  F00E         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2932  000702  C0AF  F00F         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2933  000706  EC63  F016         	call	___fpclassifyf	;wreg free
  2934  00070A  040C               	decf	?___fpclassifyf^0,w,c
  2935  00070C  100D               	iorwf	(?___fpclassifyf+1)^0,w,c
  2936  00070E  A4D8               	btfss	status,2,c
  2937  000710  EF8C  F003         	goto	u6901
  2938  000714  EF8E  F003         	goto	u6900
  2939  000718                     u6901:
  2940  000718  EFE5  F003         	goto	l5178
  2941  00071C                     u6900:
  2942  00071C  0EBF               	movlw	191
  2943  00071E  6E46               	movwf	??_efgtoa^0,c
  2944  000720  0EFF               	movlw	255
  2945  000722  6E47               	movwf	(??_efgtoa+1)^0,c
  2946  000724  5045               	movf	efgtoa@c^0,w,c
  2947  000726  6E48               	movwf	(??_efgtoa+2)^0,c
  2948  000728  6A49               	clrf	(??_efgtoa+3)^0,c
  2949  00072A  5046               	movf	??_efgtoa^0,w,c
  2950  00072C  2648               	addwf	(??_efgtoa+2)^0,f,c
  2951  00072E  5047               	movf	(??_efgtoa+1)^0,w,c
  2952  000730  2249               	addwfc	(??_efgtoa+3)^0,f,c
  2953  000732  5049               	movf	(??_efgtoa+3)^0,w,c
  2954  000734  E10A               	bnz	u6910
  2955  000736  0E1A               	movlw	26
  2956  000738  5C48               	subwf	(??_efgtoa+2)^0,w,c
  2957  00073A  A0D8               	btfss	status,0,c
  2958  00073C  EFA2  F003         	goto	u6911
  2959  000740  EFA5  F003         	goto	u6910
  2960  000744                     u6911:
  2961  000744  0E01               	movlw	1
  2962  000746  EFA6  F003         	goto	u6920
  2963  00074A                     u6910:
  2964  00074A  0E00               	movlw	0
  2965  00074C                     u6920:
  2966  00074C  0100               	movlb	0	; () banked
  2967  00074E  6F86               	movwf	_efgtoa$932& (0+255),b
  2968  000750  6B87               	clrf	(_efgtoa$932+1)& (0+255),b
  2969  000752                     
  2970                           ; BSR set to: 0
  2971  000752  5186               	movf	_efgtoa$932& (0+255),w,b
  2972  000754  1187               	iorwf	(_efgtoa$932+1)& (0+255),w,b
  2973  000756  B4D8               	btfsc	status,2,c
  2974  000758  EFB0  F003         	goto	u6931
  2975  00075C  EFB2  F003         	goto	u6930
  2976  000760                     u6931:
  2977  000760  EFC0  F003         	goto	l5170
  2978  000764                     u6930:
  2979  000764                     
  2980                           ; BSR set to: 0
  2981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
  2982  000764  0E00               	movlw	low _dbuf
  2983  000766  25B2               	addwf	efgtoa@n& (0+255),w,b
  2984  000768  6E0C               	movwf	strcpy@dest^0,c
  2985  00076A  0E01               	movlw	high _dbuf
  2986  00076C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2987  00076E  6E0D               	movwf	(strcpy@dest+1)^0,c
  2988  000770  0E26               	movlw	low STR_9
  2989  000772  6E0E               	movwf	strcpy@src^0,c
  2990  000774  0E06               	movlw	high STR_9
  2991  000776  6E0F               	movwf	(strcpy@src+1)^0,c
  2992  000778  ECC9  F01A         	call	_strcpy	;wreg free
  2993                           
  2994                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
  2995  00077C  EFCC  F003         	goto	l5172
  2996  000780                     l5170:
  2997                           
  2998                           ; BSR set to: 0
  2999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
  3000  000780  0E00               	movlw	low _dbuf
  3001  000782  25B2               	addwf	efgtoa@n& (0+255),w,b
  3002  000784  6E0C               	movwf	strcpy@dest^0,c
  3003  000786  0E01               	movlw	high _dbuf
  3004  000788  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3005  00078A  6E0D               	movwf	(strcpy@dest+1)^0,c
  3006  00078C  0E2E               	movlw	low STR_10
  3007  00078E  6E0E               	movwf	strcpy@src^0,c
  3008  000790  0E06               	movlw	high STR_10
  3009  000792  6E0F               	movwf	(strcpy@src+1)^0,c
  3010  000794  ECC9  F01A         	call	_strcpy	;wreg free
  3011  000798                     l5172:
  3012                           
  3013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
  3014  000798  0100               	movlb	0	; () banked
  3015  00079A  0EFD               	movlw	253
  3016  00079C  279F               	addwf	efgtoa@w& (0+255),f,b
  3017  00079E  0EFF               	movlw	255
  3018  0007A0  23A0               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3019  0007A2                     l5174:
  3020                           
  3021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
  3022  0007A2  C03F  F01C         	movff	efgtoa@fp,pad@fp
  3023  0007A6  C040  F01D         	movff	efgtoa@fp+1,pad@fp+1
  3024  0007AA  0E00               	movlw	low _dbuf
  3025  0007AC  6E1E               	movwf	pad@buf^0,c
  3026  0007AE  0E01               	movlw	high _dbuf
  3027  0007B0  6E1F               	movwf	(pad@buf+1)^0,c
  3028  0007B2  C09F  F020         	movff	efgtoa@w,pad@p
  3029  0007B6  C0A0  F021         	movff	efgtoa@w+1,pad@p+1
  3030  0007BA  EC14  F018         	call	_pad	;wreg free
  3031  0007BE  C01C  F03F         	movff	?_pad,?_efgtoa
  3032  0007C2  C01D  F040         	movff	?_pad+1,?_efgtoa+1
  3033  0007C6  EFF6  F008         	goto	l241
  3034  0007CA                     l5178:
  3035                           
  3036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3037  0007CA  C0AC  F00C         	movff	efgtoa@g,___fpclassifyf@x
  3038  0007CE  C0AD  F00D         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3039  0007D2  C0AE  F00E         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3040  0007D6  C0AF  F00F         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3041  0007DA  EC63  F016         	call	___fpclassifyf	;wreg free
  3042  0007DE  500C               	movf	?___fpclassifyf^0,w,c
  3043  0007E0  100D               	iorwf	(?___fpclassifyf+1)^0,w,c
  3044  0007E2  A4D8               	btfss	status,2,c
  3045  0007E4  EFF6  F003         	goto	u6941
  3046  0007E8  EFF8  F003         	goto	u6940
  3047  0007EC                     u6941:
  3048  0007EC  EF38  F004         	goto	l5196
  3049  0007F0                     u6940:
  3050  0007F0  0EBF               	movlw	191
  3051  0007F2  6E46               	movwf	??_efgtoa^0,c
  3052  0007F4  0EFF               	movlw	255
  3053  0007F6  6E47               	movwf	(??_efgtoa+1)^0,c
  3054  0007F8  5045               	movf	efgtoa@c^0,w,c
  3055  0007FA  6E48               	movwf	(??_efgtoa+2)^0,c
  3056  0007FC  6A49               	clrf	(??_efgtoa+3)^0,c
  3057  0007FE  5046               	movf	??_efgtoa^0,w,c
  3058  000800  2648               	addwf	(??_efgtoa+2)^0,f,c
  3059  000802  5047               	movf	(??_efgtoa+1)^0,w,c
  3060  000804  2249               	addwfc	(??_efgtoa+3)^0,f,c
  3061  000806  5049               	movf	(??_efgtoa+3)^0,w,c
  3062  000808  E10A               	bnz	u6950
  3063  00080A  0E1A               	movlw	26
  3064  00080C  5C48               	subwf	(??_efgtoa+2)^0,w,c
  3065  00080E  A0D8               	btfss	status,0,c
  3066  000810  EF0C  F004         	goto	u6951
  3067  000814  EF0F  F004         	goto	u6950
  3068  000818                     u6951:
  3069  000818  0E01               	movlw	1
  3070  00081A  EF10  F004         	goto	u6960
  3071  00081E                     u6950:
  3072  00081E  0E00               	movlw	0
  3073  000820                     u6960:
  3074  000820  0100               	movlb	0	; () banked
  3075  000822  6F88               	movwf	_efgtoa$937& (0+255),b
  3076  000824  6B89               	clrf	(_efgtoa$937+1)& (0+255),b
  3077  000826                     
  3078                           ; BSR set to: 0
  3079  000826  5188               	movf	_efgtoa$937& (0+255),w,b
  3080  000828  1189               	iorwf	(_efgtoa$937+1)& (0+255),w,b
  3081  00082A  B4D8               	btfsc	status,2,c
  3082  00082C  EF1A  F004         	goto	u6971
  3083  000830  EF1C  F004         	goto	u6970
  3084  000834                     u6971:
  3085  000834  EF2A  F004         	goto	l5188
  3086  000838                     u6970:
  3087  000838                     
  3088                           ; BSR set to: 0
  3089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
  3090  000838  0E00               	movlw	low _dbuf
  3091  00083A  25B2               	addwf	efgtoa@n& (0+255),w,b
  3092  00083C  6E0C               	movwf	strcpy@dest^0,c
  3093  00083E  0E01               	movlw	high _dbuf
  3094  000840  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3095  000842  6E0D               	movwf	(strcpy@dest+1)^0,c
  3096  000844  0E2A               	movlw	low STR_13
  3097  000846  6E0E               	movwf	strcpy@src^0,c
  3098  000848  0E06               	movlw	high STR_13
  3099  00084A  6E0F               	movwf	(strcpy@src+1)^0,c
  3100  00084C  ECC9  F01A         	call	_strcpy	;wreg free
  3101                           
  3102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
  3103  000850  EFCC  F003         	goto	l5172
  3104  000854                     l5188:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
  3108  000854  0E00               	movlw	low _dbuf
  3109  000856  25B2               	addwf	efgtoa@n& (0+255),w,b
  3110  000858  6E0C               	movwf	strcpy@dest^0,c
  3111  00085A  0E01               	movlw	high _dbuf
  3112  00085C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3113  00085E  6E0D               	movwf	(strcpy@dest+1)^0,c
  3114  000860  0E32               	movlw	low STR_14
  3115  000862  6E0E               	movwf	strcpy@src^0,c
  3116  000864  0E06               	movlw	high STR_14
  3117  000866  6E0F               	movwf	(strcpy@src+1)^0,c
  3118  000868  ECC9  F01A         	call	_strcpy	;wreg free
  3119  00086C  EFCC  F003         	goto	l5172
  3120  000870                     l5196:
  3121                           
  3122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
  3123  000870  0E00               	movlw	0
  3124  000872  0100               	movlb	0	; () banked
  3125  000874  6FB4               	movwf	efgtoa@u& (0+255),b
  3126  000876  0E00               	movlw	0
  3127  000878  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3128  00087A  0E80               	movlw	128
  3129  00087C  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3130  00087E  0E3F               	movlw	63
  3131  000880  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3132                           
  3133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
  3134  000882  0E00               	movlw	0
  3135  000884  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3136  000886  0E00               	movlw	0
  3137  000888  6FB0               	movwf	efgtoa@e& (0+255),b
  3138  00088A                     
  3139                           ; BSR set to: 0
  3140                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
  3141  00088A  C0AC  F00C         	movff	efgtoa@g,___fleq@ff1
  3142  00088E  C0AD  F00D         	movff	efgtoa@g+1,___fleq@ff1+1
  3143  000892  C0AE  F00E         	movff	efgtoa@g+2,___fleq@ff1+2
  3144  000896  C0AF  F00F         	movff	efgtoa@g+3,___fleq@ff1+3
  3145  00089A  0E00               	movlw	0
  3146  00089C  6E10               	movwf	___fleq@ff2^0,c
  3147  00089E  0E00               	movlw	0
  3148  0008A0  6E11               	movwf	(___fleq@ff2+1)^0,c
  3149  0008A2  0E00               	movlw	0
  3150  0008A4  6E12               	movwf	(___fleq@ff2+2)^0,c
  3151  0008A6  0E00               	movlw	0
  3152  0008A8  6E13               	movwf	(___fleq@ff2+3)^0,c
  3153  0008AA  EC85  F019         	call	___fleq	;wreg free
  3154  0008AE  B0D8               	btfsc	status,0,c
  3155  0008B0  EF5C  F004         	goto	u6981
  3156  0008B4  EF5E  F004         	goto	u6980
  3157  0008B8                     u6981:
  3158  0008B8  EFE1  F004         	goto	l5214
  3159  0008BC                     u6980:
  3160  0008BC  EF7D  F004         	goto	l5206
  3161  0008C0                     l5202:
  3162                           
  3163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
  3164  0008C0  C0B4  F01A         	movff	efgtoa@u,___flmul@b
  3165  0008C4  C0B5  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3166  0008C8  C0B6  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3167  0008CC  C0B7  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3168  0008D0  0E00               	movlw	0
  3169  0008D2  6E1E               	movwf	___flmul@a^0,c
  3170  0008D4  0E00               	movlw	0
  3171  0008D6  6E1F               	movwf	(___flmul@a+1)^0,c
  3172  0008D8  0E20               	movlw	32
  3173  0008DA  6E20               	movwf	(___flmul@a+2)^0,c
  3174  0008DC  0E41               	movlw	65
  3175  0008DE  6E21               	movwf	(___flmul@a+3)^0,c
  3176  0008E0  EC86  F00D         	call	___flmul	;wreg free
  3177  0008E4  C01A  F0B4         	movff	?___flmul,efgtoa@u
  3178  0008E8  C01B  F0B5         	movff	?___flmul+1,efgtoa@u+1
  3179  0008EC  C01C  F0B6         	movff	?___flmul+2,efgtoa@u+2
  3180  0008F0  C01D  F0B7         	movff	?___flmul+3,efgtoa@u+3
  3181  0008F4                     
  3182                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
  3183  0008F4  0100               	movlb	0	; () banked
  3184  0008F6  4BB0               	infsnz	efgtoa@e& (0+255),f,b
  3185  0008F8  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  3186  0008FA                     l5206:
  3187                           
  3188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
  3189  0008FA  C0AC  F033         	movff	efgtoa@g,___flge@ff1
  3190  0008FE  C0AD  F034         	movff	efgtoa@g+1,___flge@ff1+1
  3191  000902  C0AE  F035         	movff	efgtoa@g+2,___flge@ff1+2
  3192  000906  C0AF  F036         	movff	efgtoa@g+3,___flge@ff1+3
  3193  00090A  0E00               	movlw	0
  3194  00090C  6E1E               	movwf	___flmul@a^0,c
  3195  00090E  0E00               	movlw	0
  3196  000910  6E1F               	movwf	(___flmul@a+1)^0,c
  3197  000912  0E20               	movlw	32
  3198  000914  6E20               	movwf	(___flmul@a+2)^0,c
  3199  000916  0E41               	movlw	65
  3200  000918  6E21               	movwf	(___flmul@a+3)^0,c
  3201  00091A  C0B4  F01A         	movff	efgtoa@u,___flmul@b
  3202  00091E  C0B5  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3203  000922  C0B6  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3204  000926  C0B7  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3205  00092A  EC86  F00D         	call	___flmul	;wreg free
  3206  00092E  C01A  F037         	movff	?___flmul,___flge@ff2
  3207  000932  C01B  F038         	movff	?___flmul+1,___flge@ff2+1
  3208  000936  C01C  F039         	movff	?___flmul+2,___flge@ff2+2
  3209  00093A  C01D  F03A         	movff	?___flmul+3,___flge@ff2+3
  3210  00093E  ECE1  F015         	call	___flge	;wreg free
  3211  000942  B0D8               	btfsc	status,0,c
  3212  000944  EFA6  F004         	goto	u6991
  3213  000948  EFA8  F004         	goto	u6990
  3214  00094C                     u6991:
  3215  00094C  EF60  F004         	goto	l5202
  3216  000950                     u6990:
  3217  000950  EFC8  F004         	goto	l5212
  3218  000954                     l5208:
  3219                           
  3220                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
  3221  000954  C0B4  F00C         	movff	efgtoa@u,___fldiv@b
  3222  000958  C0B5  F00D         	movff	efgtoa@u+1,___fldiv@b+1
  3223  00095C  C0B6  F00E         	movff	efgtoa@u+2,___fldiv@b+2
  3224  000960  C0B7  F00F         	movff	efgtoa@u+3,___fldiv@b+3
  3225  000964  0E00               	movlw	0
  3226  000966  6E10               	movwf	___fldiv@a^0,c
  3227  000968  0E00               	movlw	0
  3228  00096A  6E11               	movwf	(___fldiv@a+1)^0,c
  3229  00096C  0E20               	movlw	32
  3230  00096E  6E12               	movwf	(___fldiv@a+2)^0,c
  3231  000970  0E41               	movlw	65
  3232  000972  6E13               	movwf	(___fldiv@a+3)^0,c
  3233  000974  EC9B  F00F         	call	___fldiv	;wreg free
  3234  000978  C00C  F0B4         	movff	?___fldiv,efgtoa@u
  3235  00097C  C00D  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3236  000980  C00E  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3237  000984  C00F  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3238  000988                     
  3239                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
  3240  000988  0100               	movlb	0	; () banked
  3241  00098A  07B0               	decf	efgtoa@e& (0+255),f,b
  3242  00098C  A0D8               	btfss	status,0,c
  3243  00098E  07B1               	decf	(efgtoa@e+1)& (0+255),f,b
  3244  000990                     l5212:
  3245                           
  3246                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
  3247  000990  C0AC  F033         	movff	efgtoa@g,___flge@ff1
  3248  000994  C0AD  F034         	movff	efgtoa@g+1,___flge@ff1+1
  3249  000998  C0AE  F035         	movff	efgtoa@g+2,___flge@ff1+2
  3250  00099C  C0AF  F036         	movff	efgtoa@g+3,___flge@ff1+3
  3251  0009A0  C0B4  F037         	movff	efgtoa@u,___flge@ff2
  3252  0009A4  C0B5  F038         	movff	efgtoa@u+1,___flge@ff2+1
  3253  0009A8  C0B6  F039         	movff	efgtoa@u+2,___flge@ff2+2
  3254  0009AC  C0B7  F03A         	movff	efgtoa@u+3,___flge@ff2+3
  3255  0009B0  ECE1  F015         	call	___flge	;wreg free
  3256  0009B4  A0D8               	btfss	status,0,c
  3257  0009B6  EFDF  F004         	goto	u7001
  3258  0009BA  EFE1  F004         	goto	u7000
  3259  0009BE                     u7001:
  3260  0009BE  EFAA  F004         	goto	l5208
  3261  0009C2                     u7000:
  3262  0009C2                     l5214:
  3263                           
  3264                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
  3265  0009C2  C045  F012         	movff	efgtoa@c,tolower@c
  3266  0009C6  6A13               	clrf	(tolower@c+1)^0,c
  3267  0009C8  EC6A  F01A         	call	_tolower	;wreg free
  3268  0009CC  5012               	movf	?_tolower^0,w,c
  3269  0009CE  0100               	movlb	0	; () banked
  3270  0009D0  6FA1               	movwf	efgtoa@mode& (0+255),b
  3271  0009D2                     
  3272                           ; BSR set to: 0
  3273                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
  3274  0009D2  C0A1  F09E         	movff	efgtoa@mode,efgtoa@nmode
  3275  0009D6                     
  3276                           ; BSR set to: 0
  3277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
  3278  0009D6  0E67               	movlw	103
  3279  0009D8  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3280  0009DA  A4D8               	btfss	status,2,c
  3281  0009DC  EFF2  F004         	goto	u7011
  3282  0009E0  EFF4  F004         	goto	u7010
  3283  0009E4                     u7011:
  3284  0009E4  EF1A  F005         	goto	l5228
  3285  0009E8                     u7010:
  3286  0009E8                     
  3287                           ; BSR set to: 0
  3288                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
  3289  0009E8  506D               	movf	_prec^0,w,c
  3290  0009EA  106E               	iorwf	(_prec+1)^0,w,c
  3291  0009EC  A4D8               	btfss	status,2,c
  3292  0009EE  EFFB  F004         	goto	u7021
  3293  0009F2  EFFD  F004         	goto	u7020
  3294  0009F6                     u7021:
  3295  0009F6  EF01  F005         	goto	l5224
  3296  0009FA                     u7020:
  3297  0009FA                     
  3298                           ; BSR set to: 0
  3299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
  3300  0009FA  0E00               	movlw	0
  3301  0009FC  6E6E               	movwf	(_prec+1)^0,c
  3302  0009FE  0E01               	movlw	1
  3303  000A00  6E6D               	movwf	_prec^0,c
  3304  000A02                     l5224:
  3305                           
  3306                           ; BSR set to: 0
  3307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
  3308  000A02  BE6E               	btfsc	(_prec+1)^0,7,c
  3309  000A04  EF0E  F005         	goto	u7030
  3310  000A08  506E               	movf	(_prec+1)^0,w,c
  3311  000A0A  E106               	bnz	u7031
  3312  000A0C  046D               	decf	_prec^0,w,c
  3313  000A0E  B0D8               	btfsc	status,0,c
  3314  000A10  EF0C  F005         	goto	u7031
  3315  000A14  EF0E  F005         	goto	u7030
  3316  000A18                     u7031:
  3317  000A18  EF14  F005         	goto	l259
  3318  000A1C                     u7030:
  3319  000A1C                     l5226:
  3320                           
  3321                           ; BSR set to: 0
  3322  000A1C  0E00               	movlw	0
  3323  000A1E  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  3324  000A20  0E06               	movlw	6
  3325  000A22  6F9C               	movwf	efgtoa@p& (0+255),b
  3326  000A24  EF23  F005         	goto	l5234
  3327  000A28                     l259:
  3328                           
  3329                           ; BSR set to: 0
  3330  000A28  C06D  F09C         	movff	_prec,efgtoa@p
  3331  000A2C  C06E  F09D         	movff	_prec+1,efgtoa@p+1
  3332  000A30  EF23  F005         	goto	l5234
  3333  000A34                     l5228:
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
  3337  000A34  BE6E               	btfsc	(_prec+1)^0,7,c
  3338  000A36  EF1F  F005         	goto	u7041
  3339  000A3A  EF21  F005         	goto	u7040
  3340  000A3E                     u7041:
  3341  000A3E  EF0E  F005         	goto	l5226
  3342  000A42                     u7040:
  3343  000A42  EF14  F005         	goto	l259
  3344  000A46                     l5234:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
  3348  000A46  0E67               	movlw	103
  3349  000A48  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3350  000A4A  A4D8               	btfss	status,2,c
  3351  000A4C  EF2A  F005         	goto	u7051
  3352  000A50  EF2C  F005         	goto	u7050
  3353  000A54                     u7051:
  3354  000A54  EF5B  F005         	goto	l5244
  3355  000A58                     u7050:
  3356  000A58                     
  3357                           ; BSR set to: 0
  3358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
  3359  000A58  AFB1               	btfss	(efgtoa@e+1)& (0+255),7,b
  3360  000A5A  EF3A  F005         	goto	u7060
  3361  000A5E  0EFC               	movlw	252
  3362  000A60  5DB0               	subwf	efgtoa@e& (0+255),w,b
  3363  000A62  0EFF               	movlw	255
  3364  000A64  59B1               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3365  000A66  A0D8               	btfss	status,0,c
  3366  000A68  EF38  F005         	goto	u7061
  3367  000A6C  EF3A  F005         	goto	u7060
  3368  000A70                     u7061:
  3369  000A70  EF59  F005         	goto	l5242
  3370  000A74                     u7060:
  3371  000A74                     
  3372                           ; BSR set to: 0
  3373  000A74  0EFF               	movlw	255
  3374  000A76  6E46               	movwf	??_efgtoa^0,c
  3375  000A78  0EFF               	movlw	255
  3376  000A7A  6E47               	movwf	(??_efgtoa+1)^0,c
  3377  000A7C  C09C  F048         	movff	efgtoa@p,??_efgtoa+2
  3378  000A80  C09D  F049         	movff	efgtoa@p+1,??_efgtoa+3
  3379  000A84  5046               	movf	??_efgtoa^0,w,c
  3380  000A86  2648               	addwf	(??_efgtoa+2)^0,f,c
  3381  000A88  5047               	movf	(??_efgtoa+1)^0,w,c
  3382  000A8A  2249               	addwfc	(??_efgtoa+3)^0,f,c
  3383  000A8C  51B0               	movf	efgtoa@e& (0+255),w,b
  3384  000A8E  5C48               	subwf	(??_efgtoa+2)^0,w,c
  3385  000A90  5049               	movf	(??_efgtoa+3)^0,w,c
  3386  000A92  0A80               	xorlw	128
  3387  000A94  6E4A               	movwf	(??_efgtoa+4)^0,c
  3388  000A96  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3389  000A98  0A80               	xorlw	128
  3390  000A9A  584A               	subwfb	(??_efgtoa+4)^0,w,c
  3391  000A9C  A0D8               	btfss	status,0,c
  3392  000A9E  EF53  F005         	goto	u7071
  3393  000AA2  EF55  F005         	goto	u7070
  3394  000AA6                     u7071:
  3395  000AA6  EF59  F005         	goto	l5242
  3396  000AAA                     u7070:
  3397  000AAA                     
  3398                           ; BSR set to: 0
  3399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
  3400  000AAA  0E66               	movlw	102
  3401  000AAC  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3402                           
  3403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 392:         } else {
  3404  000AAE  EF5B  F005         	goto	l5244
  3405  000AB2                     l5242:
  3406                           
  3407                           ; BSR set to: 0
  3408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
  3409  000AB2  0E65               	movlw	101
  3410  000AB4  6F9E               	movwf	efgtoa@nmode& (0+255),b
  3411  000AB6                     l5244:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
  3415  000AB6  C09C  F094         	movff	efgtoa@p,efgtoa@m
  3416  000ABA  C09D  F095         	movff	efgtoa@p+1,efgtoa@m+1
  3417  000ABE                     
  3418                           ; BSR set to: 0
  3419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
  3420  000ABE  0E67               	movlw	103
  3421  000AC0  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3422  000AC2  A4D8               	btfss	status,2,c
  3423  000AC4  EF66  F005         	goto	u7081
  3424  000AC8  EF68  F005         	goto	u7080
  3425  000ACC                     u7081:
  3426  000ACC  EF78  F005         	goto	l5252
  3427  000AD0                     u7080:
  3428  000AD0                     
  3429                           ; BSR set to: 0
  3430  000AD0  0E66               	movlw	102
  3431  000AD2  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3432  000AD4  A4D8               	btfss	status,2,c
  3433  000AD6  EF6F  F005         	goto	u7091
  3434  000ADA  EF71  F005         	goto	u7090
  3435  000ADE                     u7091:
  3436  000ADE  EF7A  F005         	goto	l5254
  3437  000AE2                     u7090:
  3438  000AE2                     
  3439                           ; BSR set to: 0
  3440  000AE2  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3441  000AE4  EF78  F005         	goto	u7100
  3442  000AE8  EF76  F005         	goto	u7101
  3443  000AEC                     u7101:
  3444  000AEC  EF7A  F005         	goto	l5254
  3445  000AF0                     u7100:
  3446  000AF0                     l5252:
  3447                           
  3448                           ; BSR set to: 0
  3449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
  3450  000AF0  4B94               	infsnz	efgtoa@m& (0+255),f,b
  3451  000AF2  2B95               	incf	(efgtoa@m+1)& (0+255),f,b
  3452  000AF4                     l5254:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
  3456  000AF4  0E66               	movlw	102
  3457  000AF6  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3458  000AF8  A4D8               	btfss	status,2,c
  3459  000AFA  EF81  F005         	goto	u7111
  3460  000AFE  EF83  F005         	goto	u7110
  3461  000B02                     u7111:
  3462  000B02  EFA3  F005         	goto	l5264
  3463  000B06                     u7110:
  3464  000B06                     
  3465                           ; BSR set to: 0
  3466                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
  3467  000B06  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3468  000B08  EF8A  F005         	goto	u7120
  3469  000B0C  EF88  F005         	goto	u7121
  3470  000B10                     u7121:
  3471  000B10  EF96  F005         	goto	l5260
  3472  000B14                     u7120:
  3473  000B14                     
  3474                           ; BSR set to: 0
  3475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
  3476  000B14  0E00               	movlw	0
  3477  000B16  6FB4               	movwf	efgtoa@u& (0+255),b
  3478  000B18  0E00               	movlw	0
  3479  000B1A  6FB5               	movwf	(efgtoa@u+1)& (0+255),b
  3480  000B1C  0E80               	movlw	128
  3481  000B1E  6FB6               	movwf	(efgtoa@u+2)& (0+255),b
  3482  000B20  0E3F               	movlw	63
  3483  000B22  6FB7               	movwf	(efgtoa@u+3)& (0+255),b
  3484                           
  3485                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
  3486  000B24  0E00               	movlw	0
  3487  000B26  6FB1               	movwf	(efgtoa@e+1)& (0+255),b
  3488  000B28  0E00               	movlw	0
  3489  000B2A  6FB0               	movwf	efgtoa@e& (0+255),b
  3490  000B2C                     l5260:
  3491                           
  3492                           ; BSR set to: 0
  3493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
  3494  000B2C  0E67               	movlw	103
  3495  000B2E  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3496  000B30  B4D8               	btfsc	status,2,c
  3497  000B32  EF9D  F005         	goto	u7131
  3498  000B36  EF9F  F005         	goto	u7130
  3499  000B3A                     u7131:
  3500  000B3A  EFA3  F005         	goto	l5264
  3501  000B3E                     u7130:
  3502  000B3E                     
  3503                           ; BSR set to: 0
  3504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
  3505  000B3E  51B0               	movf	efgtoa@e& (0+255),w,b
  3506  000B40  2794               	addwf	efgtoa@m& (0+255),f,b
  3507  000B42  51B1               	movf	(efgtoa@e+1)& (0+255),w,b
  3508  000B44  2395               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3509  000B46                     l5264:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
  3513  000B46  0E00               	movlw	0
  3514  000B48  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3515  000B4A  0E00               	movlw	0
  3516  000B4C  6FAA               	movwf	efgtoa@i& (0+255),b
  3517  000B4E                     
  3518                           ; BSR set to: 0
  3519                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
  3520  000B4E  C0AC  F0A2         	movff	efgtoa@g,efgtoa@h
  3521  000B52  C0AD  F0A3         	movff	efgtoa@g+1,efgtoa@h+1
  3522  000B56  C0AE  F0A4         	movff	efgtoa@g+2,efgtoa@h+2
  3523  000B5A  C0AF  F0A5         	movff	efgtoa@g+3,efgtoa@h+3
  3524  000B5E                     
  3525                           ; BSR set to: 0
  3526                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
  3527  000B5E  C0B4  F080         	movff	efgtoa@u,efgtoa@ou
  3528  000B62  C0B5  F081         	movff	efgtoa@u+1,efgtoa@ou+1
  3529  000B66  C0B6  F082         	movff	efgtoa@u+2,efgtoa@ou+2
  3530  000B6A  C0B7  F083         	movff	efgtoa@u+3,efgtoa@ou+3
  3531                           
  3532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3533  000B6E  EF34  F006         	goto	l5278
  3534  000B72                     l5270:
  3535                           
  3536                           ; BSR set to: 0
  3537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
  3538  000B72  C0A2  F00C         	movff	efgtoa@h,___fldiv@b
  3539  000B76  C0A3  F00D         	movff	efgtoa@h+1,___fldiv@b+1
  3540  000B7A  C0A4  F00E         	movff	efgtoa@h+2,___fldiv@b+2
  3541  000B7E  C0A5  F00F         	movff	efgtoa@h+3,___fldiv@b+3
  3542  000B82  C0B4  F010         	movff	efgtoa@u,___fldiv@a
  3543  000B86  C0B5  F011         	movff	efgtoa@u+1,___fldiv@a+1
  3544  000B8A  C0B6  F012         	movff	efgtoa@u+2,___fldiv@a+2
  3545  000B8E  C0B7  F013         	movff	efgtoa@u+3,___fldiv@a+3
  3546  000B92  EC9B  F00F         	call	___fldiv	;wreg free
  3547  000B96  C00C  F025         	movff	?___fldiv,floorf@x
  3548  000B9A  C00D  F026         	movff	?___fldiv+1,floorf@x+1
  3549  000B9E  C00E  F027         	movff	?___fldiv+2,floorf@x+2
  3550  000BA2  C00F  F028         	movff	?___fldiv+3,floorf@x+3
  3551  000BA6  EC68  F011         	call	_floorf	;wreg free
  3552  000BAA  C025  F0A6         	movff	?_floorf,efgtoa@l
  3553  000BAE  C026  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3554  000BB2  C027  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3555  000BB6  C028  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3556                           
  3557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
  3558  000BBA  C0A6  F00C         	movff	efgtoa@l,___fltol@f1
  3559  000BBE  C0A7  F00D         	movff	efgtoa@l+1,___fltol@f1+1
  3560  000BC2  C0A8  F00E         	movff	efgtoa@l+2,___fltol@f1+2
  3561  000BC6  C0A9  F00F         	movff	efgtoa@l+3,___fltol@f1+3
  3562  000BCA  EC5E  F015         	call	___fltol	;wreg free
  3563  000BCE  C00C  F098         	movff	?___fltol,efgtoa@d
  3564  000BD2  C00D  F099         	movff	?___fltol+1,efgtoa@d+1
  3565  000BD6                     
  3566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
  3567  000BD6  C0A2  F033         	movff	efgtoa@h,___flsub@b
  3568  000BDA  C0A3  F034         	movff	efgtoa@h+1,___flsub@b+1
  3569  000BDE  C0A4  F035         	movff	efgtoa@h+2,___flsub@b+2
  3570  000BE2  C0A5  F036         	movff	efgtoa@h+3,___flsub@b+3
  3571  000BE6  C0B4  F01E         	movff	efgtoa@u,___flmul@a
  3572  000BEA  C0B5  F01F         	movff	efgtoa@u+1,___flmul@a+1
  3573  000BEE  C0B6  F020         	movff	efgtoa@u+2,___flmul@a+2
  3574  000BF2  C0B7  F021         	movff	efgtoa@u+3,___flmul@a+3
  3575  000BF6  C0A6  F01A         	movff	efgtoa@l,___flmul@b
  3576  000BFA  C0A7  F01B         	movff	efgtoa@l+1,___flmul@b+1
  3577  000BFE  C0A8  F01C         	movff	efgtoa@l+2,___flmul@b+2
  3578  000C02  C0A9  F01D         	movff	efgtoa@l+3,___flmul@b+3
  3579  000C06  EC86  F00D         	call	___flmul	;wreg free
  3580  000C0A  C01A  F037         	movff	?___flmul,___flsub@a
  3581  000C0E  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3582  000C12  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3583  000C16  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3584  000C1A  EC96  F01B         	call	___flsub	;wreg free
  3585  000C1E  C033  F0A2         	movff	?___flsub,efgtoa@h
  3586  000C22  C034  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3587  000C26  C035  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3588  000C2A  C036  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3589  000C2E                     
  3590                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
  3591  000C2E  C0B4  F00C         	movff	efgtoa@u,___fldiv@b
  3592  000C32  C0B5  F00D         	movff	efgtoa@u+1,___fldiv@b+1
  3593  000C36  C0B6  F00E         	movff	efgtoa@u+2,___fldiv@b+2
  3594  000C3A  C0B7  F00F         	movff	efgtoa@u+3,___fldiv@b+3
  3595  000C3E  0E00               	movlw	0
  3596  000C40  6E10               	movwf	___fldiv@a^0,c
  3597  000C42  0E00               	movlw	0
  3598  000C44  6E11               	movwf	(___fldiv@a+1)^0,c
  3599  000C46  0E20               	movlw	32
  3600  000C48  6E12               	movwf	(___fldiv@a+2)^0,c
  3601  000C4A  0E41               	movlw	65
  3602  000C4C  6E13               	movwf	(___fldiv@a+3)^0,c
  3603  000C4E  EC9B  F00F         	call	___fldiv	;wreg free
  3604  000C52  C00C  F0B4         	movff	?___fldiv,efgtoa@u
  3605  000C56  C00D  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  3606  000C5A  C00E  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  3607  000C5E  C00F  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  3608  000C62                     
  3609                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
  3610  000C62  0100               	movlb	0	; () banked
  3611  000C64  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  3612  000C66  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  3613  000C68                     l5278:
  3614                           
  3615                           ; BSR set to: 0
  3616                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
  3617  000C68  5194               	movf	efgtoa@m& (0+255),w,b
  3618  000C6A  5DAA               	subwf	efgtoa@i& (0+255),w,b
  3619  000C6C  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  3620  000C6E  0A80               	xorlw	128
  3621  000C70  6E46               	movwf	??_efgtoa^0,c
  3622  000C72  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  3623  000C74  0A80               	xorlw	128
  3624  000C76  5846               	subwfb	??_efgtoa^0,w,c
  3625  000C78  A0D8               	btfss	status,0,c
  3626  000C7A  EF41  F006         	goto	u7141
  3627  000C7E  EF43  F006         	goto	u7140
  3628  000C82                     u7141:
  3629  000C82  EFB9  F005         	goto	l5270
  3630  000C86                     u7140:
  3631  000C86                     
  3632                           ; BSR set to: 0
  3633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
  3634  000C86  C0B4  F01A         	movff	efgtoa@u,___flmul@b
  3635  000C8A  C0B5  F01B         	movff	efgtoa@u+1,___flmul@b+1
  3636  000C8E  C0B6  F01C         	movff	efgtoa@u+2,___flmul@b+2
  3637  000C92  C0B7  F01D         	movff	efgtoa@u+3,___flmul@b+3
  3638  000C96  0E00               	movlw	0
  3639  000C98  6E1E               	movwf	___flmul@a^0,c
  3640  000C9A  0E00               	movlw	0
  3641  000C9C  6E1F               	movwf	(___flmul@a+1)^0,c
  3642  000C9E  0EA0               	movlw	160
  3643  000CA0  6E20               	movwf	(___flmul@a+2)^0,c
  3644  000CA2  0E40               	movlw	64
  3645  000CA4  6E21               	movwf	(___flmul@a+3)^0,c
  3646  000CA6  EC86  F00D         	call	___flmul	;wreg free
  3647  000CAA  C01A  F0A6         	movff	?___flmul,efgtoa@l
  3648  000CAE  C01B  F0A7         	movff	?___flmul+1,efgtoa@l+1
  3649  000CB2  C01C  F0A8         	movff	?___flmul+2,efgtoa@l+2
  3650  000CB6  C01D  F0A9         	movff	?___flmul+3,efgtoa@l+3
  3651  000CBA                     
  3652                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
  3653  000CBA  C0A2  F033         	movff	efgtoa@h,___flge@ff1
  3654  000CBE  C0A3  F034         	movff	efgtoa@h+1,___flge@ff1+1
  3655  000CC2  C0A4  F035         	movff	efgtoa@h+2,___flge@ff1+2
  3656  000CC6  C0A5  F036         	movff	efgtoa@h+3,___flge@ff1+3
  3657  000CCA  C0A6  F037         	movff	efgtoa@l,___flge@ff2
  3658  000CCE  C0A7  F038         	movff	efgtoa@l+1,___flge@ff2+1
  3659  000CD2  C0A8  F039         	movff	efgtoa@l+2,___flge@ff2+2
  3660  000CD6  C0A9  F03A         	movff	efgtoa@l+3,___flge@ff2+3
  3661  000CDA  ECE1  F015         	call	___flge	;wreg free
  3662  000CDE  B0D8               	btfsc	status,0,c
  3663  000CE0  EF74  F006         	goto	u7151
  3664  000CE4  EF76  F006         	goto	u7150
  3665  000CE8                     u7151:
  3666  000CE8  EF81  F006         	goto	l5286
  3667  000CEC                     u7150:
  3668  000CEC                     
  3669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
  3670  000CEC  0E00               	movlw	0
  3671  000CEE  0100               	movlb	0	; () banked
  3672  000CF0  6FA6               	movwf	efgtoa@l& (0+255),b
  3673  000CF2  0E00               	movlw	0
  3674  000CF4  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  3675  000CF6  0E00               	movlw	0
  3676  000CF8  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  3677  000CFA  0E00               	movlw	0
  3678  000CFC  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  3679                           
  3680                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
  3681  000CFE  EFAA  F006         	goto	l5292
  3682  000D02                     l5286:
  3683                           
  3684                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
  3685  000D02  C0A2  F00C         	movff	efgtoa@h,___fleq@ff1
  3686  000D06  C0A3  F00D         	movff	efgtoa@h+1,___fleq@ff1+1
  3687  000D0A  C0A4  F00E         	movff	efgtoa@h+2,___fleq@ff1+2
  3688  000D0E  C0A5  F00F         	movff	efgtoa@h+3,___fleq@ff1+3
  3689  000D12  C0A6  F010         	movff	efgtoa@l,___fleq@ff2
  3690  000D16  C0A7  F011         	movff	efgtoa@l+1,___fleq@ff2+1
  3691  000D1A  C0A8  F012         	movff	efgtoa@l+2,___fleq@ff2+2
  3692  000D1E  C0A9  F013         	movff	efgtoa@l+3,___fleq@ff2+3
  3693  000D22  EC85  F019         	call	___fleq	;wreg free
  3694  000D26  A0D8               	btfss	status,0,c
  3695  000D28  EF98  F006         	goto	u7161
  3696  000D2C  EF9A  F006         	goto	u7160
  3697  000D30                     u7161:
  3698  000D30  EFAA  F006         	goto	l5292
  3699  000D34                     u7160:
  3700  000D34  0100               	movlb	0	; () banked
  3701  000D36  B198               	btfsc	efgtoa@d& (0+255),0,b
  3702  000D38  EFA0  F006         	goto	u7171
  3703  000D3C  EFA2  F006         	goto	u7170
  3704  000D40                     u7171:
  3705  000D40  EFAA  F006         	goto	l5292
  3706  000D44                     u7170:
  3707  000D44                     
  3708                           ; BSR set to: 0
  3709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
  3710  000D44  0E00               	movlw	0
  3711  000D46  6FA6               	movwf	efgtoa@l& (0+255),b
  3712  000D48  0E00               	movlw	0
  3713  000D4A  6FA7               	movwf	(efgtoa@l+1)& (0+255),b
  3714  000D4C  0E00               	movlw	0
  3715  000D4E  6FA8               	movwf	(efgtoa@l+2)& (0+255),b
  3716  000D50  0E00               	movlw	0
  3717  000D52  6FA9               	movwf	(efgtoa@l+3)& (0+255),b
  3718  000D54                     l5292:
  3719                           
  3720                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
  3721  000D54  C0AC  F00C         	movff	efgtoa@g,___fladd@b
  3722  000D58  C0AD  F00D         	movff	efgtoa@g+1,___fladd@b+1
  3723  000D5C  C0AE  F00E         	movff	efgtoa@g+2,___fladd@b+2
  3724  000D60  C0AF  F00F         	movff	efgtoa@g+3,___fladd@b+3
  3725  000D64  C0A6  F010         	movff	efgtoa@l,___fladd@a
  3726  000D68  C0A7  F011         	movff	efgtoa@l+1,___fladd@a+1
  3727  000D6C  C0A8  F012         	movff	efgtoa@l+2,___fladd@a+2
  3728  000D70  C0A9  F013         	movff	efgtoa@l+3,___fladd@a+3
  3729  000D74  ECF7  F008         	call	___fladd	;wreg free
  3730  000D78  C00C  F0A2         	movff	?___fladd,efgtoa@h
  3731  000D7C  C00D  F0A3         	movff	?___fladd+1,efgtoa@h+1
  3732  000D80  C00E  F0A4         	movff	?___fladd+2,efgtoa@h+2
  3733  000D84  C00F  F0A5         	movff	?___fladd+3,efgtoa@h+3
  3734  000D88                     
  3735                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
  3736  000D88  C080  F0B4         	movff	efgtoa@ou,efgtoa@u
  3737  000D8C  C081  F0B5         	movff	efgtoa@ou+1,efgtoa@u+1
  3738  000D90  C082  F0B6         	movff	efgtoa@ou+2,efgtoa@u+2
  3739  000D94  C083  F0B7         	movff	efgtoa@ou+3,efgtoa@u+3
  3740  000D98                     
  3741                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
  3742  000D98  0E65               	movlw	101
  3743  000D9A  0100               	movlb	0	; () banked
  3744  000D9C  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  3745  000D9E  B4D8               	btfsc	status,2,c
  3746  000DA0  EFD4  F006         	goto	u7181
  3747  000DA4  EFD6  F006         	goto	u7180
  3748  000DA8                     u7181:
  3749  000DA8  EFDC  F006         	goto	l5300
  3750  000DAC                     u7180:
  3751  000DAC                     
  3752                           ; BSR set to: 0
  3753  000DAC  C0B0  F096         	movff	efgtoa@e,efgtoa@ne
  3754  000DB0  C0B1  F097         	movff	efgtoa@e+1,efgtoa@ne+1
  3755  000DB4  EFE0  F006         	goto	l285
  3756  000DB8                     l5300:
  3757                           
  3758                           ; BSR set to: 0
  3759  000DB8  0E00               	movlw	0
  3760  000DBA  6F97               	movwf	(efgtoa@ne+1)& (0+255),b
  3761  000DBC  0E00               	movlw	0
  3762  000DBE  6F96               	movwf	efgtoa@ne& (0+255),b
  3763  000DC0                     l285:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
  3767  000DC0  0E00               	movlw	0
  3768  000DC2  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  3769  000DC4  0E00               	movlw	0
  3770  000DC6  6F92               	movwf	efgtoa@pp& (0+255),b
  3771                           
  3772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
  3773  000DC8  0E00               	movlw	0
  3774  000DCA  6F91               	movwf	(efgtoa@t+1)& (0+255),b
  3775  000DCC  0E00               	movlw	0
  3776  000DCE  6F90               	movwf	efgtoa@t& (0+255),b
  3777                           
  3778                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
  3779  000DD0  0E00               	movlw	0
  3780  000DD2  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  3781  000DD4  0E00               	movlw	0
  3782  000DD6  6FAA               	movwf	efgtoa@i& (0+255),b
  3783                           
  3784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  3785  000DD8  EFDC  F007         	goto	l5350
  3786  000DDC                     l5302:
  3787                           
  3788                           ; BSR set to: 0
  3789                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
  3790  000DDC  C0A2  F00C         	movff	efgtoa@h,___fldiv@b
  3791  000DE0  C0A3  F00D         	movff	efgtoa@h+1,___fldiv@b+1
  3792  000DE4  C0A4  F00E         	movff	efgtoa@h+2,___fldiv@b+2
  3793  000DE8  C0A5  F00F         	movff	efgtoa@h+3,___fldiv@b+3
  3794  000DEC  C0B4  F010         	movff	efgtoa@u,___fldiv@a
  3795  000DF0  C0B5  F011         	movff	efgtoa@u+1,___fldiv@a+1
  3796  000DF4  C0B6  F012         	movff	efgtoa@u+2,___fldiv@a+2
  3797  000DF8  C0B7  F013         	movff	efgtoa@u+3,___fldiv@a+3
  3798  000DFC  EC9B  F00F         	call	___fldiv	;wreg free
  3799  000E00  C00C  F025         	movff	?___fldiv,floorf@x
  3800  000E04  C00D  F026         	movff	?___fldiv+1,floorf@x+1
  3801  000E08  C00E  F027         	movff	?___fldiv+2,floorf@x+2
  3802  000E0C  C00F  F028         	movff	?___fldiv+3,floorf@x+3
  3803  000E10  EC68  F011         	call	_floorf	;wreg free
  3804  000E14  C025  F0A6         	movff	?_floorf,efgtoa@l
  3805  000E18  C026  F0A7         	movff	?_floorf+1,efgtoa@l+1
  3806  000E1C  C027  F0A8         	movff	?_floorf+2,efgtoa@l+2
  3807  000E20  C028  F0A9         	movff	?_floorf+3,efgtoa@l+3
  3808                           
  3809                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
  3810  000E24  C0A6  F00C         	movff	efgtoa@l,___fltol@f1
  3811  000E28  C0A7  F00D         	movff	efgtoa@l+1,___fltol@f1+1
  3812  000E2C  C0A8  F00E         	movff	efgtoa@l+2,___fltol@f1+2
  3813  000E30  C0A9  F00F         	movff	efgtoa@l+3,___fltol@f1+3
  3814  000E34  EC5E  F015         	call	___fltol	;wreg free
  3815  000E38  C00C  F098         	movff	?___fltol,efgtoa@d
  3816  000E3C  C00D  F099         	movff	?___fltol+1,efgtoa@d+1
  3817  000E40                     
  3818                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3819  000E40  B86F               	btfsc	_flags^0,4,c
  3820  000E42  EF25  F007         	goto	u7191
  3821  000E46  EF27  F007         	goto	u7190
  3822  000E4A                     u7191:
  3823  000E4A  EF45  F007         	goto	l5314
  3824  000E4E                     u7190:
  3825  000E4E  0100               	movlb	0	; () banked
  3826  000E50  5198               	movf	efgtoa@d& (0+255),w,b
  3827  000E52  1199               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3828  000E54  A4D8               	btfss	status,2,c
  3829  000E56  EF2F  F007         	goto	u7201
  3830  000E5A  EF31  F007         	goto	u7200
  3831  000E5E                     u7201:
  3832  000E5E  EF45  F007         	goto	l5314
  3833  000E62                     u7200:
  3834  000E62                     
  3835                           ; BSR set to: 0
  3836  000E62  0E67               	movlw	103
  3837  000E64  19A1               	xorwf	efgtoa@mode& (0+255),w,b
  3838  000E66  A4D8               	btfss	status,2,c
  3839  000E68  EF38  F007         	goto	u7211
  3840  000E6C  EF3A  F007         	goto	u7210
  3841  000E70                     u7211:
  3842  000E70  EF45  F007         	goto	l5314
  3843  000E74                     u7210:
  3844  000E74                     
  3845                           ; BSR set to: 0
  3846  000E74  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3847  000E76  EF41  F007         	goto	u7220
  3848  000E7A  EF3F  F007         	goto	u7221
  3849  000E7E                     u7221:
  3850  000E7E  EF45  F007         	goto	l5314
  3851  000E82                     u7220:
  3852  000E82                     
  3853                           ; BSR set to: 0
  3854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
  3855  000E82  4B90               	infsnz	efgtoa@t& (0+255),f,b
  3856  000E84  2B91               	incf	(efgtoa@t+1)& (0+255),f,b
  3857                           
  3858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
  3859  000E86  EF90  F007         	goto	l5342
  3860  000E8A                     l5314:
  3861                           
  3862                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
  3863  000E8A  0100               	movlb	0	; () banked
  3864  000E8C  5192               	movf	efgtoa@pp& (0+255),w,b
  3865  000E8E  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3866  000E90  A4D8               	btfss	status,2,c
  3867  000E92  EF4D  F007         	goto	u7231
  3868  000E96  EF4F  F007         	goto	u7230
  3869  000E9A                     u7231:
  3870  000E9A  EF79  F007         	goto	l5334
  3871  000E9E                     u7230:
  3872  000E9E                     
  3873                           ; BSR set to: 0
  3874  000E9E  BF97               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3875  000EA0  EF56  F007         	goto	u7240
  3876  000EA4  EF54  F007         	goto	u7241
  3877  000EA8                     u7241:
  3878  000EA8  EF79  F007         	goto	l5334
  3879  000EAC                     u7240:
  3880  000EAC                     
  3881                           ; BSR set to: 0
  3882                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
  3883  000EAC  0E00               	movlw	low _dbuf
  3884  000EAE  25B2               	addwf	efgtoa@n& (0+255),w,b
  3885  000EB0  6ED9               	movwf	fsr2l,c
  3886  000EB2  0E01               	movlw	high _dbuf
  3887  000EB4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3888  000EB6  6EDA               	movwf	fsr2h,c
  3889  000EB8  0E2E               	movlw	46
  3890  000EBA  6EDF               	movwf	indf2,c
  3891  000EBC                     
  3892                           ; BSR set to: 0
  3893  000EBC  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3894  000EBE  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3895  000EC0                     
  3896                           ; BSR set to: 0
  3897                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
  3898  000EC0  079F               	decf	efgtoa@w& (0+255),f,b
  3899  000EC2  A0D8               	btfss	status,0,c
  3900  000EC4  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3901  000EC6                     
  3902                           ; BSR set to: 0
  3903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
  3904  000EC6  0E00               	movlw	0
  3905  000EC8  6F93               	movwf	(efgtoa@pp+1)& (0+255),b
  3906  000ECA  0E01               	movlw	1
  3907  000ECC  6F92               	movwf	efgtoa@pp& (0+255),b
  3908  000ECE  EF79  F007         	goto	l5334
  3909  000ED2                     l5326:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
  3913  000ED2  0E00               	movlw	low _dbuf
  3914  000ED4  25B2               	addwf	efgtoa@n& (0+255),w,b
  3915  000ED6  6ED9               	movwf	fsr2l,c
  3916  000ED8  0E01               	movlw	high _dbuf
  3917  000EDA  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3918  000EDC  6EDA               	movwf	fsr2h,c
  3919  000EDE  0E30               	movlw	48
  3920  000EE0  6EDF               	movwf	indf2,c
  3921  000EE2                     
  3922                           ; BSR set to: 0
  3923  000EE2  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3924  000EE4  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3925  000EE6                     
  3926                           ; BSR set to: 0
  3927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
  3928  000EE6  079F               	decf	efgtoa@w& (0+255),f,b
  3929  000EE8  A0D8               	btfss	status,0,c
  3930  000EEA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3931  000EEC                     
  3932                           ; BSR set to: 0
  3933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
  3934  000EEC  0790               	decf	efgtoa@t& (0+255),f,b
  3935  000EEE  A0D8               	btfss	status,0,c
  3936  000EF0  0791               	decf	(efgtoa@t+1)& (0+255),f,b
  3937  000EF2                     l5334:
  3938                           
  3939                           ; BSR set to: 0
  3940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
  3941  000EF2  5190               	movf	efgtoa@t& (0+255),w,b
  3942  000EF4  1191               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3943  000EF6  A4D8               	btfss	status,2,c
  3944  000EF8  EF80  F007         	goto	u7251
  3945  000EFC  EF82  F007         	goto	u7250
  3946  000F00                     u7251:
  3947  000F00  EF69  F007         	goto	l5326
  3948  000F04                     u7250:
  3949  000F04                     
  3950                           ; BSR set to: 0
  3951                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
  3952  000F04  0E00               	movlw	low _dbuf
  3953  000F06  25B2               	addwf	efgtoa@n& (0+255),w,b
  3954  000F08  6ED9               	movwf	fsr2l,c
  3955  000F0A  0E01               	movlw	high _dbuf
  3956  000F0C  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3957  000F0E  6EDA               	movwf	fsr2h,c
  3958  000F10  5198               	movf	efgtoa@d& (0+255),w,b
  3959  000F12  0F30               	addlw	48
  3960  000F14  6EDF               	movwf	indf2,c
  3961  000F16                     
  3962                           ; BSR set to: 0
  3963  000F16  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  3964  000F18  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  3965  000F1A                     
  3966                           ; BSR set to: 0
  3967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
  3968  000F1A  079F               	decf	efgtoa@w& (0+255),f,b
  3969  000F1C  A0D8               	btfss	status,0,c
  3970  000F1E  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  3971  000F20                     l5342:
  3972                           
  3973                           ; BSR set to: 0
  3974                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
  3975  000F20  C0A2  F033         	movff	efgtoa@h,___flsub@b
  3976  000F24  C0A3  F034         	movff	efgtoa@h+1,___flsub@b+1
  3977  000F28  C0A4  F035         	movff	efgtoa@h+2,___flsub@b+2
  3978  000F2C  C0A5  F036         	movff	efgtoa@h+3,___flsub@b+3
  3979  000F30  C0B4  F01E         	movff	efgtoa@u,___flmul@a
  3980  000F34  C0B5  F01F         	movff	efgtoa@u+1,___flmul@a+1
  3981  000F38  C0B6  F020         	movff	efgtoa@u+2,___flmul@a+2
  3982  000F3C  C0B7  F021         	movff	efgtoa@u+3,___flmul@a+3
  3983  000F40  C0A6  F01A         	movff	efgtoa@l,___flmul@b
  3984  000F44  C0A7  F01B         	movff	efgtoa@l+1,___flmul@b+1
  3985  000F48  C0A8  F01C         	movff	efgtoa@l+2,___flmul@b+2
  3986  000F4C  C0A9  F01D         	movff	efgtoa@l+3,___flmul@b+3
  3987  000F50  EC86  F00D         	call	___flmul	;wreg free
  3988  000F54  C01A  F037         	movff	?___flmul,___flsub@a
  3989  000F58  C01B  F038         	movff	?___flmul+1,___flsub@a+1
  3990  000F5C  C01C  F039         	movff	?___flmul+2,___flsub@a+2
  3991  000F60  C01D  F03A         	movff	?___flmul+3,___flsub@a+3
  3992  000F64  EC96  F01B         	call	___flsub	;wreg free
  3993  000F68  C033  F0A2         	movff	?___flsub,efgtoa@h
  3994  000F6C  C034  F0A3         	movff	?___flsub+1,efgtoa@h+1
  3995  000F70  C035  F0A4         	movff	?___flsub+2,efgtoa@h+2
  3996  000F74  C036  F0A5         	movff	?___flsub+3,efgtoa@h+3
  3997  000F78                     
  3998                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
  3999  000F78  C0B4  F00C         	movff	efgtoa@u,___fldiv@b
  4000  000F7C  C0B5  F00D         	movff	efgtoa@u+1,___fldiv@b+1
  4001  000F80  C0B6  F00E         	movff	efgtoa@u+2,___fldiv@b+2
  4002  000F84  C0B7  F00F         	movff	efgtoa@u+3,___fldiv@b+3
  4003  000F88  0E00               	movlw	0
  4004  000F8A  6E10               	movwf	___fldiv@a^0,c
  4005  000F8C  0E00               	movlw	0
  4006  000F8E  6E11               	movwf	(___fldiv@a+1)^0,c
  4007  000F90  0E20               	movlw	32
  4008  000F92  6E12               	movwf	(___fldiv@a+2)^0,c
  4009  000F94  0E41               	movlw	65
  4010  000F96  6E13               	movwf	(___fldiv@a+3)^0,c
  4011  000F98  EC9B  F00F         	call	___fldiv	;wreg free
  4012  000F9C  C00C  F0B4         	movff	?___fldiv,efgtoa@u
  4013  000FA0  C00D  F0B5         	movff	?___fldiv+1,efgtoa@u+1
  4014  000FA4  C00E  F0B6         	movff	?___fldiv+2,efgtoa@u+2
  4015  000FA8  C00F  F0B7         	movff	?___fldiv+3,efgtoa@u+3
  4016  000FAC                     
  4017                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
  4018  000FAC  0100               	movlb	0	; () banked
  4019  000FAE  0796               	decf	efgtoa@ne& (0+255),f,b
  4020  000FB0  A0D8               	btfss	status,0,c
  4021  000FB2  0797               	decf	(efgtoa@ne+1)& (0+255),f,b
  4022  000FB4                     
  4023                           ; BSR set to: 0
  4024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
  4025  000FB4  4BAA               	infsnz	efgtoa@i& (0+255),f,b
  4026  000FB6  2BAB               	incf	(efgtoa@i+1)& (0+255),f,b
  4027  000FB8                     l5350:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
  4031  000FB8  5194               	movf	efgtoa@m& (0+255),w,b
  4032  000FBA  5DAA               	subwf	efgtoa@i& (0+255),w,b
  4033  000FBC  51AB               	movf	(efgtoa@i+1)& (0+255),w,b
  4034  000FBE  0A80               	xorlw	128
  4035  000FC0  6E46               	movwf	??_efgtoa^0,c
  4036  000FC2  5195               	movf	(efgtoa@m+1)& (0+255),w,b
  4037  000FC4  0A80               	xorlw	128
  4038  000FC6  5846               	subwfb	??_efgtoa^0,w,c
  4039  000FC8  B0D8               	btfsc	status,0,c
  4040  000FCA  EFE9  F007         	goto	u7261
  4041  000FCE  EFEB  F007         	goto	u7260
  4042  000FD2                     u7261:
  4043  000FD2  EFF9  F007         	goto	l5354
  4044  000FD6                     u7260:
  4045  000FD6                     
  4046                           ; BSR set to: 0
  4047  000FD6  BFB3               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4048  000FD8  EFF7  F007         	goto	u7271
  4049  000FDC  51B3               	movf	(efgtoa@n+1)& (0+255),w,b
  4050  000FDE  E109               	bnz	u7270
  4051  000FE0  0E4B               	movlw	75
  4052  000FE2  5DB2               	subwf	efgtoa@n& (0+255),w,b
  4053  000FE4  A0D8               	btfss	status,0,c
  4054  000FE6  EFF7  F007         	goto	u7271
  4055  000FEA  EFF9  F007         	goto	u7270
  4056  000FEE                     u7271:
  4057  000FEE  EFEE  F006         	goto	l5302
  4058  000FF2                     u7270:
  4059  000FF2                     l5354:
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
  4063  000FF2  5192               	movf	efgtoa@pp& (0+255),w,b
  4064  000FF4  1193               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4065  000FF6  A4D8               	btfss	status,2,c
  4066  000FF8  EF00  F008         	goto	u7281
  4067  000FFC  EF02  F008         	goto	u7280
  4068  001000                     u7281:
  4069  001000  EF13  F008         	goto	l5362
  4070  001004                     u7280:
  4071  001004                     
  4072                           ; BSR set to: 0
  4073  001004  A86F               	btfss	_flags^0,4,c
  4074  001006  EF07  F008         	goto	u7291
  4075  00100A  EF09  F008         	goto	u7290
  4076  00100E                     u7291:
  4077  00100E  EF13  F008         	goto	l5362
  4078  001012                     u7290:
  4079  001012                     
  4080                           ; BSR set to: 0
  4081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
  4082  001012  0E00               	movlw	low _dbuf
  4083  001014  25B2               	addwf	efgtoa@n& (0+255),w,b
  4084  001016  6ED9               	movwf	fsr2l,c
  4085  001018  0E01               	movlw	high _dbuf
  4086  00101A  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4087  00101C  6EDA               	movwf	fsr2h,c
  4088  00101E  0E2E               	movlw	46
  4089  001020  6EDF               	movwf	indf2,c
  4090  001022                     
  4091                           ; BSR set to: 0
  4092  001022  4BB2               	infsnz	efgtoa@n& (0+255),f,b
  4093  001024  2BB3               	incf	(efgtoa@n+1)& (0+255),f,b
  4094  001026                     l5362:
  4095                           
  4096                           ; BSR set to: 0
  4097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
  4098  001026  0E00               	movlw	low _dbuf
  4099  001028  25B2               	addwf	efgtoa@n& (0+255),w,b
  4100  00102A  6ED9               	movwf	fsr2l,c
  4101  00102C  0E01               	movlw	high _dbuf
  4102  00102E  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4103  001030  6EDA               	movwf	fsr2h,c
  4104  001032  0E00               	movlw	0
  4105  001034  6EDF               	movwf	indf2,c
  4106  001036                     
  4107                           ; BSR set to: 0
  4108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
  4109  001036  0E65               	movlw	101
  4110  001038  199E               	xorwf	efgtoa@nmode& (0+255),w,b
  4111  00103A  A4D8               	btfss	status,2,c
  4112  00103C  EF22  F008         	goto	u7301
  4113  001040  EF24  F008         	goto	u7300
  4114  001044                     u7301:
  4115  001044  EFD1  F003         	goto	l5174
  4116  001048                     u7300:
  4117  001048                     
  4118                           ; BSR set to: 0
  4119                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
  4120  001048  0E00               	movlw	0
  4121  00104A  6FAB               	movwf	(efgtoa@i+1)& (0+255),b
  4122  00104C  0E4F               	movlw	79
  4123  00104E  6FAA               	movwf	efgtoa@i& (0+255),b
  4124  001050                     
  4125                           ; BSR set to: 0
  4126                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
  4127  001050  0E00               	movlw	low _dbuf
  4128  001052  25AA               	addwf	efgtoa@i& (0+255),w,b
  4129  001054  6ED9               	movwf	fsr2l,c
  4130  001056  0E01               	movlw	high _dbuf
  4131  001058  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4132  00105A  6EDA               	movwf	fsr2h,c
  4133  00105C  0E00               	movlw	0
  4134  00105E  6EDF               	movwf	indf2,c
  4135  001060                     
  4136                           ; BSR set to: 0
  4137                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
  4138  001060  0E00               	movlw	0
  4139  001062  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4140  001064  0E00               	movlw	0
  4141  001066  6F9A               	movwf	efgtoa@sign& (0+255),b
  4142  001068                     
  4143                           ; BSR set to: 0
  4144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
  4145  001068  BFB1               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4146  00106A  EF3B  F008         	goto	u7310
  4147  00106E  EF39  F008         	goto	u7311
  4148  001072                     u7311:
  4149  001072  EF43  F008         	goto	l5378
  4150  001076                     u7310:
  4151  001076                     
  4152                           ; BSR set to: 0
  4153                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
  4154  001076  0E00               	movlw	0
  4155  001078  6F9B               	movwf	(efgtoa@sign+1)& (0+255),b
  4156  00107A  0E01               	movlw	1
  4157  00107C  6F9A               	movwf	efgtoa@sign& (0+255),b
  4158  00107E                     
  4159                           ; BSR set to: 0
  4160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
  4161  00107E  6DB0               	negf	efgtoa@e& (0+255),b
  4162  001080  1FB1               	comf	(efgtoa@e+1)& (0+255),f,b
  4163  001082  B0D8               	btfsc	status,0,c
  4164  001084  2BB1               	incf	(efgtoa@e+1)& (0+255),f,b
  4165  001086                     l5378:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
  4169  001086  0E00               	movlw	0
  4170  001088  6F9D               	movwf	(efgtoa@p+1)& (0+255),b
  4171  00108A  0E02               	movlw	2
  4172  00108C  6F9C               	movwf	efgtoa@p& (0+255),b
  4173                           
  4174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4175  00108E  EF74  F008         	goto	l5390
  4176  001092                     l5380:
  4177                           
  4178                           ; BSR set to: 0
  4179                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
  4180  001092  07AA               	decf	efgtoa@i& (0+255),f,b
  4181  001094  A0D8               	btfss	status,0,c
  4182  001096  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4183  001098                     
  4184                           ; BSR set to: 0
  4185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
  4186  001098  0E00               	movlw	low _dbuf
  4187  00109A  25AA               	addwf	efgtoa@i& (0+255),w,b
  4188  00109C  6ED9               	movwf	fsr2l,c
  4189  00109E  0E01               	movlw	high _dbuf
  4190  0010A0  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4191  0010A2  6EDA               	movwf	fsr2h,c
  4192  0010A4  C0B0  F00C         	movff	efgtoa@e,___awmod@dividend
  4193  0010A8  C0B1  F00D         	movff	efgtoa@e+1,___awmod@dividend+1
  4194  0010AC  0E00               	movlw	0
  4195  0010AE  6E0F               	movwf	(___awmod@divisor+1)^0,c
  4196  0010B0  0E0A               	movlw	10
  4197  0010B2  6E0E               	movwf	___awmod@divisor^0,c
  4198  0010B4  ECD5  F018         	call	___awmod	;wreg free
  4199  0010B8  500C               	movf	?___awmod^0,w,c
  4200  0010BA  0F30               	addlw	48
  4201  0010BC  6EDF               	movwf	indf2,c
  4202  0010BE                     
  4203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
  4204  0010BE  C0B0  F00C         	movff	efgtoa@e,___awdiv@dividend
  4205  0010C2  C0B1  F00D         	movff	efgtoa@e+1,___awdiv@dividend+1
  4206  0010C6  0E00               	movlw	0
  4207  0010C8  6E0F               	movwf	(___awdiv@divisor+1)^0,c
  4208  0010CA  0E0A               	movlw	10
  4209  0010CC  6E0E               	movwf	___awdiv@divisor^0,c
  4210  0010CE  ECB2  F017         	call	___awdiv	;wreg free
  4211  0010D2  C00C  F0B0         	movff	?___awdiv,efgtoa@e
  4212  0010D6  C00D  F0B1         	movff	?___awdiv+1,efgtoa@e+1
  4213  0010DA                     
  4214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
  4215  0010DA  0100               	movlb	0	; () banked
  4216  0010DC  079C               	decf	efgtoa@p& (0+255),f,b
  4217  0010DE  A0D8               	btfss	status,0,c
  4218  0010E0  079D               	decf	(efgtoa@p+1)& (0+255),f,b
  4219  0010E2                     
  4220                           ; BSR set to: 0
  4221                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
  4222  0010E2  079F               	decf	efgtoa@w& (0+255),f,b
  4223  0010E4  A0D8               	btfss	status,0,c
  4224  0010E6  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4225  0010E8                     l5390:
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
  4229  0010E8  51B0               	movf	efgtoa@e& (0+255),w,b
  4230  0010EA  11B1               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4231  0010EC  A4D8               	btfss	status,2,c
  4232  0010EE  EF7B  F008         	goto	u7321
  4233  0010F2  EF7D  F008         	goto	u7320
  4234  0010F6                     u7321:
  4235  0010F6  EF49  F008         	goto	l5380
  4236  0010FA                     u7320:
  4237  0010FA                     
  4238                           ; BSR set to: 0
  4239  0010FA  BF9D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4240  0010FC  EF8A  F008         	goto	u7330
  4241  001100  519D               	movf	(efgtoa@p+1)& (0+255),w,b
  4242  001102  E106               	bnz	u7331
  4243  001104  059C               	decf	efgtoa@p& (0+255),w,b
  4244  001106  B0D8               	btfsc	status,0,c
  4245  001108  EF88  F008         	goto	u7331
  4246  00110C  EF8A  F008         	goto	u7330
  4247  001110                     u7331:
  4248  001110  EF49  F008         	goto	l5380
  4249  001114                     u7330:
  4250  001114                     
  4251                           ; BSR set to: 0
  4252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
  4253  001114  07AA               	decf	efgtoa@i& (0+255),f,b
  4254  001116  A0D8               	btfss	status,0,c
  4255  001118  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4256  00111A                     
  4257                           ; BSR set to: 0
  4258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
  4259  00111A  519A               	movf	efgtoa@sign& (0+255),w,b
  4260  00111C  119B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4261  00111E  A4D8               	btfss	status,2,c
  4262  001120  EF94  F008         	goto	u7341
  4263  001124  EF96  F008         	goto	u7340
  4264  001128                     u7341:
  4265  001128  EF9C  F008         	goto	l5400
  4266  00112C                     u7340:
  4267  00112C                     
  4268                           ; BSR set to: 0
  4269  00112C  0E00               	movlw	0
  4270  00112E  6F8B               	movwf	(_efgtoa$941+1)& (0+255),b
  4271  001130  0E2B               	movlw	43
  4272  001132  6F8A               	movwf	_efgtoa$941& (0+255),b
  4273  001134  EFA0  F008         	goto	l5402
  4274  001138                     l5400:
  4275                           
  4276                           ; BSR set to: 0
  4277  001138  0E00               	movlw	0
  4278  00113A  6F8B               	movwf	(_efgtoa$941+1)& (0+255),b
  4279  00113C  0E2D               	movlw	45
  4280  00113E  6F8A               	movwf	_efgtoa$941& (0+255),b
  4281  001140                     l5402:
  4282                           
  4283                           ; BSR set to: 0
  4284  001140  0E00               	movlw	low _dbuf
  4285  001142  25AA               	addwf	efgtoa@i& (0+255),w,b
  4286  001144  6ED9               	movwf	fsr2l,c
  4287  001146  0E01               	movlw	high _dbuf
  4288  001148  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4289  00114A  6EDA               	movwf	fsr2h,c
  4290  00114C  C08A  FFDF         	movff	_efgtoa$941,indf2
  4291  001150                     
  4292                           ; BSR set to: 0
  4293                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
  4294  001150  079F               	decf	efgtoa@w& (0+255),f,b
  4295  001152  A0D8               	btfss	status,0,c
  4296  001154  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4297  001156                     
  4298                           ; BSR set to: 0
  4299                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4300  001156  07AA               	decf	efgtoa@i& (0+255),f,b
  4301  001158  A0D8               	btfss	status,0,c
  4302  00115A  07AB               	decf	(efgtoa@i+1)& (0+255),f,b
  4303  00115C                     
  4304                           ; BSR set to: 0
  4305  00115C  0EBF               	movlw	191
  4306  00115E  6E46               	movwf	??_efgtoa^0,c
  4307  001160  0EFF               	movlw	255
  4308  001162  6E47               	movwf	(??_efgtoa+1)^0,c
  4309  001164  5045               	movf	efgtoa@c^0,w,c
  4310  001166  6E48               	movwf	(??_efgtoa+2)^0,c
  4311  001168  6A49               	clrf	(??_efgtoa+3)^0,c
  4312  00116A  5046               	movf	??_efgtoa^0,w,c
  4313  00116C  2648               	addwf	(??_efgtoa+2)^0,f,c
  4314  00116E  5047               	movf	(??_efgtoa+1)^0,w,c
  4315  001170  2249               	addwfc	(??_efgtoa+3)^0,f,c
  4316  001172  5049               	movf	(??_efgtoa+3)^0,w,c
  4317  001174  E10A               	bnz	u7350
  4318  001176  0E1A               	movlw	26
  4319  001178  5C48               	subwf	(??_efgtoa+2)^0,w,c
  4320  00117A  A0D8               	btfss	status,0,c
  4321  00117C  EFC2  F008         	goto	u7351
  4322  001180  EFC5  F008         	goto	u7350
  4323  001184                     u7351:
  4324  001184  0E01               	movlw	1
  4325  001186  EFC6  F008         	goto	u7360
  4326  00118A                     u7350:
  4327  00118A  0E00               	movlw	0
  4328  00118C                     u7360:
  4329  00118C  6F8E               	movwf	_efgtoa$943& (0+255),b
  4330  00118E  6B8F               	clrf	(_efgtoa$943+1)& (0+255),b
  4331  001190                     
  4332                           ; BSR set to: 0
  4333  001190  518E               	movf	_efgtoa$943& (0+255),w,b
  4334  001192  118F               	iorwf	(_efgtoa$943+1)& (0+255),w,b
  4335  001194  A4D8               	btfss	status,2,c
  4336  001196  EFCF  F008         	goto	u7371
  4337  00119A  EFD1  F008         	goto	u7370
  4338  00119E                     u7371:
  4339  00119E  EFD7  F008         	goto	l5416
  4340  0011A2                     u7370:
  4341  0011A2                     
  4342                           ; BSR set to: 0
  4343  0011A2  0E00               	movlw	0
  4344  0011A4  6F8D               	movwf	(_efgtoa$942+1)& (0+255),b
  4345  0011A6  0E65               	movlw	101
  4346  0011A8  6F8C               	movwf	_efgtoa$942& (0+255),b
  4347  0011AA  EFDB  F008         	goto	l5418
  4348  0011AE                     l5416:
  4349                           
  4350                           ; BSR set to: 0
  4351  0011AE  0E00               	movlw	0
  4352  0011B0  6F8D               	movwf	(_efgtoa$942+1)& (0+255),b
  4353  0011B2  0E45               	movlw	69
  4354  0011B4  6F8C               	movwf	_efgtoa$942& (0+255),b
  4355  0011B6                     l5418:
  4356                           
  4357                           ; BSR set to: 0
  4358  0011B6  0E00               	movlw	low _dbuf
  4359  0011B8  25AA               	addwf	efgtoa@i& (0+255),w,b
  4360  0011BA  6ED9               	movwf	fsr2l,c
  4361  0011BC  0E01               	movlw	high _dbuf
  4362  0011BE  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4363  0011C0  6EDA               	movwf	fsr2h,c
  4364  0011C2  C08C  FFDF         	movff	_efgtoa$942,indf2
  4365  0011C6                     
  4366                           ; BSR set to: 0
  4367                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
  4368  0011C6  079F               	decf	efgtoa@w& (0+255),f,b
  4369  0011C8  A0D8               	btfss	status,0,c
  4370  0011CA  07A0               	decf	(efgtoa@w+1)& (0+255),f,b
  4371  0011CC                     
  4372                           ; BSR set to: 0
  4373                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
  4374  0011CC  0E00               	movlw	low _dbuf
  4375  0011CE  25B2               	addwf	efgtoa@n& (0+255),w,b
  4376  0011D0  6E0C               	movwf	strcpy@dest^0,c
  4377  0011D2  0E01               	movlw	high _dbuf
  4378  0011D4  21B3               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4379  0011D6  6E0D               	movwf	(strcpy@dest+1)^0,c
  4380  0011D8  0E00               	movlw	low _dbuf
  4381  0011DA  25AA               	addwf	efgtoa@i& (0+255),w,b
  4382  0011DC  6E0E               	movwf	strcpy@src^0,c
  4383  0011DE  0E01               	movlw	high _dbuf
  4384  0011E0  21AB               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4385  0011E2  6E0F               	movwf	(strcpy@src+1)^0,c
  4386  0011E4  ECC9  F01A         	call	_strcpy	;wreg free
  4387  0011E8  EFD1  F003         	goto	l5174
  4388  0011EC                     l241:
  4389  0011EC  0012               	return		;funcret
  4390  0011EE                     __end_of_efgtoa:
  4391                           	opt callstack 0
  4392                           
  4393 ;; *************** function _tolower *****************
  4394 ;; Defined at:
  4395 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
  4396 ;; Parameters:    Size  Location     Type
  4397 ;;  c               2   17[COMRAM] int 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;		None
  4400 ;; Return value:  Size  Location     Type
  4401 ;;                  2   17[COMRAM] int 
  4402 ;; Registers used:
  4403 ;;		wreg, status,2, status,0
  4404 ;; Tracked objects:
  4405 ;;		On entry : 0/0
  4406 ;;		On exit  : 0/0
  4407 ;;		Unchanged: 0/0
  4408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4409 ;;      Params:         2       0       0       0       0       0       0
  4410 ;;      Locals:         2       0       0       0       0       0       0
  4411 ;;      Temps:          4       0       0       0       0       0       0
  4412 ;;      Totals:         8       0       0       0       0       0       0
  4413 ;;Total ram usage:        8 bytes
  4414 ;; Hardware stack levels used:    1
  4415 ;; Hardware stack levels required when called:    5
  4416 ;; This function calls:
  4417 ;;		_isupper
  4418 ;; This function is called by:
  4419 ;;		_efgtoa
  4420 ;;		_vfpfcnvrt
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424                           	psect	text15
  4425  0034D4                     __ptext15:
  4426                           	opt callstack 0
  4427  0034D4                     _tolower:
  4428                           	opt callstack 21
  4429  0034D4  0EBF               	movlw	191
  4430  0034D6  6E14               	movwf	??_tolower^0,c
  4431  0034D8  0EFF               	movlw	255
  4432  0034DA  6E15               	movwf	(??_tolower+1)^0,c
  4433  0034DC  C012  F016         	movff	tolower@c,??_tolower+2
  4434  0034E0  C013  F017         	movff	tolower@c+1,??_tolower+3
  4435  0034E4  5014               	movf	??_tolower^0,w,c
  4436  0034E6  2616               	addwf	(??_tolower+2)^0,f,c
  4437  0034E8  5015               	movf	(??_tolower+1)^0,w,c
  4438  0034EA  2217               	addwfc	(??_tolower+3)^0,f,c
  4439  0034EC  5017               	movf	(??_tolower+3)^0,w,c
  4440  0034EE  E10A               	bnz	u5990
  4441  0034F0  0E1A               	movlw	26
  4442  0034F2  5C16               	subwf	(??_tolower+2)^0,w,c
  4443  0034F4  A0D8               	btfss	status,0,c
  4444  0034F6  EF7F  F01A         	goto	u5991
  4445  0034FA  EF82  F01A         	goto	u5990
  4446  0034FE                     u5991:
  4447  0034FE  0E01               	movlw	1
  4448  003500  EF83  F01A         	goto	u6000
  4449  003504                     u5990:
  4450  003504  0E00               	movlw	0
  4451  003506                     u6000:
  4452  003506  6E18               	movwf	_tolower$1566^0,c
  4453  003508  6A19               	clrf	(_tolower$1566+1)^0,c
  4454  00350A  5018               	movf	_tolower$1566^0,w,c
  4455  00350C  1019               	iorwf	(_tolower$1566+1)^0,w,c
  4456  00350E  B4D8               	btfsc	status,2,c
  4457  003510  EF8C  F01A         	goto	u6011
  4458  003514  EF8E  F01A         	goto	u6010
  4459  003518                     u6011:
  4460  003518  EF95  F01A         	goto	l1176
  4461  00351C                     u6010:
  4462  00351C  0E20               	movlw	32
  4463  00351E  1012               	iorwf	tolower@c^0,w,c
  4464  003520  6E12               	movwf	?_tolower^0,c
  4465  003522  5013               	movf	(tolower@c+1)^0,w,c
  4466  003524  6E13               	movwf	(?_tolower+1)^0,c
  4467  003526  EF99  F01A         	goto	l1181
  4468  00352A                     l1176:
  4469  00352A  C012  F012         	movff	tolower@c,?_tolower
  4470  00352E  C013  F013         	movff	tolower@c+1,?_tolower+1
  4471  003532                     l1181:
  4472  003532  0012               	return		;funcret
  4473  003534                     __end_of_tolower:
  4474                           	opt callstack 0
  4475                           
  4476 ;; *************** function _isupper *****************
  4477 ;; Defined at:
  4478 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;  c               2   11[COMRAM] int 
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;                  2   11[COMRAM] int 
  4485 ;; Registers used:
  4486 ;;		wreg, status,2, status,0
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4492 ;;      Params:         2       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0
  4494 ;;      Temps:          4       0       0       0       0       0       0
  4495 ;;      Totals:         6       0       0       0       0       0       0
  4496 ;;Total ram usage:        6 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    4
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_efgtoa
  4503 ;;		_vfpfcnvrt
  4504 ;;		_tolower
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text16
  4509  003876                     __ptext16:
  4510                           	opt callstack 0
  4511  003876                     _isupper:
  4512                           	opt callstack 21
  4513  003876  0EBF               	movlw	191
  4514  003878  6E0E               	movwf	??_isupper^0,c
  4515  00387A  0EFF               	movlw	255
  4516  00387C  6E0F               	movwf	(??_isupper+1)^0,c
  4517  00387E  C00C  F010         	movff	isupper@c,??_isupper+2
  4518  003882  C00D  F011         	movff	isupper@c+1,??_isupper+3
  4519  003886  500E               	movf	??_isupper^0,w,c
  4520  003888  2610               	addwf	(??_isupper+2)^0,f,c
  4521  00388A  500F               	movf	(??_isupper+1)^0,w,c
  4522  00388C  2211               	addwfc	(??_isupper+3)^0,f,c
  4523  00388E  5011               	movf	(??_isupper+3)^0,w,c
  4524  003890  E10A               	bnz	u5450
  4525  003892  0E1A               	movlw	26
  4526  003894  5C10               	subwf	(??_isupper+2)^0,w,c
  4527  003896  A0D8               	btfss	status,0,c
  4528  003898  EF50  F01C         	goto	u5451
  4529  00389C  EF53  F01C         	goto	u5450
  4530  0038A0                     u5451:
  4531  0038A0  0E01               	movlw	1
  4532  0038A2  EF54  F01C         	goto	u5460
  4533  0038A6                     u5450:
  4534  0038A6  0E00               	movlw	0
  4535  0038A8                     u5460:
  4536  0038A8  6E0C               	movwf	?_isupper^0,c
  4537  0038AA  6A0D               	clrf	(?_isupper+1)^0,c
  4538  0038AC  0012               	return		;funcret
  4539  0038AE                     __end_of_isupper:
  4540                           	opt callstack 0
  4541                           
  4542 ;; *************** function _strcpy *****************
  4543 ;; Defined at:
  4544 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  dest            2   11[COMRAM] PTR unsigned char 
  4547 ;;		 -> dbuf(80), 
  4548 ;;  src             2   13[COMRAM] PTR const unsigned char 
  4549 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4550 ;;		 -> dbuf(80), 
  4551 ;; Auto vars:     Size  Location     Type
  4552 ;;  d               2   19[COMRAM] PTR unsigned char 
  4553 ;;		 -> dbuf(80), 
  4554 ;;  s               2   17[COMRAM] PTR const unsigned char 
  4555 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4556 ;;		 -> dbuf(80), 
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  2   11[COMRAM] PTR unsigned char 
  4559 ;; Registers used:
  4560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         4       0       0       0       0       0       0
  4567 ;;      Locals:         4       0       0       0       0       0       0
  4568 ;;      Temps:          2       0       0       0       0       0       0
  4569 ;;      Totals:        10       0       0       0       0       0       0
  4570 ;;Total ram usage:       10 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:    4
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_efgtoa
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text17
  4581  003592                     __ptext17:
  4582                           	opt callstack 0
  4583  003592                     _strcpy:
  4584                           	opt callstack 21
  4585  003592  C00E  F012         	movff	strcpy@src,strcpy@s
  4586  003596  C00F  F013         	movff	strcpy@src+1,strcpy@s+1
  4587  00359A  C00C  F014         	movff	strcpy@dest,strcpy@d
  4588  00359E  C00D  F015         	movff	strcpy@dest+1,strcpy@d+1
  4589  0035A2                     l4624:
  4590  0035A2  5012               	movf	strcpy@s^0,w,c
  4591  0035A4  6E10               	movwf	??_strcpy^0,c
  4592  0035A6  5013               	movf	(strcpy@s+1)^0,w,c
  4593  0035A8  6E11               	movwf	(??_strcpy+1)^0,c
  4594  0035AA  4A12               	infsnz	strcpy@s^0,f,c
  4595  0035AC  2A13               	incf	(strcpy@s+1)^0,f,c
  4596  0035AE  C010  FFF6         	movff	??_strcpy,tblptrl
  4597  0035B2  C011  FFF7         	movff	??_strcpy+1,tblptrh
  4598  0035B6  6AF8               	clrf	tblptru,c
  4599  0035B8  C014  FFD9         	movff	strcpy@d,fsr2l
  4600  0035BC  C015  FFDA         	movff	strcpy@d+1,fsr2h
  4601  0035C0  4A14               	infsnz	strcpy@d^0,f,c
  4602  0035C2  2A15               	incf	(strcpy@d+1)^0,f,c
  4603  0035C4  0E05               	movlw	(high __ramtop+-1)
  4604  0035C6  64F7               	cpfsgt	tblptrh,c
  4605  0035C8  D003               	bra	u5977
  4606  0035CA  0008               	tblrd		*
  4607  0035CC  50F5               	movf	tablat,w,c
  4608  0035CE  D005               	bra	u5970
  4609  0035D0                     u5977:
  4610  0035D0  CFF6 FFE1          	movff	tblptrl,fsr1l
  4611  0035D4  CFF7 FFE2          	movff	tblptrh,fsr1h
  4612  0035D8  50E7               	movf	indf1,w,c
  4613  0035DA                     u5970:
  4614  0035DA  6EDF               	movwf	indf2,c
  4615  0035DC  50DF               	movf	indf2,w,c
  4616  0035DE  A4D8               	btfss	status,2,c
  4617  0035E0  EFF4  F01A         	goto	u5981
  4618  0035E4  EFF6  F01A         	goto	u5980
  4619  0035E8                     u5981:
  4620  0035E8  EFD1  F01A         	goto	l4624
  4621  0035EC                     u5980:
  4622  0035EC  0012               	return		;funcret
  4623  0035EE                     __end_of_strcpy:
  4624                           	opt callstack 0
  4625                           
  4626 ;; *************** function _pad *****************
  4627 ;; Defined at:
  4628 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  4629 ;; Parameters:    Size  Location     Type
  4630 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  4631 ;;		 -> sprintf@f(6), 
  4632 ;;  buf             2   29[COMRAM] PTR unsigned char 
  4633 ;;		 -> dbuf(80), 
  4634 ;;  p               2   31[COMRAM] int 
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  w               2   36[COMRAM] int 
  4637 ;;  i               2   34[COMRAM] int 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  2   27[COMRAM] int 
  4640 ;; Registers used:
  4641 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4647 ;;      Params:         6       0       0       0       0       0       0
  4648 ;;      Locals:         4       0       0       0       0       0       0
  4649 ;;      Temps:          1       0       0       0       0       0       0
  4650 ;;      Totals:        11       0       0       0       0       0       0
  4651 ;;Total ram usage:       11 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    7
  4654 ;; This function calls:
  4655 ;;		_fputc
  4656 ;;		_fputs
  4657 ;;		_strlen
  4658 ;; This function is called by:
  4659 ;;		_efgtoa
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           	psect	text18
  4664  003028                     __ptext18:
  4665                           	opt callstack 0
  4666  003028                     _pad:
  4667                           	opt callstack 18
  4668  003028                     
  4669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  4670  003028  A06F               	btfss	_flags^0,0,c
  4671  00302A  EF19  F018         	goto	u5861
  4672  00302E  EF1B  F018         	goto	u5860
  4673  003032                     u5861:
  4674  003032  EF25  F018         	goto	l4582
  4675  003036                     u5860:
  4676  003036                     
  4677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  4678  003036  C01E  F015         	movff	pad@buf,fputs@s
  4679  00303A  C01F  F016         	movff	pad@buf+1,fputs@s+1
  4680  00303E  C01C  F017         	movff	pad@fp,fputs@fp
  4681  003042  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  4682  003046  ECB9  F01B         	call	_fputs	;wreg free
  4683  00304A                     l4582:
  4684                           
  4685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  4686  00304A  BE21               	btfsc	(pad@p+1)^0,7,c
  4687  00304C  EF2A  F018         	goto	u5871
  4688  003050  EF2C  F018         	goto	u5870
  4689  003054                     u5871:
  4690  003054  EF32  F018         	goto	l4586
  4691  003058                     u5870:
  4692  003058  C020  F025         	movff	pad@p,pad@w
  4693  00305C  C021  F026         	movff	pad@p+1,pad@w+1
  4694  003060  EF36  F018         	goto	l218
  4695  003064                     l4586:
  4696  003064  0E00               	movlw	0
  4697  003066  6E26               	movwf	(pad@w+1)^0,c
  4698  003068  0E00               	movlw	0
  4699  00306A  6E25               	movwf	pad@w^0,c
  4700  00306C                     l218:
  4701                           
  4702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  4703  00306C  0E00               	movlw	0
  4704  00306E  6E24               	movwf	(pad@i+1)^0,c
  4705  003070  0E00               	movlw	0
  4706  003072  6E23               	movwf	pad@i^0,c
  4707                           
  4708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4709  003074  EF48  F018         	goto	l4592
  4710  003078                     l4588:
  4711                           
  4712                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  4713  003078  0E00               	movlw	0
  4714  00307A  6E0D               	movwf	(fputc@c+1)^0,c
  4715  00307C  0E20               	movlw	32
  4716  00307E  6E0C               	movwf	fputc@c^0,c
  4717  003080  C01C  F00E         	movff	pad@fp,fputc@fp
  4718  003084  C01D  F00F         	movff	pad@fp+1,fputc@fp+1
  4719  003088  EC4D  F017         	call	_fputc	;wreg free
  4720  00308C                     
  4721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
  4722  00308C  4A23               	infsnz	pad@i^0,f,c
  4723  00308E  2A24               	incf	(pad@i+1)^0,f,c
  4724  003090                     l4592:
  4725                           
  4726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  4727  003090  5025               	movf	pad@w^0,w,c
  4728  003092  5C23               	subwf	pad@i^0,w,c
  4729  003094  5024               	movf	(pad@i+1)^0,w,c
  4730  003096  0A80               	xorlw	128
  4731  003098  6E22               	movwf	??_pad^0,c
  4732  00309A  5026               	movf	(pad@w+1)^0,w,c
  4733  00309C  0A80               	xorlw	128
  4734  00309E  5822               	subwfb	??_pad^0,w,c
  4735  0030A0  A0D8               	btfss	status,0,c
  4736  0030A2  EF55  F018         	goto	u5881
  4737  0030A6  EF57  F018         	goto	u5880
  4738  0030AA                     u5881:
  4739  0030AA  EF3C  F018         	goto	l4588
  4740  0030AE                     u5880:
  4741  0030AE                     
  4742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  4743  0030AE  B06F               	btfsc	_flags^0,0,c
  4744  0030B0  EF5C  F018         	goto	u5891
  4745  0030B4  EF5E  F018         	goto	u5890
  4746  0030B8                     u5891:
  4747  0030B8  EF68  F018         	goto	l4596
  4748  0030BC                     u5890:
  4749  0030BC                     
  4750                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  4751  0030BC  C01E  F015         	movff	pad@buf,fputs@s
  4752  0030C0  C01F  F016         	movff	pad@buf+1,fputs@s+1
  4753  0030C4  C01C  F017         	movff	pad@fp,fputs@fp
  4754  0030C8  C01D  F018         	movff	pad@fp+1,fputs@fp+1
  4755  0030CC  ECB9  F01B         	call	_fputs	;wreg free
  4756  0030D0                     l4596:
  4757                           
  4758                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
  4759  0030D0  C01E  F00C         	movff	pad@buf,strlen@s
  4760  0030D4  C01F  F00D         	movff	pad@buf+1,strlen@s+1
  4761  0030D8  EC49  F01B         	call	_strlen	;wreg free
  4762  0030DC  5025               	movf	pad@w^0,w,c
  4763  0030DE  240C               	addwf	?_strlen^0,w,c
  4764  0030E0  6E1C               	movwf	?_pad^0,c
  4765  0030E2  5026               	movf	(pad@w+1)^0,w,c
  4766  0030E4  200D               	addwfc	(?_strlen+1)^0,w,c
  4767  0030E6  6E1D               	movwf	(?_pad+1)^0,c
  4768  0030E8  0012               	return		;funcret
  4769  0030EA                     __end_of_pad:
  4770                           	opt callstack 0
  4771                           
  4772 ;; *************** function _strlen *****************
  4773 ;; Defined at:
  4774 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  s               2   11[COMRAM] PTR const unsigned char 
  4777 ;;		 -> dbuf(80), STR_8(6), STR_7(6), STR_6(6), 
  4778 ;;		 -> STR_3(2), 
  4779 ;; Auto vars:     Size  Location     Type
  4780 ;;  a               2   13[COMRAM] PTR const unsigned char 
  4781 ;;		 -> dbuf(80), STR_8(6), STR_7(6), STR_6(6), 
  4782 ;;		 -> STR_3(2), 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  2   11[COMRAM] unsigned int 
  4785 ;; Registers used:
  4786 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4792 ;;      Params:         2       0       0       0       0       0       0
  4793 ;;      Locals:         2       0       0       0       0       0       0
  4794 ;;      Temps:          0       0       0       0       0       0       0
  4795 ;;      Totals:         4       0       0       0       0       0       0
  4796 ;;Total ram usage:        4 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    4
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_pad
  4803 ;;		_strstr
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text19
  4808  003692                     __ptext19:
  4809                           	opt callstack 0
  4810  003692                     _strlen:
  4811                           	opt callstack 25
  4812  003692  C00C  F00E         	movff	strlen@s,strlen@a
  4813  003696  C00D  F00F         	movff	strlen@s+1,strlen@a+1
  4814  00369A  EF51  F01B         	goto	l4366
  4815  00369E                     l4364:
  4816  00369E  4A0C               	infsnz	strlen@s^0,f,c
  4817  0036A0  2A0D               	incf	(strlen@s+1)^0,f,c
  4818  0036A2                     l4366:
  4819  0036A2  C00C  FFF6         	movff	strlen@s,tblptrl
  4820  0036A6  C00D  FFF7         	movff	strlen@s+1,tblptrh
  4821  0036AA  6AF8               	clrf	tblptru,c
  4822  0036AC  0E05               	movlw	(high __ramtop+-1)
  4823  0036AE  64F7               	cpfsgt	tblptrh,c
  4824  0036B0  D003               	bra	u5437
  4825  0036B2  0008               	tblrd		*
  4826  0036B4  50F5               	movf	tablat,w,c
  4827  0036B6  D005               	bra	u5430
  4828  0036B8                     u5437:
  4829  0036B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  4830  0036BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  4831  0036C0  50E7               	movf	indf1,w,c
  4832  0036C2                     u5430:
  4833  0036C2  0900               	iorlw	0
  4834  0036C4  A4D8               	btfss	status,2,c
  4835  0036C6  EF67  F01B         	goto	u5441
  4836  0036CA  EF69  F01B         	goto	u5440
  4837  0036CE                     u5441:
  4838  0036CE  EF4F  F01B         	goto	l4364
  4839  0036D2                     u5440:
  4840  0036D2  500E               	movf	strlen@a^0,w,c
  4841  0036D4  5C0C               	subwf	strlen@s^0,w,c
  4842  0036D6  6E0C               	movwf	?_strlen^0,c
  4843  0036D8  500F               	movf	(strlen@a+1)^0,w,c
  4844  0036DA  580D               	subwfb	(strlen@s+1)^0,w,c
  4845  0036DC  6E0D               	movwf	(?_strlen+1)^0,c
  4846  0036DE  0012               	return		;funcret
  4847  0036E0                     __end_of_strlen:
  4848                           	opt callstack 0
  4849                           
  4850 ;; *************** function _fputs *****************
  4851 ;; Defined at:
  4852 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
  4853 ;; Parameters:    Size  Location     Type
  4854 ;;  s               2   20[COMRAM] PTR const unsigned char 
  4855 ;;		 -> dbuf(80), 
  4856 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4857 ;;		 -> sprintf@f(6), 
  4858 ;; Auto vars:     Size  Location     Type
  4859 ;;  i               2   25[COMRAM] int 
  4860 ;;  c               1   24[COMRAM] unsigned char 
  4861 ;; Return value:  Size  Location     Type
  4862 ;;                  2   20[COMRAM] int 
  4863 ;; Registers used:
  4864 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4865 ;; Tracked objects:
  4866 ;;		On entry : 0/0
  4867 ;;		On exit  : 0/0
  4868 ;;		Unchanged: 0/0
  4869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4870 ;;      Params:         4       0       0       0       0       0       0
  4871 ;;      Locals:         3       0       0       0       0       0       0
  4872 ;;      Temps:          0       0       0       0       0       0       0
  4873 ;;      Totals:         7       0       0       0       0       0       0
  4874 ;;Total ram usage:        7 bytes
  4875 ;; Hardware stack levels used:    1
  4876 ;; Hardware stack levels required when called:    6
  4877 ;; This function calls:
  4878 ;;		_fputc
  4879 ;; This function is called by:
  4880 ;;		_pad
  4881 ;; This function uses a non-reentrant model
  4882 ;;
  4883                           
  4884                           	psect	text20
  4885  003772                     __ptext20:
  4886                           	opt callstack 0
  4887  003772                     _fputs:
  4888                           	opt callstack 18
  4889  003772  0E00               	movlw	0
  4890  003774  6E1B               	movwf	(fputs@i+1)^0,c
  4891  003776  0E00               	movlw	0
  4892  003778  6E1A               	movwf	fputs@i^0,c
  4893  00377A  EFCA  F01B         	goto	l4360
  4894  00377E                     l4356:
  4895  00377E  C019  F00C         	movff	fputs@c,fputc@c
  4896  003782  6A0D               	clrf	(fputc@c+1)^0,c
  4897  003784  C017  F00E         	movff	fputs@fp,fputc@fp
  4898  003788  C018  F00F         	movff	fputs@fp+1,fputc@fp+1
  4899  00378C  EC4D  F017         	call	_fputc	;wreg free
  4900  003790  4A1A               	infsnz	fputs@i^0,f,c
  4901  003792  2A1B               	incf	(fputs@i+1)^0,f,c
  4902  003794                     l4360:
  4903  003794  501A               	movf	fputs@i^0,w,c
  4904  003796  2415               	addwf	fputs@s^0,w,c
  4905  003798  6ED9               	movwf	fsr2l,c
  4906  00379A  501B               	movf	(fputs@i+1)^0,w,c
  4907  00379C  2016               	addwfc	(fputs@s+1)^0,w,c
  4908  00379E  6EDA               	movwf	fsr2h,c
  4909  0037A0  50DF               	movf	indf2,w,c
  4910  0037A2  6E19               	movwf	fputs@c^0,c
  4911  0037A4  5019               	movf	fputs@c^0,w,c
  4912  0037A6  A4D8               	btfss	status,2,c
  4913  0037A8  EFD8  F01B         	goto	u5421
  4914  0037AC  EFDA  F01B         	goto	u5420
  4915  0037B0                     u5421:
  4916  0037B0  EFBF  F01B         	goto	l4356
  4917  0037B4                     u5420:
  4918  0037B4  0012               	return		;funcret
  4919  0037B6                     __end_of_fputs:
  4920                           	opt callstack 0
  4921                           
  4922 ;; *************** function _fputc *****************
  4923 ;; Defined at:
  4924 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;  c               2   11[COMRAM] int 
  4927 ;;  fp              2   13[COMRAM] PTR struct _IO_FILE
  4928 ;;		 -> sprintf@f(6), 
  4929 ;; Auto vars:     Size  Location     Type
  4930 ;;		None
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  2   11[COMRAM] int 
  4933 ;; Registers used:
  4934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4940 ;;      Params:         4       0       0       0       0       0       0
  4941 ;;      Locals:         0       0       0       0       0       0       0
  4942 ;;      Temps:          5       0       0       0       0       0       0
  4943 ;;      Totals:         9       0       0       0       0       0       0
  4944 ;;Total ram usage:        9 bytes
  4945 ;; Hardware stack levels used:    1
  4946 ;; Hardware stack levels required when called:    5
  4947 ;; This function calls:
  4948 ;;		_putch
  4949 ;; This function is called by:
  4950 ;;		_pad
  4951 ;;		_vfpfcnvrt
  4952 ;;		_fputs
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text21
  4957  002E9A                     __ptext21:
  4958                           	opt callstack 0
  4959  002E9A                     _fputc:
  4960                           	opt callstack 21
  4961  002E9A  500E               	movf	fputc@fp^0,w,c
  4962  002E9C  100F               	iorwf	(fputc@fp+1)^0,w,c
  4963  002E9E  B4D8               	btfsc	status,2,c
  4964  002EA0  EF54  F017         	goto	u5381
  4965  002EA4  EF56  F017         	goto	u5380
  4966  002EA8                     u5381:
  4967  002EA8  EF5F  F017         	goto	l4344
  4968  002EAC                     u5380:
  4969  002EAC  500E               	movf	fputc@fp^0,w,c
  4970  002EAE  100F               	iorwf	(fputc@fp+1)^0,w,c
  4971  002EB0  A4D8               	btfss	status,2,c
  4972  002EB2  EF5D  F017         	goto	u5391
  4973  002EB6  EF5F  F017         	goto	u5390
  4974  002EBA                     u5391:
  4975  002EBA  EF64  F017         	goto	l4346
  4976  002EBE                     u5390:
  4977  002EBE                     l4344:
  4978  002EBE  500C               	movf	fputc@c^0,w,c
  4979  002EC0  EC2C  F01D         	call	_putch
  4980  002EC4  EFB1  F017         	goto	l1116
  4981  002EC8                     l4346:
  4982  002EC8  EE20 F004          	lfsr	2,4
  4983  002ECC  500E               	movf	fputc@fp^0,w,c
  4984  002ECE  26D9               	addwf	fsr2l,f,c
  4985  002ED0  500F               	movf	(fputc@fp+1)^0,w,c
  4986  002ED2  22DA               	addwfc	fsr2h,f,c
  4987  002ED4  50DE               	movf	postinc2,w,c
  4988  002ED6  10DE               	iorwf	postinc2,w,c
  4989  002ED8  B4D8               	btfsc	status,2,c
  4990  002EDA  EF71  F017         	goto	u5401
  4991  002EDE  EF73  F017         	goto	u5400
  4992  002EE2                     u5401:
  4993  002EE2  EF8E  F017         	goto	l4350
  4994  002EE6                     u5400:
  4995  002EE6  EE20 F004          	lfsr	2,4
  4996  002EEA  500E               	movf	fputc@fp^0,w,c
  4997  002EEC  26D9               	addwf	fsr2l,f,c
  4998  002EEE  500F               	movf	(fputc@fp+1)^0,w,c
  4999  002EF0  22DA               	addwfc	fsr2h,f,c
  5000  002EF2  EE10 F002          	lfsr	1,2
  5001  002EF6  500E               	movf	fputc@fp^0,w,c
  5002  002EF8  26E1               	addwf	fsr1l,f,c
  5003  002EFA  500F               	movf	(fputc@fp+1)^0,w,c
  5004  002EFC  22E2               	addwfc	fsr1h,f,c
  5005  002EFE  50DE               	movf	postinc2,w,c
  5006  002F00  5CE6               	subwf	postinc1,w,c
  5007  002F02  50E6               	movf	postinc1,w,c
  5008  002F04  0A80               	xorlw	128
  5009  002F06  6E14               	movwf	(??_fputc+4)^0,c
  5010  002F08  50DE               	movf	postinc2,w,c
  5011  002F0A  0A80               	xorlw	128
  5012  002F0C  5814               	subwfb	(??_fputc+4)^0,w,c
  5013  002F0E  B0D8               	btfsc	status,0,c
  5014  002F10  EF8C  F017         	goto	u5411
  5015  002F14  EF8E  F017         	goto	u5410
  5016  002F18                     u5411:
  5017  002F18  EFB1  F017         	goto	l1116
  5018  002F1C                     u5410:
  5019  002F1C                     l4350:
  5020  002F1C  EE20 F002          	lfsr	2,2
  5021  002F20  500E               	movf	fputc@fp^0,w,c
  5022  002F22  26D9               	addwf	fsr2l,f,c
  5023  002F24  500F               	movf	(fputc@fp+1)^0,w,c
  5024  002F26  22DA               	addwfc	fsr2h,f,c
  5025  002F28  CFDE F010          	movff	postinc2,??_fputc
  5026  002F2C  CFDD F011          	movff	postdec2,??_fputc+1
  5027  002F30  C00E  FFD9         	movff	fputc@fp,fsr2l
  5028  002F34  C00F  FFDA         	movff	fputc@fp+1,fsr2h
  5029  002F38  CFDE F012          	movff	postinc2,??_fputc+2
  5030  002F3C  CFDD F013          	movff	postdec2,??_fputc+3
  5031  002F40  5010               	movf	??_fputc^0,w,c
  5032  002F42  2412               	addwf	(??_fputc+2)^0,w,c
  5033  002F44  6ED9               	movwf	fsr2l,c
  5034  002F46  5011               	movf	(??_fputc+1)^0,w,c
  5035  002F48  2013               	addwfc	(??_fputc+3)^0,w,c
  5036  002F4A  6EDA               	movwf	fsr2h,c
  5037  002F4C  C00C  FFDF         	movff	fputc@c,indf2
  5038  002F50  EE20 F002          	lfsr	2,2
  5039  002F54  500E               	movf	fputc@fp^0,w,c
  5040  002F56  26D9               	addwf	fsr2l,f,c
  5041  002F58  500F               	movf	(fputc@fp+1)^0,w,c
  5042  002F5A  22DA               	addwfc	fsr2h,f,c
  5043  002F5C  2ADE               	incf	postinc2,f,c
  5044  002F5E  0E00               	movlw	0
  5045  002F60  22DD               	addwfc	postdec2,f,c
  5046  002F62                     l1116:
  5047  002F62  0012               	return		;funcret
  5048  002F64                     __end_of_fputc:
  5049                           	opt callstack 0
  5050                           
  5051 ;; *************** function _putch *****************
  5052 ;; Defined at:
  5053 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/putch.c"
  5054 ;; Parameters:    Size  Location     Type
  5055 ;;  c               1    wreg     unsigned char 
  5056 ;; Auto vars:     Size  Location     Type
  5057 ;;  c               1    0[COMRAM] unsigned char 
  5058 ;; Return value:  Size  Location     Type
  5059 ;;                  1    wreg      void 
  5060 ;; Registers used:
  5061 ;;		wreg
  5062 ;; Tracked objects:
  5063 ;;		On entry : 0/0
  5064 ;;		On exit  : 0/0
  5065 ;;		Unchanged: 0/0
  5066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5067 ;;      Params:         0       0       0       0       0       0       0
  5068 ;;      Locals:         0       0       0       0       0       0       0
  5069 ;;      Temps:          0       0       0       0       0       0       0
  5070 ;;      Totals:         0       0       0       0       0       0       0
  5071 ;;Total ram usage:        0 bytes
  5072 ;; Hardware stack levels used:    1
  5073 ;; Hardware stack levels required when called:    4
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_fputc
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text22
  5082  003A58                     __ptext22:
  5083                           	opt callstack 0
  5084  003A58                     _putch:
  5085                           	opt callstack 21
  5086  003A58  0012               	return		;funcret
  5087  003A5A                     __end_of_putch:
  5088                           	opt callstack 0
  5089                           
  5090 ;; *************** function _floorf *****************
  5091 ;; Defined at:
  5092 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
  5093 ;; Parameters:    Size  Location     Type
  5094 ;;  x               4   36[COMRAM] float 
  5095 ;; Auto vars:     Size  Location     Type
  5096 ;;  u               4   52[COMRAM] struct .
  5097 ;;  m               4   46[COMRAM] unsigned long 
  5098 ;;  e               2   50[COMRAM] int 
  5099 ;; Return value:  Size  Location     Type
  5100 ;;                  4   36[COMRAM] float 
  5101 ;; Registers used:
  5102 ;;		wreg, status,2, status,0
  5103 ;; Tracked objects:
  5104 ;;		On entry : 0/0
  5105 ;;		On exit  : 0/0
  5106 ;;		Unchanged: 0/0
  5107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5108 ;;      Params:         4       0       0       0       0       0       0
  5109 ;;      Locals:        10       0       0       0       0       0       0
  5110 ;;      Temps:          6       0       0       0       0       0       0
  5111 ;;      Totals:        20       0       0       0       0       0       0
  5112 ;;Total ram usage:       20 bytes
  5113 ;; Hardware stack levels used:    1
  5114 ;; Hardware stack levels required when called:    4
  5115 ;; This function calls:
  5116 ;;		Nothing
  5117 ;; This function is called by:
  5118 ;;		_efgtoa
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           	psect	text23
  5123  0022D0                     __ptext23:
  5124                           	opt callstack 0
  5125  0022D0                     _floorf:
  5126                           	opt callstack 21
  5127  0022D0  C0D2  F035         	movff	floorf@F524,floorf@u
  5128  0022D4  C0D3  F036         	movff	floorf@F524+1,floorf@u+1
  5129  0022D8  C0D4  F037         	movff	floorf@F524+2,floorf@u+2
  5130  0022DC  C0D5  F038         	movff	floorf@F524+3,floorf@u+3
  5131  0022E0  C025  F035         	movff	floorf@x,floorf@u
  5132  0022E4  C026  F036         	movff	floorf@x+1,floorf@u+1
  5133  0022E8  C027  F037         	movff	floorf@x+2,floorf@u+2
  5134  0022EC  C028  F038         	movff	floorf@x+3,floorf@u+3
  5135  0022F0  0E81               	movlw	129
  5136  0022F2  6E29               	movwf	??_floorf^0,c
  5137  0022F4  0EFF               	movlw	255
  5138  0022F6  6E2A               	movwf	(??_floorf+1)^0,c
  5139  0022F8  C035  F02B         	movff	floorf@u,??_floorf+2
  5140  0022FC  C036  F02C         	movff	floorf@u+1,??_floorf+3
  5141  002300  C037  F02D         	movff	floorf@u+2,??_floorf+4
  5142  002304  C038  F02E         	movff	floorf@u+3,??_floorf+5
  5143  002308  0E18               	movlw	24
  5144  00230A  EF8C  F011         	goto	u6020
  5145  00230E                     u6025:
  5146  00230E  90D8               	bcf	status,0,c
  5147  002310  322E               	rrcf	(??_floorf+5)^0,f,c
  5148  002312  322D               	rrcf	(??_floorf+4)^0,f,c
  5149  002314  322C               	rrcf	(??_floorf+3)^0,f,c
  5150  002316  322B               	rrcf	(??_floorf+2)^0,f,c
  5151  002318                     u6020:
  5152  002318  2EE8               	decfsz	wreg,f,c
  5153  00231A  EF87  F011         	goto	u6025
  5154  00231E  502B               	movf	(??_floorf+2)^0,w,c
  5155  002320  2429               	addwf	??_floorf^0,w,c
  5156  002322  6E33               	movwf	floorf@e^0,c
  5157  002324  0E00               	movlw	0
  5158  002326  202A               	addwfc	(??_floorf+1)^0,w,c
  5159  002328  6E34               	movwf	(floorf@e+1)^0,c
  5160  00232A  BE34               	btfsc	(floorf@e+1)^0,7,c
  5161  00232C  EFA1  F011         	goto	u6031
  5162  002330  5034               	movf	(floorf@e+1)^0,w,c
  5163  002332  E109               	bnz	u6030
  5164  002334  0E17               	movlw	23
  5165  002336  5C33               	subwf	floorf@e^0,w,c
  5166  002338  A0D8               	btfss	status,0,c
  5167  00233A  EFA1  F011         	goto	u6031
  5168  00233E  EFA3  F011         	goto	u6030
  5169  002342                     u6031:
  5170  002342  EFAD  F011         	goto	l4642
  5171  002346                     u6030:
  5172  002346                     l4640:
  5173  002346  C025  F025         	movff	floorf@x,?_floorf
  5174  00234A  C026  F026         	movff	floorf@x+1,?_floorf+1
  5175  00234E  C027  F027         	movff	floorf@x+2,?_floorf+2
  5176  002352  C028  F028         	movff	floorf@x+3,?_floorf+3
  5177  002356  EF70  F012         	goto	l1067
  5178  00235A                     l4642:
  5179  00235A  BE34               	btfsc	(floorf@e+1)^0,7,c
  5180  00235C  EFB2  F011         	goto	u6041
  5181  002360  EFB4  F011         	goto	u6040
  5182  002364                     u6041:
  5183  002364  EF24  F012         	goto	l4652
  5184  002368                     u6040:
  5185  002368  C033  F029         	movff	floorf@e,??_floorf
  5186  00236C  0EFF               	movlw	255
  5187  00236E  6E2A               	movwf	(??_floorf+1)^0,c
  5188  002370  0EFF               	movlw	255
  5189  002372  6E2B               	movwf	(??_floorf+2)^0,c
  5190  002374  0E7F               	movlw	127
  5191  002376  6E2C               	movwf	(??_floorf+3)^0,c
  5192  002378  0E00               	movlw	0
  5193  00237A  6E2D               	movwf	(??_floorf+4)^0,c
  5194  00237C                     u6055:
  5195  00237C  6629               	tstfsz	??_floorf^0,c
  5196  00237E  EFC3  F011         	goto	u6056
  5197  002382  EFCB  F011         	goto	u6057
  5198  002386                     u6056:
  5199  002386  342D               	rlcf	(??_floorf+4)^0,w,c
  5200  002388  322D               	rrcf	(??_floorf+4)^0,f,c
  5201  00238A  322C               	rrcf	(??_floorf+3)^0,f,c
  5202  00238C  322B               	rrcf	(??_floorf+2)^0,f,c
  5203  00238E  322A               	rrcf	(??_floorf+1)^0,f,c
  5204  002390  2E29               	decfsz	??_floorf^0,f,c
  5205  002392  EFBE  F011         	goto	u6055
  5206  002396                     u6057:
  5207  002396  C02A  F02F         	movff	??_floorf+1,floorf@m
  5208  00239A  C02B  F030         	movff	??_floorf+2,floorf@m+1
  5209  00239E  C02C  F031         	movff	??_floorf+3,floorf@m+2
  5210  0023A2  C02D  F032         	movff	??_floorf+4,floorf@m+3
  5211  0023A6  502F               	movf	floorf@m^0,w,c
  5212  0023A8  1435               	andwf	floorf@u^0,w,c
  5213  0023AA  6E29               	movwf	??_floorf^0,c
  5214  0023AC  5030               	movf	(floorf@m+1)^0,w,c
  5215  0023AE  1436               	andwf	(floorf@u+1)^0,w,c
  5216  0023B0  6E2A               	movwf	(??_floorf+1)^0,c
  5217  0023B2  5031               	movf	(floorf@m+2)^0,w,c
  5218  0023B4  1437               	andwf	(floorf@u+2)^0,w,c
  5219  0023B6  6E2B               	movwf	(??_floorf+2)^0,c
  5220  0023B8  5032               	movf	(floorf@m+3)^0,w,c
  5221  0023BA  1438               	andwf	(floorf@u+3)^0,w,c
  5222  0023BC  6E2C               	movwf	(??_floorf+3)^0,c
  5223  0023BE  5029               	movf	??_floorf^0,w,c
  5224  0023C0  102A               	iorwf	(??_floorf+1)^0,w,c
  5225  0023C2  102B               	iorwf	(??_floorf+2)^0,w,c
  5226  0023C4  102C               	iorwf	(??_floorf+3)^0,w,c
  5227  0023C6  A4D8               	btfss	status,2,c
  5228  0023C8  EFE8  F011         	goto	u6061
  5229  0023CC  EFEA  F011         	goto	u6060
  5230  0023D0                     u6061:
  5231  0023D0  EFEC  F011         	goto	l4648
  5232  0023D4                     u6060:
  5233  0023D4  EFA3  F011         	goto	l4640
  5234  0023D8                     l4648:
  5235  0023D8  C035  F029         	movff	floorf@u,??_floorf
  5236  0023DC  C036  F02A         	movff	floorf@u+1,??_floorf+1
  5237  0023E0  C037  F02B         	movff	floorf@u+2,??_floorf+2
  5238  0023E4  C038  F02C         	movff	floorf@u+3,??_floorf+3
  5239  0023E8  0E20               	movlw	32
  5240  0023EA  EFFC  F011         	goto	u6070
  5241  0023EE                     u6075:
  5242  0023EE  90D8               	bcf	status,0,c
  5243  0023F0  322C               	rrcf	(??_floorf+3)^0,f,c
  5244  0023F2  322B               	rrcf	(??_floorf+2)^0,f,c
  5245  0023F4  322A               	rrcf	(??_floorf+1)^0,f,c
  5246  0023F6  3229               	rrcf	??_floorf^0,f,c
  5247  0023F8                     u6070:
  5248  0023F8  2EE8               	decfsz	wreg,f,c
  5249  0023FA  EFF7  F011         	goto	u6075
  5250  0023FE  5029               	movf	??_floorf^0,w,c
  5251  002400  102A               	iorwf	(??_floorf+1)^0,w,c
  5252  002402  102B               	iorwf	(??_floorf+2)^0,w,c
  5253  002404  102C               	iorwf	(??_floorf+3)^0,w,c
  5254  002406  B4D8               	btfsc	status,2,c
  5255  002408  EF08  F012         	goto	u6081
  5256  00240C  EF0A  F012         	goto	u6080
  5257  002410                     u6081:
  5258  002410  EF12  F012         	goto	l1070
  5259  002414                     u6080:
  5260  002414  502F               	movf	floorf@m^0,w,c
  5261  002416  2635               	addwf	floorf@u^0,f,c
  5262  002418  5030               	movf	(floorf@m+1)^0,w,c
  5263  00241A  2236               	addwfc	(floorf@u+1)^0,f,c
  5264  00241C  5031               	movf	(floorf@m+2)^0,w,c
  5265  00241E  2237               	addwfc	(floorf@u+2)^0,f,c
  5266  002420  5032               	movf	(floorf@m+3)^0,w,c
  5267  002422  2238               	addwfc	(floorf@u+3)^0,f,c
  5268  002424                     l1070:
  5269  002424  1C2F               	comf	floorf@m^0,w,c
  5270  002426  6E29               	movwf	??_floorf^0,c
  5271  002428  1C30               	comf	(floorf@m+1)^0,w,c
  5272  00242A  6E2A               	movwf	(??_floorf+1)^0,c
  5273  00242C  1C31               	comf	(floorf@m+2)^0,w,c
  5274  00242E  6E2B               	movwf	(??_floorf+2)^0,c
  5275  002430  1C32               	comf	(floorf@m+3)^0,w,c
  5276  002432  6E2C               	movwf	(??_floorf+3)^0,c
  5277  002434  5029               	movf	??_floorf^0,w,c
  5278  002436  1635               	andwf	floorf@u^0,f,c
  5279  002438  502A               	movf	(??_floorf+1)^0,w,c
  5280  00243A  1636               	andwf	(floorf@u+1)^0,f,c
  5281  00243C  502B               	movf	(??_floorf+2)^0,w,c
  5282  00243E  1637               	andwf	(floorf@u+2)^0,f,c
  5283  002440  502C               	movf	(??_floorf+3)^0,w,c
  5284  002442  1638               	andwf	(floorf@u+3)^0,f,c
  5285  002444  EF68  F012         	goto	l4660
  5286  002448                     l4652:
  5287  002448  C035  F029         	movff	floorf@u,??_floorf
  5288  00244C  C036  F02A         	movff	floorf@u+1,??_floorf+1
  5289  002450  C037  F02B         	movff	floorf@u+2,??_floorf+2
  5290  002454  C038  F02C         	movff	floorf@u+3,??_floorf+3
  5291  002458  0E20               	movlw	32
  5292  00245A  EF34  F012         	goto	u6090
  5293  00245E                     u6095:
  5294  00245E  90D8               	bcf	status,0,c
  5295  002460  322C               	rrcf	(??_floorf+3)^0,f,c
  5296  002462  322B               	rrcf	(??_floorf+2)^0,f,c
  5297  002464  322A               	rrcf	(??_floorf+1)^0,f,c
  5298  002466  3229               	rrcf	??_floorf^0,f,c
  5299  002468                     u6090:
  5300  002468  2EE8               	decfsz	wreg,f,c
  5301  00246A  EF2F  F012         	goto	u6095
  5302  00246E  5029               	movf	??_floorf^0,w,c
  5303  002470  102A               	iorwf	(??_floorf+1)^0,w,c
  5304  002472  102B               	iorwf	(??_floorf+2)^0,w,c
  5305  002474  102C               	iorwf	(??_floorf+3)^0,w,c
  5306  002476  A4D8               	btfss	status,2,c
  5307  002478  EF40  F012         	goto	u6101
  5308  00247C  EF42  F012         	goto	u6100
  5309  002480                     u6101:
  5310  002480  EF4C  F012         	goto	l4656
  5311  002484                     u6100:
  5312  002484  0E00               	movlw	0
  5313  002486  6E35               	movwf	floorf@u^0,c
  5314  002488  0E00               	movlw	0
  5315  00248A  6E36               	movwf	(floorf@u+1)^0,c
  5316  00248C  0E00               	movlw	0
  5317  00248E  6E37               	movwf	(floorf@u+2)^0,c
  5318  002490  0E00               	movlw	0
  5319  002492  6E38               	movwf	(floorf@u+3)^0,c
  5320  002494  EF68  F012         	goto	l4660
  5321  002498                     l4656:
  5322  002498  90D8               	bcf	status,0,c
  5323  00249A  3435               	rlcf	floorf@u^0,w,c
  5324  00249C  6E29               	movwf	??_floorf^0,c
  5325  00249E  3436               	rlcf	(floorf@u+1)^0,w,c
  5326  0024A0  6E2A               	movwf	(??_floorf+1)^0,c
  5327  0024A2  3437               	rlcf	(floorf@u+2)^0,w,c
  5328  0024A4  6E2B               	movwf	(??_floorf+2)^0,c
  5329  0024A6  3438               	rlcf	(floorf@u+3)^0,w,c
  5330  0024A8  6E2C               	movwf	(??_floorf+3)^0,c
  5331  0024AA  5029               	movf	??_floorf^0,w,c
  5332  0024AC  102A               	iorwf	(??_floorf+1)^0,w,c
  5333  0024AE  102B               	iorwf	(??_floorf+2)^0,w,c
  5334  0024B0  102C               	iorwf	(??_floorf+3)^0,w,c
  5335  0024B2  B4D8               	btfsc	status,2,c
  5336  0024B4  EF5E  F012         	goto	u6111
  5337  0024B8  EF60  F012         	goto	u6110
  5338  0024BC                     u6111:
  5339  0024BC  EF68  F012         	goto	l4660
  5340  0024C0                     u6110:
  5341  0024C0  0E00               	movlw	0
  5342  0024C2  6E35               	movwf	floorf@u^0,c
  5343  0024C4  0E00               	movlw	0
  5344  0024C6  6E36               	movwf	(floorf@u+1)^0,c
  5345  0024C8  0E80               	movlw	128
  5346  0024CA  6E37               	movwf	(floorf@u+2)^0,c
  5347  0024CC  0EBF               	movlw	191
  5348  0024CE  6E38               	movwf	(floorf@u+3)^0,c
  5349  0024D0                     l4660:
  5350  0024D0  C035  F025         	movff	floorf@u,?_floorf
  5351  0024D4  C036  F026         	movff	floorf@u+1,?_floorf+1
  5352  0024D8  C037  F027         	movff	floorf@u+2,?_floorf+2
  5353  0024DC  C038  F028         	movff	floorf@u+3,?_floorf+3
  5354  0024E0                     l1067:
  5355  0024E0  0012               	return		;funcret
  5356  0024E2                     __end_of_floorf:
  5357                           	opt callstack 0
  5358                           
  5359 ;; *************** function ___fpclassifyf *****************
  5360 ;; Defined at:
  5361 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;  x               4   11[COMRAM] float 
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  u               4   21[COMRAM] struct .
  5366 ;;  e               2   19[COMRAM] int 
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  2   11[COMRAM] int 
  5369 ;; Registers used:
  5370 ;;		wreg, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5376 ;;      Params:         4       0       0       0       0       0       0
  5377 ;;      Locals:         6       0       0       0       0       0       0
  5378 ;;      Temps:          4       0       0       0       0       0       0
  5379 ;;      Totals:        14       0       0       0       0       0       0
  5380 ;;Total ram usage:       14 bytes
  5381 ;; Hardware stack levels used:    1
  5382 ;; Hardware stack levels required when called:    4
  5383 ;; This function calls:
  5384 ;;		Nothing
  5385 ;; This function is called by:
  5386 ;;		_efgtoa
  5387 ;; This function uses a non-reentrant model
  5388 ;;
  5389                           
  5390                           	psect	text24
  5391  002CC6                     __ptext24:
  5392                           	opt callstack 0
  5393  002CC6                     ___fpclassifyf:
  5394                           	opt callstack 21
  5395  002CC6  C0D6  F016         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5396  002CCA  C0D7  F017         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5397  002CCE  C0D8  F018         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5398  002CD2  C0D9  F019         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5399  002CD6  C00C  F016         	movff	___fpclassifyf@x,___fpclassifyf@u
  5400  002CDA  C00D  F017         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5401  002CDE  C00E  F018         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5402  002CE2  C00F  F019         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5403  002CE6  C016  F010         	movff	___fpclassifyf@u,??___fpclassifyf
  5404  002CEA  C017  F011         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5405  002CEE  C018  F012         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5406  002CF2  C019  F013         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5407  002CF6  0E18               	movlw	24
  5408  002CF8  EF83  F016         	goto	u5900
  5409  002CFC                     u5905:
  5410  002CFC  90D8               	bcf	status,0,c
  5411  002CFE  3213               	rrcf	(??___fpclassifyf+3)^0,f,c
  5412  002D00  3212               	rrcf	(??___fpclassifyf+2)^0,f,c
  5413  002D02  3211               	rrcf	(??___fpclassifyf+1)^0,f,c
  5414  002D04  3210               	rrcf	??___fpclassifyf^0,f,c
  5415  002D06                     u5900:
  5416  002D06  2EE8               	decfsz	wreg,f,c
  5417  002D08  EF7E  F016         	goto	u5905
  5418  002D0C  5010               	movf	??___fpclassifyf^0,w,c
  5419  002D0E  6E14               	movwf	___fpclassifyf@e^0,c
  5420  002D10  6A15               	clrf	(___fpclassifyf@e+1)^0,c
  5421  002D12  5014               	movf	___fpclassifyf@e^0,w,c
  5422  002D14  1015               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5423  002D16  A4D8               	btfss	status,2,c
  5424  002D18  EF90  F016         	goto	u5911
  5425  002D1C  EF92  F016         	goto	u5910
  5426  002D20                     u5911:
  5427  002D20  EFB2  F016         	goto	l4612
  5428  002D24                     u5910:
  5429  002D24  90D8               	bcf	status,0,c
  5430  002D26  3416               	rlcf	___fpclassifyf@u^0,w,c
  5431  002D28  6E10               	movwf	??___fpclassifyf^0,c
  5432  002D2A  3417               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5433  002D2C  6E11               	movwf	(??___fpclassifyf+1)^0,c
  5434  002D2E  3418               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5435  002D30  6E12               	movwf	(??___fpclassifyf+2)^0,c
  5436  002D32  3419               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5437  002D34  6E13               	movwf	(??___fpclassifyf+3)^0,c
  5438  002D36  5010               	movf	??___fpclassifyf^0,w,c
  5439  002D38  1011               	iorwf	(??___fpclassifyf+1)^0,w,c
  5440  002D3A  1012               	iorwf	(??___fpclassifyf+2)^0,w,c
  5441  002D3C  1013               	iorwf	(??___fpclassifyf+3)^0,w,c
  5442  002D3E  A4D8               	btfss	status,2,c
  5443  002D40  EFA4  F016         	goto	u5921
  5444  002D44  EFA6  F016         	goto	u5920
  5445  002D48                     u5921:
  5446  002D48  EFAC  F016         	goto	l4608
  5447  002D4C                     u5920:
  5448  002D4C  0E00               	movlw	0
  5449  002D4E  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  5450  002D50  0E02               	movlw	2
  5451  002D52  6E0C               	movwf	?___fpclassifyf^0,c
  5452  002D54  EFE1  F016         	goto	l1029
  5453  002D58                     l4608:
  5454  002D58  0E00               	movlw	0
  5455  002D5A  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  5456  002D5C  0E03               	movlw	3
  5457  002D5E  6E0C               	movwf	?___fpclassifyf^0,c
  5458  002D60  EFE1  F016         	goto	l1029
  5459  002D64                     l4612:
  5460  002D64  2814               	incf	___fpclassifyf@e^0,w,c
  5461  002D66  1015               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5462  002D68  A4D8               	btfss	status,2,c
  5463  002D6A  EFB9  F016         	goto	u5931
  5464  002D6E  EFBB  F016         	goto	u5930
  5465  002D72                     u5931:
  5466  002D72  EFDD  F016         	goto	l4618
  5467  002D76                     u5930:
  5468  002D76  C016  F010         	movff	___fpclassifyf@u,??___fpclassifyf
  5469  002D7A  C017  F011         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5470  002D7E  C018  F012         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5471  002D82  C019  F013         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5472  002D86  0E09               	movlw	9
  5473  002D88                     u5945:
  5474  002D88  90D8               	bcf	status,0,c
  5475  002D8A  3610               	rlcf	??___fpclassifyf^0,f,c
  5476  002D8C  3611               	rlcf	(??___fpclassifyf+1)^0,f,c
  5477  002D8E  3612               	rlcf	(??___fpclassifyf+2)^0,f,c
  5478  002D90  3613               	rlcf	(??___fpclassifyf+3)^0,f,c
  5479  002D92  2EE8               	decfsz	wreg,f,c
  5480  002D94  EFC4  F016         	goto	u5945
  5481  002D98  5010               	movf	??___fpclassifyf^0,w,c
  5482  002D9A  1011               	iorwf	(??___fpclassifyf+1)^0,w,c
  5483  002D9C  1012               	iorwf	(??___fpclassifyf+2)^0,w,c
  5484  002D9E  1013               	iorwf	(??___fpclassifyf+3)^0,w,c
  5485  002DA0  B4D8               	btfsc	status,2,c
  5486  002DA2  EFD5  F016         	goto	u5951
  5487  002DA6  EFD8  F016         	goto	u5950
  5488  002DAA                     u5951:
  5489  002DAA  0E01               	movlw	1
  5490  002DAC  EFD9  F016         	goto	u5960
  5491  002DB0                     u5950:
  5492  002DB0  0E00               	movlw	0
  5493  002DB2                     u5960:
  5494  002DB2  6E0C               	movwf	?___fpclassifyf^0,c
  5495  002DB4  6A0D               	clrf	(?___fpclassifyf+1)^0,c
  5496  002DB6  EFE1  F016         	goto	l1029
  5497  002DBA                     l4618:
  5498  002DBA  0E00               	movlw	0
  5499  002DBC  6E0D               	movwf	(?___fpclassifyf+1)^0,c
  5500  002DBE  0E04               	movlw	4
  5501  002DC0  6E0C               	movwf	?___fpclassifyf^0,c
  5502  002DC2                     l1029:
  5503  002DC2  0012               	return		;funcret
  5504  002DC4                     __end_of___fpclassifyf:
  5505                           	opt callstack 0
  5506                           
  5507 ;; *************** function ___fltol *****************
  5508 ;; Defined at:
  5509 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  f1              4   11[COMRAM] int 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  exp1            1   20[COMRAM] unsigned char 
  5514 ;;  sign1           1   19[COMRAM] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;                  4   11[COMRAM] long 
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5524 ;;      Params:         4       0       0       0       0       0       0
  5525 ;;      Locals:         2       0       0       0       0       0       0
  5526 ;;      Temps:          4       0       0       0       0       0       0
  5527 ;;      Totals:        10       0       0       0       0       0       0
  5528 ;;Total ram usage:       10 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    4
  5531 ;; This function calls:
  5532 ;;		Nothing
  5533 ;; This function is called by:
  5534 ;;		_efgtoa
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           	psect	text25
  5539  002ABC                     __ptext25:
  5540                           	opt callstack 0
  5541  002ABC                     ___fltol:
  5542                           	opt callstack 21
  5543  002ABC  340E               	rlcf	(___fltol@f1+2)^0,w,c
  5544  002ABE  340F               	rlcf	(___fltol@f1+3)^0,w,c
  5545  002AC0  6E15               	movwf	___fltol@exp1^0,c
  5546  002AC2  5015               	movf	___fltol@exp1^0,w,c
  5547  002AC4  A4D8               	btfss	status,2,c
  5548  002AC6  EF67  F015         	goto	u6771
  5549  002ACA  EF69  F015         	goto	u6770
  5550  002ACE                     u6771:
  5551  002ACE  EF73  F015         	goto	l5080
  5552  002AD2                     u6770:
  5553  002AD2                     l5076:
  5554  002AD2  0E00               	movlw	0
  5555  002AD4  6E0C               	movwf	?___fltol^0,c
  5556  002AD6  0E00               	movlw	0
  5557  002AD8  6E0D               	movwf	(?___fltol+1)^0,c
  5558  002ADA  0E00               	movlw	0
  5559  002ADC  6E0E               	movwf	(?___fltol+2)^0,c
  5560  002ADE  0E00               	movlw	0
  5561  002AE0  6E0F               	movwf	(?___fltol+3)^0,c
  5562  002AE2  EFE0  F015         	goto	l645
  5563  002AE6                     l5080:
  5564  002AE6  C00C  F010         	movff	___fltol@f1,??___fltol
  5565  002AEA  C00D  F011         	movff	___fltol@f1+1,??___fltol+1
  5566  002AEE  C00E  F012         	movff	___fltol@f1+2,??___fltol+2
  5567  002AF2  C00F  F013         	movff	___fltol@f1+3,??___fltol+3
  5568  002AF6  0E20               	movlw	32
  5569  002AF8  EF83  F015         	goto	u6780
  5570  002AFC                     u6785:
  5571  002AFC  90D8               	bcf	status,0,c
  5572  002AFE  3213               	rrcf	(??___fltol+3)^0,f,c
  5573  002B00  3212               	rrcf	(??___fltol+2)^0,f,c
  5574  002B02  3211               	rrcf	(??___fltol+1)^0,f,c
  5575  002B04  3210               	rrcf	??___fltol^0,f,c
  5576  002B06                     u6780:
  5577  002B06  2EE8               	decfsz	wreg,f,c
  5578  002B08  EF7E  F015         	goto	u6785
  5579  002B0C  5010               	movf	??___fltol^0,w,c
  5580  002B0E  6E14               	movwf	___fltol@sign1^0,c
  5581  002B10  8E0E               	bsf	(___fltol@f1+2)^0,7,c
  5582  002B12  0EFF               	movlw	255
  5583  002B14  160C               	andwf	___fltol@f1^0,f,c
  5584  002B16  0EFF               	movlw	255
  5585  002B18  160D               	andwf	(___fltol@f1+1)^0,f,c
  5586  002B1A  0EFF               	movlw	255
  5587  002B1C  160E               	andwf	(___fltol@f1+2)^0,f,c
  5588  002B1E  0E00               	movlw	0
  5589  002B20  160F               	andwf	(___fltol@f1+3)^0,f,c
  5590  002B22  0E96               	movlw	150
  5591  002B24  5E15               	subwf	___fltol@exp1^0,f,c
  5592  002B26  BE15               	btfsc	___fltol@exp1^0,7,c
  5593  002B28  EF9A  F015         	goto	u6790
  5594  002B2C  EF98  F015         	goto	u6791
  5595  002B30                     u6791:
  5596  002B30  EFB0  F015         	goto	l5100
  5597  002B34                     u6790:
  5598  002B34  5015               	movf	___fltol@exp1^0,w,c
  5599  002B36  0A80               	xorlw	128
  5600  002B38  0F97               	addlw	151
  5601  002B3A  B0D8               	btfsc	status,0,c
  5602  002B3C  EFA2  F015         	goto	u6801
  5603  002B40  EFA4  F015         	goto	u6800
  5604  002B44                     u6801:
  5605  002B44  EFA6  F015         	goto	l5096
  5606  002B48                     u6800:
  5607  002B48  EF69  F015         	goto	l5076
  5608  002B4C                     l5096:
  5609  002B4C  90D8               	bcf	status,0,c
  5610  002B4E  320F               	rrcf	(___fltol@f1+3)^0,f,c
  5611  002B50  320E               	rrcf	(___fltol@f1+2)^0,f,c
  5612  002B52  320D               	rrcf	(___fltol@f1+1)^0,f,c
  5613  002B54  320C               	rrcf	___fltol@f1^0,f,c
  5614  002B56  3E15               	incfsz	___fltol@exp1^0,f,c
  5615  002B58  EFA6  F015         	goto	l5096
  5616  002B5C  EFC8  F015         	goto	l5110
  5617  002B60                     l5100:
  5618  002B60  0E1F               	movlw	31
  5619  002B62  6415               	cpfsgt	___fltol@exp1^0,c
  5620  002B64  EFB6  F015         	goto	u6811
  5621  002B68  EFB8  F015         	goto	u6810
  5622  002B6C                     u6811:
  5623  002B6C  EFC0  F015         	goto	l5108
  5624  002B70                     u6810:
  5625  002B70  EF69  F015         	goto	l5076
  5626  002B74                     l5106:
  5627  002B74  90D8               	bcf	status,0,c
  5628  002B76  360C               	rlcf	___fltol@f1^0,f,c
  5629  002B78  360D               	rlcf	(___fltol@f1+1)^0,f,c
  5630  002B7A  360E               	rlcf	(___fltol@f1+2)^0,f,c
  5631  002B7C  360F               	rlcf	(___fltol@f1+3)^0,f,c
  5632  002B7E  0615               	decf	___fltol@exp1^0,f,c
  5633  002B80                     l5108:
  5634  002B80  5015               	movf	___fltol@exp1^0,w,c
  5635  002B82  A4D8               	btfss	status,2,c
  5636  002B84  EFC6  F015         	goto	u6821
  5637  002B88  EFC8  F015         	goto	u6820
  5638  002B8C                     u6821:
  5639  002B8C  EFBA  F015         	goto	l5106
  5640  002B90                     u6820:
  5641  002B90                     l5110:
  5642  002B90  5014               	movf	___fltol@sign1^0,w,c
  5643  002B92  B4D8               	btfsc	status,2,c
  5644  002B94  EFCE  F015         	goto	u6831
  5645  002B98  EFD0  F015         	goto	u6830
  5646  002B9C                     u6831:
  5647  002B9C  EFD8  F015         	goto	l5114
  5648  002BA0                     u6830:
  5649  002BA0  1E0F               	comf	(___fltol@f1+3)^0,f,c
  5650  002BA2  1E0E               	comf	(___fltol@f1+2)^0,f,c
  5651  002BA4  1E0D               	comf	(___fltol@f1+1)^0,f,c
  5652  002BA6  6C0C               	negf	___fltol@f1^0,c
  5653  002BA8  0E00               	movlw	0
  5654  002BAA  220D               	addwfc	(___fltol@f1+1)^0,f,c
  5655  002BAC  220E               	addwfc	(___fltol@f1+2)^0,f,c
  5656  002BAE  220F               	addwfc	(___fltol@f1+3)^0,f,c
  5657  002BB0                     l5114:
  5658  002BB0  C00C  F00C         	movff	___fltol@f1,?___fltol
  5659  002BB4  C00D  F00D         	movff	___fltol@f1+1,?___fltol+1
  5660  002BB8  C00E  F00E         	movff	___fltol@f1+2,?___fltol+2
  5661  002BBC  C00F  F00F         	movff	___fltol@f1+3,?___fltol+3
  5662  002BC0                     l645:
  5663  002BC0  0012               	return		;funcret
  5664  002BC2                     __end_of___fltol:
  5665                           	opt callstack 0
  5666                           
  5667 ;; *************** function ___flsub *****************
  5668 ;; Defined at:
  5669 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  5670 ;; Parameters:    Size  Location     Type
  5671 ;;  b               4   50[COMRAM] long 
  5672 ;;  a               4   54[COMRAM] long 
  5673 ;; Auto vars:     Size  Location     Type
  5674 ;;		None
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  4   50[COMRAM] long 
  5677 ;; Registers used:
  5678 ;;		wreg, status,2, status,0, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5684 ;;      Params:         8       0       0       0       0       0       0
  5685 ;;      Locals:         0       0       0       0       0       0       0
  5686 ;;      Temps:          0       0       0       0       0       0       0
  5687 ;;      Totals:         8       0       0       0       0       0       0
  5688 ;;Total ram usage:        8 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    5
  5691 ;; This function calls:
  5692 ;;		___fladd
  5693 ;; This function is called by:
  5694 ;;		_efgtoa
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           
  5698                           	psect	text26
  5699  00372C                     __ptext26:
  5700                           	opt callstack 0
  5701  00372C                     ___flsub:
  5702                           	opt callstack 20
  5703  00372C  0E00               	movlw	0
  5704  00372E  1A37               	xorwf	___flsub@a^0,f,c
  5705  003730  0E00               	movlw	0
  5706  003732  1A38               	xorwf	(___flsub@a+1)^0,f,c
  5707  003734  0E00               	movlw	0
  5708  003736  1A39               	xorwf	(___flsub@a+2)^0,f,c
  5709  003738  0E80               	movlw	128
  5710  00373A  1A3A               	xorwf	(___flsub@a+3)^0,f,c
  5711  00373C  C033  F00C         	movff	___flsub@b,___fladd@b
  5712  003740  C034  F00D         	movff	___flsub@b+1,___fladd@b+1
  5713  003744  C035  F00E         	movff	___flsub@b+2,___fladd@b+2
  5714  003748  C036  F00F         	movff	___flsub@b+3,___fladd@b+3
  5715  00374C  C037  F010         	movff	___flsub@a,___fladd@a
  5716  003750  C038  F011         	movff	___flsub@a+1,___fladd@a+1
  5717  003754  C039  F012         	movff	___flsub@a+2,___fladd@a+2
  5718  003758  C03A  F013         	movff	___flsub@a+3,___fladd@a+3
  5719  00375C  ECF7  F008         	call	___fladd	;wreg free
  5720  003760  C00C  F033         	movff	?___fladd,?___flsub
  5721  003764  C00D  F034         	movff	?___fladd+1,?___flsub+1
  5722  003768  C00E  F035         	movff	?___fladd+2,?___flsub+2
  5723  00376C  C00F  F036         	movff	?___fladd+3,?___flsub+3
  5724  003770  0012               	return		;funcret
  5725  003772                     __end_of___flsub:
  5726                           	opt callstack 0
  5727                           
  5728 ;; *************** function ___fladd *****************
  5729 ;; Defined at:
  5730 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
  5731 ;; Parameters:    Size  Location     Type
  5732 ;;  b               4   11[COMRAM] long 
  5733 ;;  a               4   15[COMRAM] long 
  5734 ;; Auto vars:     Size  Location     Type
  5735 ;;  grs             1   26[COMRAM] unsigned char 
  5736 ;;  bexp            1   25[COMRAM] unsigned char 
  5737 ;;  aexp            1   24[COMRAM] unsigned char 
  5738 ;;  signs           1   23[COMRAM] unsigned char 
  5739 ;; Return value:  Size  Location     Type
  5740 ;;                  4   11[COMRAM] unsigned char 
  5741 ;; Registers used:
  5742 ;;		wreg, status,2, status,0
  5743 ;; Tracked objects:
  5744 ;;		On entry : 0/0
  5745 ;;		On exit  : 0/0
  5746 ;;		Unchanged: 0/0
  5747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5748 ;;      Params:         8       0       0       0       0       0       0
  5749 ;;      Locals:         4       0       0       0       0       0       0
  5750 ;;      Temps:          4       0       0       0       0       0       0
  5751 ;;      Totals:        16       0       0       0       0       0       0
  5752 ;;Total ram usage:       16 bytes
  5753 ;; Hardware stack levels used:    1
  5754 ;; Hardware stack levels required when called:    4
  5755 ;; This function calls:
  5756 ;;		Nothing
  5757 ;; This function is called by:
  5758 ;;		_efgtoa
  5759 ;;		___flsub
  5760 ;; This function uses a non-reentrant model
  5761 ;;
  5762                           
  5763                           	psect	text27
  5764  0011EE                     __ptext27:
  5765                           	opt callstack 0
  5766  0011EE                     ___fladd:
  5767                           	opt callstack 20
  5768  0011EE  500F               	movf	(___fladd@b+3)^0,w,c
  5769  0011F0  0B80               	andlw	128
  5770  0011F2  6E18               	movwf	___fladd@signs^0,c
  5771  0011F4  500F               	movf	(___fladd@b+3)^0,w,c
  5772  0011F6  240F               	addwf	(___fladd@b+3)^0,w,c
  5773  0011F8  6E1A               	movwf	___fladd@bexp^0,c
  5774  0011FA  AE0E               	btfss	(___fladd@b+2)^0,7,c
  5775  0011FC  EF02  F009         	goto	u5471
  5776  001200  EF04  F009         	goto	u5470
  5777  001204                     u5471:
  5778  001204  EF05  F009         	goto	l4382
  5779  001208                     u5470:
  5780  001208  801A               	bsf	___fladd@bexp^0,0,c
  5781  00120A                     l4382:
  5782  00120A  501A               	movf	___fladd@bexp^0,w,c
  5783  00120C  B4D8               	btfsc	status,2,c
  5784  00120E  EF0B  F009         	goto	u5481
  5785  001212  EF0D  F009         	goto	u5480
  5786  001216                     u5481:
  5787  001216  EF22  F009         	goto	l4392
  5788  00121A                     u5480:
  5789  00121A  281A               	incf	___fladd@bexp^0,w,c
  5790  00121C  A4D8               	btfss	status,2,c
  5791  00121E  EF13  F009         	goto	u5491
  5792  001222  EF15  F009         	goto	u5490
  5793  001226                     u5491:
  5794  001226  EF1D  F009         	goto	l4388
  5795  00122A                     u5490:
  5796  00122A  0E00               	movlw	0
  5797  00122C  6E0C               	movwf	___fladd@b^0,c
  5798  00122E  0E00               	movlw	0
  5799  001230  6E0D               	movwf	(___fladd@b+1)^0,c
  5800  001232  0E00               	movlw	0
  5801  001234  6E0E               	movwf	(___fladd@b+2)^0,c
  5802  001236  0E00               	movlw	0
  5803  001238  6E0F               	movwf	(___fladd@b+3)^0,c
  5804  00123A                     l4388:
  5805  00123A  8E0E               	bsf	(___fladd@b+2)^0,7,c
  5806  00123C  0E00               	movlw	0
  5807  00123E  6E0F               	movwf	(___fladd@b+3)^0,c
  5808  001240  EF2A  F009         	goto	l4394
  5809  001244                     l4392:
  5810  001244  0E00               	movlw	0
  5811  001246  6E0C               	movwf	___fladd@b^0,c
  5812  001248  0E00               	movlw	0
  5813  00124A  6E0D               	movwf	(___fladd@b+1)^0,c
  5814  00124C  0E00               	movlw	0
  5815  00124E  6E0E               	movwf	(___fladd@b+2)^0,c
  5816  001250  0E00               	movlw	0
  5817  001252  6E0F               	movwf	(___fladd@b+3)^0,c
  5818  001254                     l4394:
  5819  001254  5013               	movf	(___fladd@a+3)^0,w,c
  5820  001256  0B80               	andlw	128
  5821  001258  6E19               	movwf	___fladd@aexp^0,c
  5822  00125A  5018               	movf	___fladd@signs^0,w,c
  5823  00125C  1819               	xorwf	___fladd@aexp^0,w,c
  5824  00125E  B4D8               	btfsc	status,2,c
  5825  001260  EF34  F009         	goto	u5501
  5826  001264  EF36  F009         	goto	u5500
  5827  001268                     u5501:
  5828  001268  EF37  F009         	goto	l4400
  5829  00126C                     u5500:
  5830  00126C  8C18               	bsf	___fladd@signs^0,6,c
  5831  00126E                     l4400:
  5832  00126E  5013               	movf	(___fladd@a+3)^0,w,c
  5833  001270  2413               	addwf	(___fladd@a+3)^0,w,c
  5834  001272  6E19               	movwf	___fladd@aexp^0,c
  5835  001274  AE12               	btfss	(___fladd@a+2)^0,7,c
  5836  001276  EF3F  F009         	goto	u5511
  5837  00127A  EF41  F009         	goto	u5510
  5838  00127E                     u5511:
  5839  00127E  EF42  F009         	goto	l4406
  5840  001282                     u5510:
  5841  001282  8019               	bsf	___fladd@aexp^0,0,c
  5842  001284                     l4406:
  5843  001284  5019               	movf	___fladd@aexp^0,w,c
  5844  001286  B4D8               	btfsc	status,2,c
  5845  001288  EF48  F009         	goto	u5521
  5846  00128C  EF4A  F009         	goto	u5520
  5847  001290                     u5521:
  5848  001290  EF5F  F009         	goto	l4416
  5849  001294                     u5520:
  5850  001294  2819               	incf	___fladd@aexp^0,w,c
  5851  001296  A4D8               	btfss	status,2,c
  5852  001298  EF50  F009         	goto	u5531
  5853  00129C  EF52  F009         	goto	u5530
  5854  0012A0                     u5531:
  5855  0012A0  EF5A  F009         	goto	l4412
  5856  0012A4                     u5530:
  5857  0012A4  0E00               	movlw	0
  5858  0012A6  6E10               	movwf	___fladd@a^0,c
  5859  0012A8  0E00               	movlw	0
  5860  0012AA  6E11               	movwf	(___fladd@a+1)^0,c
  5861  0012AC  0E00               	movlw	0
  5862  0012AE  6E12               	movwf	(___fladd@a+2)^0,c
  5863  0012B0  0E00               	movlw	0
  5864  0012B2  6E13               	movwf	(___fladd@a+3)^0,c
  5865  0012B4                     l4412:
  5866  0012B4  8E12               	bsf	(___fladd@a+2)^0,7,c
  5867  0012B6  0E00               	movlw	0
  5868  0012B8  6E13               	movwf	(___fladd@a+3)^0,c
  5869  0012BA  EF67  F009         	goto	l4418
  5870  0012BE                     l4416:
  5871  0012BE  0E00               	movlw	0
  5872  0012C0  6E10               	movwf	___fladd@a^0,c
  5873  0012C2  0E00               	movlw	0
  5874  0012C4  6E11               	movwf	(___fladd@a+1)^0,c
  5875  0012C6  0E00               	movlw	0
  5876  0012C8  6E12               	movwf	(___fladd@a+2)^0,c
  5877  0012CA  0E00               	movlw	0
  5878  0012CC  6E13               	movwf	(___fladd@a+3)^0,c
  5879  0012CE                     l4418:
  5880  0012CE  501A               	movf	___fladd@bexp^0,w,c
  5881  0012D0  5C19               	subwf	___fladd@aexp^0,w,c
  5882  0012D2  B0D8               	btfsc	status,0,c
  5883  0012D4  EF6E  F009         	goto	u5541
  5884  0012D8  EF70  F009         	goto	u5540
  5885  0012DC                     u5541:
  5886  0012DC  EF97  F009         	goto	l4454
  5887  0012E0                     u5540:
  5888  0012E0  AC18               	btfss	___fladd@signs^0,6,c
  5889  0012E2  EF75  F009         	goto	u5551
  5890  0012E6  EF77  F009         	goto	u5550
  5891  0012EA                     u5551:
  5892  0012EA  EF79  F009         	goto	l4424
  5893  0012EE                     u5550:
  5894  0012EE  0E80               	movlw	128
  5895  0012F0  1A18               	xorwf	___fladd@signs^0,f,c
  5896  0012F2                     l4424:
  5897  0012F2  C01A  F01B         	movff	___fladd@bexp,___fladd@grs
  5898  0012F6  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
  5899  0012FA  C01B  F019         	movff	___fladd@grs,___fladd@aexp
  5900  0012FE  C00C  F01B         	movff	___fladd@b,___fladd@grs
  5901  001302  C010  F00C         	movff	___fladd@a,___fladd@b
  5902  001306  C01B  F010         	movff	___fladd@grs,___fladd@a
  5903  00130A  C00D  F01B         	movff	___fladd@b+1,___fladd@grs
  5904  00130E  C011  F00D         	movff	___fladd@a+1,___fladd@b+1
  5905  001312  C01B  F011         	movff	___fladd@grs,___fladd@a+1
  5906  001316  C00E  F01B         	movff	___fladd@b+2,___fladd@grs
  5907  00131A  C012  F00E         	movff	___fladd@a+2,___fladd@b+2
  5908  00131E  C01B  F012         	movff	___fladd@grs,___fladd@a+2
  5909  001322  C00F  F01B         	movff	___fladd@b+3,___fladd@grs
  5910  001326  C013  F00F         	movff	___fladd@a+3,___fladd@b+3
  5911  00132A  C01B  F013         	movff	___fladd@grs,___fladd@a+3
  5912  00132E                     l4454:
  5913  00132E  0E00               	movlw	0
  5914  001330  6E1B               	movwf	___fladd@grs^0,c
  5915  001332  501A               	movf	___fladd@bexp^0,w,c
  5916  001334  C019  F014         	movff	___fladd@aexp,??___fladd
  5917  001338  6A15               	clrf	(??___fladd+1)^0,c
  5918  00133A  5E14               	subwf	??___fladd^0,f,c
  5919  00133C  0E00               	movlw	0
  5920  00133E  5A15               	subwfb	(??___fladd+1)^0,f,c
  5921  001340  BE15               	btfsc	(??___fladd+1)^0,7,c
  5922  001342  EFAC  F009         	goto	u5561
  5923  001346  5015               	movf	(??___fladd+1)^0,w,c
  5924  001348  E109               	bnz	u5560
  5925  00134A  0E1A               	movlw	26
  5926  00134C  5C14               	subwf	??___fladd^0,w,c
  5927  00134E  A0D8               	btfss	status,0,c
  5928  001350  EFAC  F009         	goto	u5561
  5929  001354  EFAE  F009         	goto	u5560
  5930  001358                     u5561:
  5931  001358  EFE5  F009         	goto	l877
  5932  00135C                     u5560:
  5933  00135C  500C               	movf	___fladd@b^0,w,c
  5934  00135E  100D               	iorwf	(___fladd@b+1)^0,w,c
  5935  001360  100E               	iorwf	(___fladd@b+2)^0,w,c
  5936  001362  100F               	iorwf	(___fladd@b+3)^0,w,c
  5937  001364  A4D8               	btfss	status,2,c
  5938  001366  EFB7  F009         	goto	u5571
  5939  00136A  EFBA  F009         	goto	u5570
  5940  00136E                     u5571:
  5941  00136E  0E01               	movlw	1
  5942  001370  EFBB  F009         	goto	u5580
  5943  001374                     u5570:
  5944  001374  0E00               	movlw	0
  5945  001376                     u5580:
  5946  001376  6E1B               	movwf	___fladd@grs^0,c
  5947  001378  0E00               	movlw	0
  5948  00137A  6E0C               	movwf	___fladd@b^0,c
  5949  00137C  0E00               	movlw	0
  5950  00137E  6E0D               	movwf	(___fladd@b+1)^0,c
  5951  001380  0E00               	movlw	0
  5952  001382  6E0E               	movwf	(___fladd@b+2)^0,c
  5953  001384  0E00               	movlw	0
  5954  001386  6E0F               	movwf	(___fladd@b+3)^0,c
  5955  001388  C019  F01A         	movff	___fladd@aexp,___fladd@bexp
  5956  00138C  EFEE  F009         	goto	l876
  5957  001390                     l878:
  5958  001390  A01B               	btfss	___fladd@grs^0,0,c
  5959  001392  EFCD  F009         	goto	u5591
  5960  001396  EFCF  F009         	goto	u5590
  5961  00139A                     u5591:
  5962  00139A  EFD5  F009         	goto	l4466
  5963  00139E                     u5590:
  5964  00139E  90D8               	bcf	status,0,c
  5965  0013A0  301B               	rrcf	___fladd@grs^0,w,c
  5966  0013A2  0901               	iorlw	1
  5967  0013A4  6E1B               	movwf	___fladd@grs^0,c
  5968  0013A6  EFD7  F009         	goto	l4468
  5969  0013AA                     l4466:
  5970  0013AA  90D8               	bcf	status,0,c
  5971  0013AC  321B               	rrcf	___fladd@grs^0,f,c
  5972  0013AE                     l4468:
  5973  0013AE  A00C               	btfss	___fladd@b^0,0,c
  5974  0013B0  EFDC  F009         	goto	u5601
  5975  0013B4  EFDE  F009         	goto	u5600
  5976  0013B8                     u5601:
  5977  0013B8  EFDF  F009         	goto	l4472
  5978  0013BC                     u5600:
  5979  0013BC  8E1B               	bsf	___fladd@grs^0,7,c
  5980  0013BE                     l4472:
  5981  0013BE  340F               	rlcf	(___fladd@b+3)^0,w,c
  5982  0013C0  320F               	rrcf	(___fladd@b+3)^0,f,c
  5983  0013C2  320E               	rrcf	(___fladd@b+2)^0,f,c
  5984  0013C4  320D               	rrcf	(___fladd@b+1)^0,f,c
  5985  0013C6  320C               	rrcf	___fladd@b^0,f,c
  5986  0013C8  2A1A               	incf	___fladd@bexp^0,f,c
  5987  0013CA                     l877:
  5988  0013CA  5019               	movf	___fladd@aexp^0,w,c
  5989  0013CC  5C1A               	subwf	___fladd@bexp^0,w,c
  5990  0013CE  A0D8               	btfss	status,0,c
  5991  0013D0  EFEC  F009         	goto	u5611
  5992  0013D4  EFEE  F009         	goto	u5610
  5993  0013D8                     u5611:
  5994  0013D8  EFC8  F009         	goto	l878
  5995  0013DC                     u5610:
  5996  0013DC                     l876:
  5997  0013DC  BC18               	btfsc	___fladd@signs^0,6,c
  5998  0013DE  EFF3  F009         	goto	u5621
  5999  0013E2  EFF5  F009         	goto	u5620
  6000  0013E6                     u5621:
  6001  0013E6  EF35  F00A         	goto	l4500
  6002  0013EA                     u5620:
  6003  0013EA  501A               	movf	___fladd@bexp^0,w,c
  6004  0013EC  A4D8               	btfss	status,2,c
  6005  0013EE  EFFB  F009         	goto	u5631
  6006  0013F2  EFFD  F009         	goto	u5630
  6007  0013F6                     u5631:
  6008  0013F6  EF07  F00A         	goto	l4482
  6009  0013FA                     u5630:
  6010  0013FA  0E00               	movlw	0
  6011  0013FC  6E0C               	movwf	?___fladd^0,c
  6012  0013FE  0E00               	movlw	0
  6013  001400  6E0D               	movwf	(?___fladd+1)^0,c
  6014  001402  0E00               	movlw	0
  6015  001404  6E0E               	movwf	(?___fladd+2)^0,c
  6016  001406  0E00               	movlw	0
  6017  001408  6E0F               	movwf	(?___fladd+3)^0,c
  6018  00140A  EF56  F00B         	goto	l885
  6019  00140E                     l4482:
  6020  00140E  5010               	movf	___fladd@a^0,w,c
  6021  001410  260C               	addwf	___fladd@b^0,f,c
  6022  001412  5011               	movf	(___fladd@a+1)^0,w,c
  6023  001414  220D               	addwfc	(___fladd@b+1)^0,f,c
  6024  001416  5012               	movf	(___fladd@a+2)^0,w,c
  6025  001418  220E               	addwfc	(___fladd@b+2)^0,f,c
  6026  00141A  5013               	movf	(___fladd@a+3)^0,w,c
  6027  00141C  220F               	addwfc	(___fladd@b+3)^0,f,c
  6028  00141E  A00F               	btfss	(___fladd@b+3)^0,0,c
  6029  001420  EF14  F00A         	goto	u5641
  6030  001424  EF16  F00A         	goto	u5640
  6031  001428                     u5641:
  6032  001428  EFC2  F00A         	goto	l4536
  6033  00142C                     u5640:
  6034  00142C  A01B               	btfss	___fladd@grs^0,0,c
  6035  00142E  EF1B  F00A         	goto	u5651
  6036  001432  EF1D  F00A         	goto	u5650
  6037  001436                     u5651:
  6038  001436  EF23  F00A         	goto	l4490
  6039  00143A                     u5650:
  6040  00143A  90D8               	bcf	status,0,c
  6041  00143C  301B               	rrcf	___fladd@grs^0,w,c
  6042  00143E  0901               	iorlw	1
  6043  001440  6E1B               	movwf	___fladd@grs^0,c
  6044  001442  EF25  F00A         	goto	l4492
  6045  001446                     l4490:
  6046  001446  90D8               	bcf	status,0,c
  6047  001448  321B               	rrcf	___fladd@grs^0,f,c
  6048  00144A                     l4492:
  6049  00144A  A00C               	btfss	___fladd@b^0,0,c
  6050  00144C  EF2A  F00A         	goto	u5661
  6051  001450  EF2C  F00A         	goto	u5660
  6052  001454                     u5661:
  6053  001454  EF2D  F00A         	goto	l4496
  6054  001458                     u5660:
  6055  001458  8E1B               	bsf	___fladd@grs^0,7,c
  6056  00145A                     l4496:
  6057  00145A  340F               	rlcf	(___fladd@b+3)^0,w,c
  6058  00145C  320F               	rrcf	(___fladd@b+3)^0,f,c
  6059  00145E  320E               	rrcf	(___fladd@b+2)^0,f,c
  6060  001460  320D               	rrcf	(___fladd@b+1)^0,f,c
  6061  001462  320C               	rrcf	___fladd@b^0,f,c
  6062  001464  2A1A               	incf	___fladd@bexp^0,f,c
  6063  001466  EFC2  F00A         	goto	l4536
  6064  00146A                     l4500:
  6065  00146A  5010               	movf	___fladd@a^0,w,c
  6066  00146C  5C0C               	subwf	___fladd@b^0,w,c
  6067  00146E  5011               	movf	(___fladd@a+1)^0,w,c
  6068  001470  580D               	subwfb	(___fladd@b+1)^0,w,c
  6069  001472  5012               	movf	(___fladd@a+2)^0,w,c
  6070  001474  580E               	subwfb	(___fladd@b+2)^0,w,c
  6071  001476  500F               	movf	(___fladd@b+3)^0,w,c
  6072  001478  0A80               	xorlw	128
  6073  00147A  6E14               	movwf	??___fladd^0,c
  6074  00147C  5013               	movf	(___fladd@a+3)^0,w,c
  6075  00147E  0A80               	xorlw	128
  6076  001480  5814               	subwfb	??___fladd^0,w,c
  6077  001482  B0D8               	btfsc	status,0,c
  6078  001484  EF46  F00A         	goto	u5671
  6079  001488  EF48  F00A         	goto	u5670
  6080  00148C                     u5671:
  6081  00148C  EF73  F00A         	goto	l4510
  6082  001490                     u5670:
  6083  001490  500C               	movf	___fladd@b^0,w,c
  6084  001492  5C10               	subwf	___fladd@a^0,w,c
  6085  001494  6E14               	movwf	??___fladd^0,c
  6086  001496  500D               	movf	(___fladd@b+1)^0,w,c
  6087  001498  5811               	subwfb	(___fladd@a+1)^0,w,c
  6088  00149A  6E15               	movwf	(??___fladd+1)^0,c
  6089  00149C  500E               	movf	(___fladd@b+2)^0,w,c
  6090  00149E  5812               	subwfb	(___fladd@a+2)^0,w,c
  6091  0014A0  6E16               	movwf	(??___fladd+2)^0,c
  6092  0014A2  500F               	movf	(___fladd@b+3)^0,w,c
  6093  0014A4  5813               	subwfb	(___fladd@a+3)^0,w,c
  6094  0014A6  6E17               	movwf	(??___fladd+3)^0,c
  6095  0014A8  0EFF               	movlw	255
  6096  0014AA  2414               	addwf	??___fladd^0,w,c
  6097  0014AC  6E0C               	movwf	___fladd@b^0,c
  6098  0014AE  0EFF               	movlw	255
  6099  0014B0  2015               	addwfc	(??___fladd+1)^0,w,c
  6100  0014B2  6E0D               	movwf	(___fladd@b+1)^0,c
  6101  0014B4  0EFF               	movlw	255
  6102  0014B6  2016               	addwfc	(??___fladd+2)^0,w,c
  6103  0014B8  6E0E               	movwf	(___fladd@b+2)^0,c
  6104  0014BA  0EFF               	movlw	255
  6105  0014BC  2017               	addwfc	(??___fladd+3)^0,w,c
  6106  0014BE  6E0F               	movwf	(___fladd@b+3)^0,c
  6107  0014C0  0E80               	movlw	128
  6108  0014C2  1A18               	xorwf	___fladd@signs^0,f,c
  6109  0014C4  6C1B               	negf	___fladd@grs^0,c
  6110  0014C6  501B               	movf	___fladd@grs^0,w,c
  6111  0014C8  A4D8               	btfss	status,2,c
  6112  0014CA  EF69  F00A         	goto	u5681
  6113  0014CE  EF6B  F00A         	goto	u5680
  6114  0014D2                     u5681:
  6115  0014D2  EF7B  F00A         	goto	l893
  6116  0014D6                     u5680:
  6117  0014D6  0E01               	movlw	1
  6118  0014D8  260C               	addwf	___fladd@b^0,f,c
  6119  0014DA  0E00               	movlw	0
  6120  0014DC  220D               	addwfc	(___fladd@b+1)^0,f,c
  6121  0014DE  220E               	addwfc	(___fladd@b+2)^0,f,c
  6122  0014E0  220F               	addwfc	(___fladd@b+3)^0,f,c
  6123  0014E2  EF7B  F00A         	goto	l893
  6124  0014E6                     l4510:
  6125  0014E6  5010               	movf	___fladd@a^0,w,c
  6126  0014E8  5E0C               	subwf	___fladd@b^0,f,c
  6127  0014EA  5011               	movf	(___fladd@a+1)^0,w,c
  6128  0014EC  5A0D               	subwfb	(___fladd@b+1)^0,f,c
  6129  0014EE  5012               	movf	(___fladd@a+2)^0,w,c
  6130  0014F0  5A0E               	subwfb	(___fladd@b+2)^0,f,c
  6131  0014F2  5013               	movf	(___fladd@a+3)^0,w,c
  6132  0014F4  5A0F               	subwfb	(___fladd@b+3)^0,f,c
  6133  0014F6                     l893:
  6134  0014F6  500C               	movf	___fladd@b^0,w,c
  6135  0014F8  100D               	iorwf	(___fladd@b+1)^0,w,c
  6136  0014FA  100E               	iorwf	(___fladd@b+2)^0,w,c
  6137  0014FC  100F               	iorwf	(___fladd@b+3)^0,w,c
  6138  0014FE  A4D8               	btfss	status,2,c
  6139  001500  EF84  F00A         	goto	u5691
  6140  001504  EF86  F00A         	goto	u5690
  6141  001508                     u5691:
  6142  001508  EFBB  F00A         	goto	l4534
  6143  00150C                     u5690:
  6144  00150C  501B               	movf	___fladd@grs^0,w,c
  6145  00150E  A4D8               	btfss	status,2,c
  6146  001510  EF8C  F00A         	goto	u5701
  6147  001514  EF8E  F00A         	goto	u5700
  6148  001518                     u5701:
  6149  001518  EFBB  F00A         	goto	l4534
  6150  00151C                     u5700:
  6151  00151C  0E00               	movlw	0
  6152  00151E  6E0C               	movwf	?___fladd^0,c
  6153  001520  0E00               	movlw	0
  6154  001522  6E0D               	movwf	(?___fladd+1)^0,c
  6155  001524  0E00               	movlw	0
  6156  001526  6E0E               	movwf	(?___fladd+2)^0,c
  6157  001528  0E00               	movlw	0
  6158  00152A  6E0F               	movwf	(?___fladd+3)^0,c
  6159  00152C  EF56  F00B         	goto	l885
  6160  001530                     l4518:
  6161  001530  90D8               	bcf	status,0,c
  6162  001532  360C               	rlcf	___fladd@b^0,f,c
  6163  001534  360D               	rlcf	(___fladd@b+1)^0,f,c
  6164  001536  360E               	rlcf	(___fladd@b+2)^0,f,c
  6165  001538  360F               	rlcf	(___fladd@b+3)^0,f,c
  6166  00153A  AE1B               	btfss	___fladd@grs^0,7,c
  6167  00153C  EFA2  F00A         	goto	u5711
  6168  001540  EFA4  F00A         	goto	u5710
  6169  001544                     u5711:
  6170  001544  EFA5  F00A         	goto	l4524
  6171  001548                     u5710:
  6172  001548  800C               	bsf	___fladd@b^0,0,c
  6173  00154A                     l4524:
  6174  00154A  A01B               	btfss	___fladd@grs^0,0,c
  6175  00154C  EFAA  F00A         	goto	u5721
  6176  001550  EFAC  F00A         	goto	u5720
  6177  001554                     u5721:
  6178  001554  EFB0  F00A         	goto	l4528
  6179  001558                     u5720:
  6180  001558  80D8               	bsf	status,0,c
  6181  00155A  361B               	rlcf	___fladd@grs^0,f,c
  6182  00155C  EFB2  F00A         	goto	l4530
  6183  001560                     l4528:
  6184  001560  90D8               	bcf	status,0,c
  6185  001562  361B               	rlcf	___fladd@grs^0,f,c
  6186  001564                     l4530:
  6187  001564  501A               	movf	___fladd@bexp^0,w,c
  6188  001566  B4D8               	btfsc	status,2,c
  6189  001568  EFB8  F00A         	goto	u5731
  6190  00156C  EFBA  F00A         	goto	u5730
  6191  001570                     u5731:
  6192  001570  EFBB  F00A         	goto	l4534
  6193  001574                     u5730:
  6194  001574  061A               	decf	___fladd@bexp^0,f,c
  6195  001576                     l4534:
  6196  001576  AE0E               	btfss	(___fladd@b+2)^0,7,c
  6197  001578  EFC0  F00A         	goto	u5741
  6198  00157C  EFC2  F00A         	goto	u5740
  6199  001580                     u5741:
  6200  001580  EF98  F00A         	goto	l4518
  6201  001584                     u5740:
  6202  001584                     l4536:
  6203  001584  0E00               	movlw	0
  6204  001586  6E19               	movwf	___fladd@aexp^0,c
  6205  001588  AE1B               	btfss	___fladd@grs^0,7,c
  6206  00158A  EFC9  F00A         	goto	u5751
  6207  00158E  EFCB  F00A         	goto	u5750
  6208  001592                     u5751:
  6209  001592  EFE3  F00A         	goto	l902
  6210  001596                     u5750:
  6211  001596  C01B  F014         	movff	___fladd@grs,??___fladd
  6212  00159A  0E7F               	movlw	127
  6213  00159C  1614               	andwf	??___fladd^0,f,c
  6214  00159E  B4D8               	btfsc	status,2,c
  6215  0015A0  EFD4  F00A         	goto	u5761
  6216  0015A4  EFD6  F00A         	goto	u5760
  6217  0015A8                     u5761:
  6218  0015A8  EFDA  F00A         	goto	l903
  6219  0015AC                     u5760:
  6220  0015AC                     l4542:
  6221  0015AC  0E01               	movlw	1
  6222  0015AE  6E19               	movwf	___fladd@aexp^0,c
  6223  0015B0  EFE3  F00A         	goto	l902
  6224  0015B4                     l903:
  6225  0015B4  A00C               	btfss	___fladd@b^0,0,c
  6226  0015B6  EFDF  F00A         	goto	u5771
  6227  0015BA  EFE1  F00A         	goto	u5770
  6228  0015BE                     u5771:
  6229  0015BE  EFE3  F00A         	goto	l902
  6230  0015C2                     u5770:
  6231  0015C2  EFD6  F00A         	goto	l4542
  6232  0015C6                     l902:
  6233  0015C6  5019               	movf	___fladd@aexp^0,w,c
  6234  0015C8  B4D8               	btfsc	status,2,c
  6235  0015CA  EFE9  F00A         	goto	u5781
  6236  0015CE  EFEB  F00A         	goto	u5780
  6237  0015D2                     u5781:
  6238  0015D2  EF16  F00B         	goto	l4554
  6239  0015D6                     u5780:
  6240  0015D6  0E01               	movlw	1
  6241  0015D8  260C               	addwf	___fladd@b^0,f,c
  6242  0015DA  0E00               	movlw	0
  6243  0015DC  220D               	addwfc	(___fladd@b+1)^0,f,c
  6244  0015DE  220E               	addwfc	(___fladd@b+2)^0,f,c
  6245  0015E0  220F               	addwfc	(___fladd@b+3)^0,f,c
  6246  0015E2  A00F               	btfss	(___fladd@b+3)^0,0,c
  6247  0015E4  EFF6  F00A         	goto	u5791
  6248  0015E8  EFF8  F00A         	goto	u5790
  6249  0015EC                     u5791:
  6250  0015EC  EF16  F00B         	goto	l4554
  6251  0015F0                     u5790:
  6252  0015F0  C00C  F014         	movff	___fladd@b,??___fladd
  6253  0015F4  C00D  F015         	movff	___fladd@b+1,??___fladd+1
  6254  0015F8  C00E  F016         	movff	___fladd@b+2,??___fladd+2
  6255  0015FC  C00F  F017         	movff	___fladd@b+3,??___fladd+3
  6256  001600  3417               	rlcf	(??___fladd+3)^0,w,c
  6257  001602  3217               	rrcf	(??___fladd+3)^0,f,c
  6258  001604  3216               	rrcf	(??___fladd+2)^0,f,c
  6259  001606  3215               	rrcf	(??___fladd+1)^0,f,c
  6260  001608  3214               	rrcf	??___fladd^0,f,c
  6261  00160A  C014  F00C         	movff	??___fladd,___fladd@b
  6262  00160E  C015  F00D         	movff	??___fladd+1,___fladd@b+1
  6263  001612  C016  F00E         	movff	??___fladd+2,___fladd@b+2
  6264  001616  C017  F00F         	movff	??___fladd+3,___fladd@b+3
  6265  00161A  281A               	incf	___fladd@bexp^0,w,c
  6266  00161C  B4D8               	btfsc	status,2,c
  6267  00161E  EF13  F00B         	goto	u5801
  6268  001622  EF15  F00B         	goto	u5800
  6269  001626                     u5801:
  6270  001626  EF16  F00B         	goto	l4554
  6271  00162A                     u5800:
  6272  00162A  2A1A               	incf	___fladd@bexp^0,f,c
  6273  00162C                     l4554:
  6274  00162C  281A               	incf	___fladd@bexp^0,w,c
  6275  00162E  B4D8               	btfsc	status,2,c
  6276  001630  EF1C  F00B         	goto	u5811
  6277  001634  EF1E  F00B         	goto	u5810
  6278  001638                     u5811:
  6279  001638  EF26  F00B         	goto	l4558
  6280  00163C                     u5810:
  6281  00163C  501A               	movf	___fladd@bexp^0,w,c
  6282  00163E  A4D8               	btfss	status,2,c
  6283  001640  EF24  F00B         	goto	u5821
  6284  001644  EF26  F00B         	goto	u5820
  6285  001648                     u5821:
  6286  001648  EF38  F00B         	goto	l4562
  6287  00164C                     u5820:
  6288  00164C                     l4558:
  6289  00164C  0E00               	movlw	0
  6290  00164E  6E0C               	movwf	___fladd@b^0,c
  6291  001650  0E00               	movlw	0
  6292  001652  6E0D               	movwf	(___fladd@b+1)^0,c
  6293  001654  0E00               	movlw	0
  6294  001656  6E0E               	movwf	(___fladd@b+2)^0,c
  6295  001658  0E00               	movlw	0
  6296  00165A  6E0F               	movwf	(___fladd@b+3)^0,c
  6297  00165C  501A               	movf	___fladd@bexp^0,w,c
  6298  00165E  A4D8               	btfss	status,2,c
  6299  001660  EF34  F00B         	goto	u5831
  6300  001664  EF36  F00B         	goto	u5830
  6301  001668                     u5831:
  6302  001668  EF38  F00B         	goto	l4562
  6303  00166C                     u5830:
  6304  00166C  0E00               	movlw	0
  6305  00166E  6E18               	movwf	___fladd@signs^0,c
  6306  001670                     l4562:
  6307  001670  A01A               	btfss	___fladd@bexp^0,0,c
  6308  001672  EF3D  F00B         	goto	u5841
  6309  001676  EF3F  F00B         	goto	u5840
  6310  00167A                     u5841:
  6311  00167A  EF42  F00B         	goto	l4566
  6312  00167E                     u5840:
  6313  00167E  8E0E               	bsf	(___fladd@b+2)^0,7,c
  6314  001680  EF43  F00B         	goto	l4568
  6315  001684                     l4566:
  6316  001684  9E0E               	bcf	(___fladd@b+2)^0,7,c
  6317  001686                     l4568:
  6318  001686  90D8               	bcf	status,0,c
  6319  001688  301A               	rrcf	___fladd@bexp^0,w,c
  6320  00168A  6E0F               	movwf	(___fladd@b+3)^0,c
  6321  00168C  AE18               	btfss	___fladd@signs^0,7,c
  6322  00168E  EF4B  F00B         	goto	u5851
  6323  001692  EF4D  F00B         	goto	u5850
  6324  001696                     u5851:
  6325  001696  EF4E  F00B         	goto	l4574
  6326  00169A                     u5850:
  6327  00169A  8E0F               	bsf	(___fladd@b+3)^0,7,c
  6328  00169C                     l4574:
  6329  00169C  C00C  F00C         	movff	___fladd@b,?___fladd
  6330  0016A0  C00D  F00D         	movff	___fladd@b+1,?___fladd+1
  6331  0016A4  C00E  F00E         	movff	___fladd@b+2,?___fladd+2
  6332  0016A8  C00F  F00F         	movff	___fladd@b+3,?___fladd+3
  6333  0016AC                     l885:
  6334  0016AC  0012               	return		;funcret
  6335  0016AE                     __end_of___fladd:
  6336                           	opt callstack 0
  6337                           
  6338 ;; *************** function ___flneg *****************
  6339 ;; Defined at:
  6340 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;  f1              4   11[COMRAM] unsigned char 
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  4   11[COMRAM] unsigned char 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6354 ;;      Params:         4       0       0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0
  6357 ;;      Totals:         4       0       0       0       0       0       0
  6358 ;;Total ram usage:        4 bytes
  6359 ;; Hardware stack levels used:    1
  6360 ;; Hardware stack levels required when called:    4
  6361 ;; This function calls:
  6362 ;;		Nothing
  6363 ;; This function is called by:
  6364 ;;		_efgtoa
  6365 ;; This function uses a non-reentrant model
  6366 ;;
  6367                           
  6368                           	psect	text28
  6369  0038AE                     __ptext28:
  6370                           	opt callstack 0
  6371  0038AE                     ___flneg:
  6372                           	opt callstack 21
  6373  0038AE  500C               	movf	___flneg@f1^0,w,c
  6374  0038B0  100D               	iorwf	(___flneg@f1+1)^0,w,c
  6375  0038B2  100E               	iorwf	(___flneg@f1+2)^0,w,c
  6376  0038B4  100F               	iorwf	(___flneg@f1+3)^0,w,c
  6377  0038B6  B4D8               	btfsc	status,2,c
  6378  0038B8  EF60  F01C         	goto	u6761
  6379  0038BC  EF62  F01C         	goto	u6760
  6380  0038C0                     u6761:
  6381  0038C0  EF6A  F01C         	goto	l5070
  6382  0038C4                     u6760:
  6383  0038C4  0E00               	movlw	0
  6384  0038C6  1A0C               	xorwf	___flneg@f1^0,f,c
  6385  0038C8  0E00               	movlw	0
  6386  0038CA  1A0D               	xorwf	(___flneg@f1+1)^0,f,c
  6387  0038CC  0E00               	movlw	0
  6388  0038CE  1A0E               	xorwf	(___flneg@f1+2)^0,f,c
  6389  0038D0  0E80               	movlw	128
  6390  0038D2  1A0F               	xorwf	(___flneg@f1+3)^0,f,c
  6391  0038D4                     l5070:
  6392  0038D4  C00C  F00C         	movff	___flneg@f1,?___flneg
  6393  0038D8  C00D  F00D         	movff	___flneg@f1+1,?___flneg+1
  6394  0038DC  C00E  F00E         	movff	___flneg@f1+2,?___flneg+2
  6395  0038E0  C00F  F00F         	movff	___flneg@f1+3,?___flneg+3
  6396  0038E4  0012               	return		;funcret
  6397  0038E6                     __end_of___flneg:
  6398                           	opt callstack 0
  6399                           
  6400 ;; *************** function ___flmul *****************
  6401 ;; Defined at:
  6402 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;  b               4   25[COMRAM] unsigned char 
  6405 ;;  a               4   29[COMRAM] unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  prod            4   44[COMRAM] struct .
  6408 ;;  grs             4   39[COMRAM] unsigned long 
  6409 ;;  temp            2   48[COMRAM] struct .
  6410 ;;  bexp            1   43[COMRAM] unsigned char 
  6411 ;;  aexp            1   38[COMRAM] unsigned char 
  6412 ;;  sign            1   37[COMRAM] unsigned char 
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  4   25[COMRAM] unsigned char 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, prodl, prodh
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6422 ;;      Params:         8       0       0       0       0       0       0
  6423 ;;      Locals:        13       0       0       0       0       0       0
  6424 ;;      Temps:          4       0       0       0       0       0       0
  6425 ;;      Totals:        25       0       0       0       0       0       0
  6426 ;;Total ram usage:       25 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    4
  6429 ;; This function calls:
  6430 ;;		Nothing
  6431 ;; This function is called by:
  6432 ;;		_Mode2
  6433 ;;		_efgtoa
  6434 ;; This function uses a non-reentrant model
  6435 ;;
  6436                           
  6437                           	psect	text29
  6438  001B0C                     __ptext29:
  6439                           	opt callstack 0
  6440  001B0C                     ___flmul:
  6441                           	opt callstack 21
  6442  001B0C  501D               	movf	(___flmul@b+3)^0,w,c
  6443  001B0E  0B80               	andlw	128
  6444  001B10  6E26               	movwf	___flmul@sign^0,c
  6445  001B12  501D               	movf	(___flmul@b+3)^0,w,c
  6446  001B14  241D               	addwf	(___flmul@b+3)^0,w,c
  6447  001B16  6E2C               	movwf	___flmul@bexp^0,c
  6448  001B18  AE1C               	btfss	(___flmul@b+2)^0,7,c
  6449  001B1A  EF91  F00D         	goto	u6371
  6450  001B1E  EF93  F00D         	goto	u6370
  6451  001B22                     u6371:
  6452  001B22  EF94  F00D         	goto	l4818
  6453  001B26                     u6370:
  6454  001B26  802C               	bsf	___flmul@bexp^0,0,c
  6455  001B28                     l4818:
  6456  001B28  502C               	movf	___flmul@bexp^0,w,c
  6457  001B2A  B4D8               	btfsc	status,2,c
  6458  001B2C  EF9A  F00D         	goto	u6381
  6459  001B30  EF9C  F00D         	goto	u6380
  6460  001B34                     u6381:
  6461  001B34  EFAF  F00D         	goto	l4826
  6462  001B38                     u6380:
  6463  001B38  282C               	incf	___flmul@bexp^0,w,c
  6464  001B3A  A4D8               	btfss	status,2,c
  6465  001B3C  EFA2  F00D         	goto	u6391
  6466  001B40  EFA4  F00D         	goto	u6390
  6467  001B44                     u6391:
  6468  001B44  EFAC  F00D         	goto	l4824
  6469  001B48                     u6390:
  6470  001B48  0E00               	movlw	0
  6471  001B4A  6E1A               	movwf	___flmul@b^0,c
  6472  001B4C  0E00               	movlw	0
  6473  001B4E  6E1B               	movwf	(___flmul@b+1)^0,c
  6474  001B50  0E00               	movlw	0
  6475  001B52  6E1C               	movwf	(___flmul@b+2)^0,c
  6476  001B54  0E00               	movlw	0
  6477  001B56  6E1D               	movwf	(___flmul@b+3)^0,c
  6478  001B58                     l4824:
  6479  001B58  8E1C               	bsf	(___flmul@b+2)^0,7,c
  6480  001B5A  EFB7  F00D         	goto	l4828
  6481  001B5E                     l4826:
  6482  001B5E  0E00               	movlw	0
  6483  001B60  6E1A               	movwf	___flmul@b^0,c
  6484  001B62  0E00               	movlw	0
  6485  001B64  6E1B               	movwf	(___flmul@b+1)^0,c
  6486  001B66  0E00               	movlw	0
  6487  001B68  6E1C               	movwf	(___flmul@b+2)^0,c
  6488  001B6A  0E00               	movlw	0
  6489  001B6C  6E1D               	movwf	(___flmul@b+3)^0,c
  6490  001B6E                     l4828:
  6491  001B6E  5021               	movf	(___flmul@a+3)^0,w,c
  6492  001B70  0B80               	andlw	128
  6493  001B72  1A26               	xorwf	___flmul@sign^0,f,c
  6494  001B74  5021               	movf	(___flmul@a+3)^0,w,c
  6495  001B76  2421               	addwf	(___flmul@a+3)^0,w,c
  6496  001B78  6E27               	movwf	___flmul@aexp^0,c
  6497  001B7A  AE20               	btfss	(___flmul@a+2)^0,7,c
  6498  001B7C  EFC2  F00D         	goto	u6401
  6499  001B80  EFC4  F00D         	goto	u6400
  6500  001B84                     u6401:
  6501  001B84  EFC5  F00D         	goto	l4836
  6502  001B88                     u6400:
  6503  001B88  8027               	bsf	___flmul@aexp^0,0,c
  6504  001B8A                     l4836:
  6505  001B8A  5027               	movf	___flmul@aexp^0,w,c
  6506  001B8C  B4D8               	btfsc	status,2,c
  6507  001B8E  EFCB  F00D         	goto	u6411
  6508  001B92  EFCD  F00D         	goto	u6410
  6509  001B96                     u6411:
  6510  001B96  EFE0  F00D         	goto	l4844
  6511  001B9A                     u6410:
  6512  001B9A  2827               	incf	___flmul@aexp^0,w,c
  6513  001B9C  A4D8               	btfss	status,2,c
  6514  001B9E  EFD3  F00D         	goto	u6421
  6515  001BA2  EFD5  F00D         	goto	u6420
  6516  001BA6                     u6421:
  6517  001BA6  EFDD  F00D         	goto	l4842
  6518  001BAA                     u6420:
  6519  001BAA  0E00               	movlw	0
  6520  001BAC  6E1E               	movwf	___flmul@a^0,c
  6521  001BAE  0E00               	movlw	0
  6522  001BB0  6E1F               	movwf	(___flmul@a+1)^0,c
  6523  001BB2  0E00               	movlw	0
  6524  001BB4  6E20               	movwf	(___flmul@a+2)^0,c
  6525  001BB6  0E00               	movlw	0
  6526  001BB8  6E21               	movwf	(___flmul@a+3)^0,c
  6527  001BBA                     l4842:
  6528  001BBA  8E20               	bsf	(___flmul@a+2)^0,7,c
  6529  001BBC  EFE8  F00D         	goto	l962
  6530  001BC0                     l4844:
  6531  001BC0  0E00               	movlw	0
  6532  001BC2  6E1E               	movwf	___flmul@a^0,c
  6533  001BC4  0E00               	movlw	0
  6534  001BC6  6E1F               	movwf	(___flmul@a+1)^0,c
  6535  001BC8  0E00               	movlw	0
  6536  001BCA  6E20               	movwf	(___flmul@a+2)^0,c
  6537  001BCC  0E00               	movlw	0
  6538  001BCE  6E21               	movwf	(___flmul@a+3)^0,c
  6539  001BD0                     l962:
  6540  001BD0  5027               	movf	___flmul@aexp^0,w,c
  6541  001BD2  B4D8               	btfsc	status,2,c
  6542  001BD4  EFEE  F00D         	goto	u6431
  6543  001BD8  EFF0  F00D         	goto	u6430
  6544  001BDC                     u6431:
  6545  001BDC  EFF8  F00D         	goto	l4848
  6546  001BE0                     u6430:
  6547  001BE0  502C               	movf	___flmul@bexp^0,w,c
  6548  001BE2  A4D8               	btfss	status,2,c
  6549  001BE4  EFF6  F00D         	goto	u6441
  6550  001BE8  EFF8  F00D         	goto	u6440
  6551  001BEC                     u6441:
  6552  001BEC  EF02  F00E         	goto	l4852
  6553  001BF0                     u6440:
  6554  001BF0                     l4848:
  6555  001BF0  0E00               	movlw	0
  6556  001BF2  6E1A               	movwf	?___flmul^0,c
  6557  001BF4  0E00               	movlw	0
  6558  001BF6  6E1B               	movwf	(?___flmul+1)^0,c
  6559  001BF8  0E00               	movlw	0
  6560  001BFA  6E1C               	movwf	(?___flmul+2)^0,c
  6561  001BFC  0E00               	movlw	0
  6562  001BFE  6E1D               	movwf	(?___flmul+3)^0,c
  6563  001C00  EF9A  F00F         	goto	l966
  6564  001C04                     l4852:
  6565  001C04  5020               	movf	(___flmul@a+2)^0,w,c
  6566  001C06  021A               	mulwf	___flmul@b^0,c
  6567  001C08  CFF3 F031          	movff	prodl,___flmul@temp
  6568  001C0C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6569  001C10  5031               	movf	___flmul@temp^0,w,c
  6570  001C12  6E28               	movwf	___flmul@grs^0,c
  6571  001C14  6A29               	clrf	(___flmul@grs+1)^0,c
  6572  001C16  6A2A               	clrf	(___flmul@grs+2)^0,c
  6573  001C18  6A2B               	clrf	(___flmul@grs+3)^0,c
  6574  001C1A  5032               	movf	(___flmul@temp+1)^0,w,c
  6575  001C1C  6E2D               	movwf	___flmul@prod^0,c
  6576  001C1E  6A2E               	clrf	(___flmul@prod+1)^0,c
  6577  001C20  6A2F               	clrf	(___flmul@prod+2)^0,c
  6578  001C22  6A30               	clrf	(___flmul@prod+3)^0,c
  6579  001C24  501F               	movf	(___flmul@a+1)^0,w,c
  6580  001C26  021B               	mulwf	(___flmul@b+1)^0,c
  6581  001C28  CFF3 F031          	movff	prodl,___flmul@temp
  6582  001C2C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6583  001C30  5031               	movf	___flmul@temp^0,w,c
  6584  001C32  2628               	addwf	___flmul@grs^0,f,c
  6585  001C34  0E00               	movlw	0
  6586  001C36  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6587  001C38  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6588  001C3A  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6589  001C3C  5032               	movf	(___flmul@temp+1)^0,w,c
  6590  001C3E  262D               	addwf	___flmul@prod^0,f,c
  6591  001C40  0E00               	movlw	0
  6592  001C42  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6593  001C44  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6594  001C46  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6595  001C48  501E               	movf	___flmul@a^0,w,c
  6596  001C4A  021C               	mulwf	(___flmul@b+2)^0,c
  6597  001C4C  CFF3 F031          	movff	prodl,___flmul@temp
  6598  001C50  CFF4 F032          	movff	prodh,___flmul@temp+1
  6599  001C54  5031               	movf	___flmul@temp^0,w,c
  6600  001C56  2628               	addwf	___flmul@grs^0,f,c
  6601  001C58  0E00               	movlw	0
  6602  001C5A  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6603  001C5C  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6604  001C5E  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6605  001C60  5032               	movf	(___flmul@temp+1)^0,w,c
  6606  001C62  262D               	addwf	___flmul@prod^0,f,c
  6607  001C64  0E00               	movlw	0
  6608  001C66  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6609  001C68  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6610  001C6A  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6611  001C6C  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  6612  001C70  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  6613  001C74  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  6614  001C78  6A28               	clrf	___flmul@grs^0,c
  6615  001C7A  501E               	movf	___flmul@a^0,w,c
  6616  001C7C  021B               	mulwf	(___flmul@b+1)^0,c
  6617  001C7E  CFF3 F031          	movff	prodl,___flmul@temp
  6618  001C82  CFF4 F032          	movff	prodh,___flmul@temp+1
  6619  001C86  5031               	movf	___flmul@temp^0,w,c
  6620  001C88  2628               	addwf	___flmul@grs^0,f,c
  6621  001C8A  5032               	movf	(___flmul@temp+1)^0,w,c
  6622  001C8C  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6623  001C8E  0E00               	movlw	0
  6624  001C90  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6625  001C92  0E00               	movlw	0
  6626  001C94  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6627  001C96  501F               	movf	(___flmul@a+1)^0,w,c
  6628  001C98  021A               	mulwf	___flmul@b^0,c
  6629  001C9A  CFF3 F031          	movff	prodl,___flmul@temp
  6630  001C9E  CFF4 F032          	movff	prodh,___flmul@temp+1
  6631  001CA2  5031               	movf	___flmul@temp^0,w,c
  6632  001CA4  2628               	addwf	___flmul@grs^0,f,c
  6633  001CA6  5032               	movf	(___flmul@temp+1)^0,w,c
  6634  001CA8  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6635  001CAA  0E00               	movlw	0
  6636  001CAC  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6637  001CAE  0E00               	movlw	0
  6638  001CB0  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6639  001CB2  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  6640  001CB6  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  6641  001CBA  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  6642  001CBE  6A28               	clrf	___flmul@grs^0,c
  6643  001CC0  501E               	movf	___flmul@a^0,w,c
  6644  001CC2  021A               	mulwf	___flmul@b^0,c
  6645  001CC4  CFF3 F031          	movff	prodl,___flmul@temp
  6646  001CC8  CFF4 F032          	movff	prodh,___flmul@temp+1
  6647  001CCC  5031               	movf	___flmul@temp^0,w,c
  6648  001CCE  2628               	addwf	___flmul@grs^0,f,c
  6649  001CD0  5032               	movf	(___flmul@temp+1)^0,w,c
  6650  001CD2  2229               	addwfc	(___flmul@grs+1)^0,f,c
  6651  001CD4  0E00               	movlw	0
  6652  001CD6  222A               	addwfc	(___flmul@grs+2)^0,f,c
  6653  001CD8  0E00               	movlw	0
  6654  001CDA  222B               	addwfc	(___flmul@grs+3)^0,f,c
  6655  001CDC  5020               	movf	(___flmul@a+2)^0,w,c
  6656  001CDE  021B               	mulwf	(___flmul@b+1)^0,c
  6657  001CE0  CFF3 F031          	movff	prodl,___flmul@temp
  6658  001CE4  CFF4 F032          	movff	prodh,___flmul@temp+1
  6659  001CE8  5031               	movf	___flmul@temp^0,w,c
  6660  001CEA  262D               	addwf	___flmul@prod^0,f,c
  6661  001CEC  5032               	movf	(___flmul@temp+1)^0,w,c
  6662  001CEE  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6663  001CF0  0E00               	movlw	0
  6664  001CF2  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6665  001CF4  0E00               	movlw	0
  6666  001CF6  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6667  001CF8  501F               	movf	(___flmul@a+1)^0,w,c
  6668  001CFA  021C               	mulwf	(___flmul@b+2)^0,c
  6669  001CFC  CFF3 F031          	movff	prodl,___flmul@temp
  6670  001D00  CFF4 F032          	movff	prodh,___flmul@temp+1
  6671  001D04  5031               	movf	___flmul@temp^0,w,c
  6672  001D06  262D               	addwf	___flmul@prod^0,f,c
  6673  001D08  5032               	movf	(___flmul@temp+1)^0,w,c
  6674  001D0A  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6675  001D0C  0E00               	movlw	0
  6676  001D0E  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6677  001D10  0E00               	movlw	0
  6678  001D12  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6679  001D14  5020               	movf	(___flmul@a+2)^0,w,c
  6680  001D16  021C               	mulwf	(___flmul@b+2)^0,c
  6681  001D18  CFF3 F031          	movff	prodl,___flmul@temp
  6682  001D1C  CFF4 F032          	movff	prodh,___flmul@temp+1
  6683  001D20  5031               	movf	___flmul@temp^0,w,c
  6684  001D22  6E22               	movwf	??___flmul^0,c
  6685  001D24  5032               	movf	(___flmul@temp+1)^0,w,c
  6686  001D26  6E23               	movwf	(??___flmul+1)^0,c
  6687  001D28  6A24               	clrf	(??___flmul+2)^0,c
  6688  001D2A  6A25               	clrf	(??___flmul+3)^0,c
  6689  001D2C  C024  F025         	movff	??___flmul+2,??___flmul+3
  6690  001D30  C023  F024         	movff	??___flmul+1,??___flmul+2
  6691  001D34  C022  F023         	movff	??___flmul,??___flmul+1
  6692  001D38  6A22               	clrf	??___flmul^0,c
  6693  001D3A  5022               	movf	??___flmul^0,w,c
  6694  001D3C  262D               	addwf	___flmul@prod^0,f,c
  6695  001D3E  5023               	movf	(??___flmul+1)^0,w,c
  6696  001D40  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6697  001D42  5024               	movf	(??___flmul+2)^0,w,c
  6698  001D44  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6699  001D46  5025               	movf	(??___flmul+3)^0,w,c
  6700  001D48  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6701  001D4A  C028  F022         	movff	___flmul@grs,??___flmul
  6702  001D4E  C029  F023         	movff	___flmul@grs+1,??___flmul+1
  6703  001D52  C02A  F024         	movff	___flmul@grs+2,??___flmul+2
  6704  001D56  C02B  F025         	movff	___flmul@grs+3,??___flmul+3
  6705  001D5A  0E19               	movlw	25
  6706  001D5C  EFB5  F00E         	goto	u6450
  6707  001D60                     u6455:
  6708  001D60  90D8               	bcf	status,0,c
  6709  001D62  3225               	rrcf	(??___flmul+3)^0,f,c
  6710  001D64  3224               	rrcf	(??___flmul+2)^0,f,c
  6711  001D66  3223               	rrcf	(??___flmul+1)^0,f,c
  6712  001D68  3222               	rrcf	??___flmul^0,f,c
  6713  001D6A                     u6450:
  6714  001D6A  2EE8               	decfsz	wreg,f,c
  6715  001D6C  EFB0  F00E         	goto	u6455
  6716  001D70  5022               	movf	??___flmul^0,w,c
  6717  001D72  262D               	addwf	___flmul@prod^0,f,c
  6718  001D74  5023               	movf	(??___flmul+1)^0,w,c
  6719  001D76  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6720  001D78  5024               	movf	(??___flmul+2)^0,w,c
  6721  001D7A  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6722  001D7C  5025               	movf	(??___flmul+3)^0,w,c
  6723  001D7E  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6724  001D80  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
  6725  001D84  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
  6726  001D88  C028  F029         	movff	___flmul@grs,___flmul@grs+1
  6727  001D8C  6A28               	clrf	___flmul@grs^0,c
  6728  001D8E  5027               	movf	___flmul@aexp^0,w,c
  6729  001D90  C02C  F022         	movff	___flmul@bexp,??___flmul
  6730  001D94  6A23               	clrf	(??___flmul+1)^0,c
  6731  001D96  2622               	addwf	??___flmul^0,f,c
  6732  001D98  0E00               	movlw	0
  6733  001D9A  2223               	addwfc	(??___flmul+1)^0,f,c
  6734  001D9C  0E82               	movlw	130
  6735  001D9E  2422               	addwf	??___flmul^0,w,c
  6736  001DA0  6E31               	movwf	___flmul@temp^0,c
  6737  001DA2  0EFF               	movlw	255
  6738  001DA4  2023               	addwfc	(??___flmul+1)^0,w,c
  6739  001DA6  6E32               	movwf	(___flmul@temp+1)^0,c
  6740  001DA8  EFEB  F00E         	goto	l4900
  6741  001DAC                     l4894:
  6742  001DAC  90D8               	bcf	status,0,c
  6743  001DAE  362D               	rlcf	___flmul@prod^0,f,c
  6744  001DB0  362E               	rlcf	(___flmul@prod+1)^0,f,c
  6745  001DB2  362F               	rlcf	(___flmul@prod+2)^0,f,c
  6746  001DB4  3630               	rlcf	(___flmul@prod+3)^0,f,c
  6747  001DB6  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  6748  001DB8  EFE0  F00E         	goto	u6461
  6749  001DBC  EFE2  F00E         	goto	u6460
  6750  001DC0                     u6461:
  6751  001DC0  EFE3  F00E         	goto	l969
  6752  001DC4                     u6460:
  6753  001DC4  802D               	bsf	___flmul@prod^0,0,c
  6754  001DC6                     l969:
  6755  001DC6  90D8               	bcf	status,0,c
  6756  001DC8  3628               	rlcf	___flmul@grs^0,f,c
  6757  001DCA  3629               	rlcf	(___flmul@grs+1)^0,f,c
  6758  001DCC  362A               	rlcf	(___flmul@grs+2)^0,f,c
  6759  001DCE  362B               	rlcf	(___flmul@grs+3)^0,f,c
  6760  001DD0  0631               	decf	___flmul@temp^0,f,c
  6761  001DD2  A0D8               	btfss	status,0,c
  6762  001DD4  0632               	decf	(___flmul@temp+1)^0,f,c
  6763  001DD6                     l4900:
  6764  001DD6  AE2F               	btfss	(___flmul@prod+2)^0,7,c
  6765  001DD8  EFF0  F00E         	goto	u6471
  6766  001DDC  EFF2  F00E         	goto	u6470
  6767  001DE0                     u6471:
  6768  001DE0  EFD6  F00E         	goto	l4894
  6769  001DE4                     u6470:
  6770  001DE4  0E00               	movlw	0
  6771  001DE6  6E27               	movwf	___flmul@aexp^0,c
  6772  001DE8  AE2B               	btfss	(___flmul@grs+3)^0,7,c
  6773  001DEA  EFF9  F00E         	goto	u6481
  6774  001DEE  EFFB  F00E         	goto	u6480
  6775  001DF2                     u6481:
  6776  001DF2  EF1F  F00F         	goto	l971
  6777  001DF6                     u6480:
  6778  001DF6  0EFF               	movlw	255
  6779  001DF8  1428               	andwf	___flmul@grs^0,w,c
  6780  001DFA  6E22               	movwf	??___flmul^0,c
  6781  001DFC  0EFF               	movlw	255
  6782  001DFE  1429               	andwf	(___flmul@grs+1)^0,w,c
  6783  001E00  6E23               	movwf	(??___flmul+1)^0,c
  6784  001E02  0EFF               	movlw	255
  6785  001E04  142A               	andwf	(___flmul@grs+2)^0,w,c
  6786  001E06  6E24               	movwf	(??___flmul+2)^0,c
  6787  001E08  0E7F               	movlw	127
  6788  001E0A  142B               	andwf	(___flmul@grs+3)^0,w,c
  6789  001E0C  6E25               	movwf	(??___flmul+3)^0,c
  6790  001E0E  5022               	movf	??___flmul^0,w,c
  6791  001E10  1023               	iorwf	(??___flmul+1)^0,w,c
  6792  001E12  1024               	iorwf	(??___flmul+2)^0,w,c
  6793  001E14  1025               	iorwf	(??___flmul+3)^0,w,c
  6794  001E16  B4D8               	btfsc	status,2,c
  6795  001E18  EF10  F00F         	goto	u6491
  6796  001E1C  EF12  F00F         	goto	u6490
  6797  001E20                     u6491:
  6798  001E20  EF16  F00F         	goto	l972
  6799  001E24                     u6490:
  6800  001E24                     l4908:
  6801  001E24  0E01               	movlw	1
  6802  001E26  6E27               	movwf	___flmul@aexp^0,c
  6803  001E28  EF1F  F00F         	goto	l971
  6804  001E2C                     l972:
  6805  001E2C  A02D               	btfss	___flmul@prod^0,0,c
  6806  001E2E  EF1B  F00F         	goto	u6501
  6807  001E32  EF1D  F00F         	goto	u6500
  6808  001E36                     u6501:
  6809  001E36  EF1F  F00F         	goto	l971
  6810  001E3A                     u6500:
  6811  001E3A  EF12  F00F         	goto	l4908
  6812  001E3E                     l971:
  6813  001E3E  5027               	movf	___flmul@aexp^0,w,c
  6814  001E40  B4D8               	btfsc	status,2,c
  6815  001E42  EF25  F00F         	goto	u6511
  6816  001E46  EF27  F00F         	goto	u6510
  6817  001E4A                     u6511:
  6818  001E4A  EF4B  F00F         	goto	l4920
  6819  001E4E                     u6510:
  6820  001E4E  0E01               	movlw	1
  6821  001E50  262D               	addwf	___flmul@prod^0,f,c
  6822  001E52  0E00               	movlw	0
  6823  001E54  222E               	addwfc	(___flmul@prod+1)^0,f,c
  6824  001E56  222F               	addwfc	(___flmul@prod+2)^0,f,c
  6825  001E58  2230               	addwfc	(___flmul@prod+3)^0,f,c
  6826  001E5A  A030               	btfss	(___flmul@prod+3)^0,0,c
  6827  001E5C  EF32  F00F         	goto	u6521
  6828  001E60  EF34  F00F         	goto	u6520
  6829  001E64                     u6521:
  6830  001E64  EF4B  F00F         	goto	l4920
  6831  001E68                     u6520:
  6832  001E68  C02D  F022         	movff	___flmul@prod,??___flmul
  6833  001E6C  C02E  F023         	movff	___flmul@prod+1,??___flmul+1
  6834  001E70  C02F  F024         	movff	___flmul@prod+2,??___flmul+2
  6835  001E74  C030  F025         	movff	___flmul@prod+3,??___flmul+3
  6836  001E78  3425               	rlcf	(??___flmul+3)^0,w,c
  6837  001E7A  3225               	rrcf	(??___flmul+3)^0,f,c
  6838  001E7C  3224               	rrcf	(??___flmul+2)^0,f,c
  6839  001E7E  3223               	rrcf	(??___flmul+1)^0,f,c
  6840  001E80  3222               	rrcf	??___flmul^0,f,c
  6841  001E82  C022  F02D         	movff	??___flmul,___flmul@prod
  6842  001E86  C023  F02E         	movff	??___flmul+1,___flmul@prod+1
  6843  001E8A  C024  F02F         	movff	??___flmul+2,___flmul@prod+2
  6844  001E8E  C025  F030         	movff	??___flmul+3,___flmul@prod+3
  6845  001E92  4A31               	infsnz	___flmul@temp^0,f,c
  6846  001E94  2A32               	incf	(___flmul@temp+1)^0,f,c
  6847  001E96                     l4920:
  6848  001E96  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6849  001E98  EF56  F00F         	goto	u6531
  6850  001E9C  5032               	movf	(___flmul@temp+1)^0,w,c
  6851  001E9E  E108               	bnz	u6530
  6852  001EA0  2831               	incf	___flmul@temp^0,w,c
  6853  001EA2  A0D8               	btfss	status,0,c
  6854  001EA4  EF56  F00F         	goto	u6531
  6855  001EA8  EF58  F00F         	goto	u6530
  6856  001EAC                     u6531:
  6857  001EAC  EF62  F00F         	goto	l4924
  6858  001EB0                     u6530:
  6859  001EB0  0E00               	movlw	0
  6860  001EB2  6E2D               	movwf	___flmul@prod^0,c
  6861  001EB4  0E00               	movlw	0
  6862  001EB6  6E2E               	movwf	(___flmul@prod+1)^0,c
  6863  001EB8  0E80               	movlw	128
  6864  001EBA  6E2F               	movwf	(___flmul@prod+2)^0,c
  6865  001EBC  0E7F               	movlw	127
  6866  001EBE  6E30               	movwf	(___flmul@prod+3)^0,c
  6867  001EC0  EF90  F00F         	goto	l4936
  6868  001EC4                     l4924:
  6869  001EC4  BE32               	btfsc	(___flmul@temp+1)^0,7,c
  6870  001EC6  EF6F  F00F         	goto	u6540
  6871  001ECA  5032               	movf	(___flmul@temp+1)^0,w,c
  6872  001ECC  E106               	bnz	u6541
  6873  001ECE  0431               	decf	___flmul@temp^0,w,c
  6874  001ED0  B0D8               	btfsc	status,0,c
  6875  001ED2  EF6D  F00F         	goto	u6541
  6876  001ED6  EF6F  F00F         	goto	u6540
  6877  001EDA                     u6541:
  6878  001EDA  EF7B  F00F         	goto	l979
  6879  001EDE                     u6540:
  6880  001EDE  0E00               	movlw	0
  6881  001EE0  6E2D               	movwf	___flmul@prod^0,c
  6882  001EE2  0E00               	movlw	0
  6883  001EE4  6E2E               	movwf	(___flmul@prod+1)^0,c
  6884  001EE6  0E00               	movlw	0
  6885  001EE8  6E2F               	movwf	(___flmul@prod+2)^0,c
  6886  001EEA  0E00               	movlw	0
  6887  001EEC  6E30               	movwf	(___flmul@prod+3)^0,c
  6888  001EEE  0E00               	movlw	0
  6889  001EF0  6E26               	movwf	___flmul@sign^0,c
  6890  001EF2  EF90  F00F         	goto	l4936
  6891  001EF6                     l979:
  6892  001EF6  C031  F02C         	movff	___flmul@temp,___flmul@bexp
  6893  001EFA  0EFF               	movlw	255
  6894  001EFC  162D               	andwf	___flmul@prod^0,f,c
  6895  001EFE  0EFF               	movlw	255
  6896  001F00  162E               	andwf	(___flmul@prod+1)^0,f,c
  6897  001F02  0E7F               	movlw	127
  6898  001F04  162F               	andwf	(___flmul@prod+2)^0,f,c
  6899  001F06  0E00               	movlw	0
  6900  001F08  1630               	andwf	(___flmul@prod+3)^0,f,c
  6901  001F0A  A02C               	btfss	___flmul@bexp^0,0,c
  6902  001F0C  EF8A  F00F         	goto	u6551
  6903  001F10  EF8C  F00F         	goto	u6550
  6904  001F14                     u6551:
  6905  001F14  EF8D  F00F         	goto	l4934
  6906  001F18                     u6550:
  6907  001F18  8E2F               	bsf	(___flmul@prod+2)^0,7,c
  6908  001F1A                     l4934:
  6909  001F1A  90D8               	bcf	status,0,c
  6910  001F1C  302C               	rrcf	___flmul@bexp^0,w,c
  6911  001F1E  6E30               	movwf	(___flmul@prod+3)^0,c
  6912  001F20                     l4936:
  6913  001F20  5026               	movf	___flmul@sign^0,w,c
  6914  001F22  1230               	iorwf	(___flmul@prod+3)^0,f,c
  6915  001F24  C02D  F01A         	movff	___flmul@prod,?___flmul
  6916  001F28  C02E  F01B         	movff	___flmul@prod+1,?___flmul+1
  6917  001F2C  C02F  F01C         	movff	___flmul@prod+2,?___flmul+2
  6918  001F30  C030  F01D         	movff	___flmul@prod+3,?___flmul+3
  6919  001F34                     l966:
  6920  001F34  0012               	return		;funcret
  6921  001F36                     __end_of___flmul:
  6922                           	opt callstack 0
  6923                           
  6924 ;; *************** function ___flge *****************
  6925 ;; Defined at:
  6926 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
  6927 ;; Parameters:    Size  Location     Type
  6928 ;;  ff1             4   50[COMRAM] unsigned char 
  6929 ;;  ff2             4   54[COMRAM] unsigned char 
  6930 ;; Auto vars:     Size  Location     Type
  6931 ;;		None
  6932 ;; Return value:  Size  Location     Type
  6933 ;;		None               void
  6934 ;; Registers used:
  6935 ;;		wreg, status,2, status,0
  6936 ;; Tracked objects:
  6937 ;;		On entry : 0/0
  6938 ;;		On exit  : 0/0
  6939 ;;		Unchanged: 0/0
  6940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6941 ;;      Params:         8       0       0       0       0       0       0
  6942 ;;      Locals:         0       0       0       0       0       0       0
  6943 ;;      Temps:          4       0       0       0       0       0       0
  6944 ;;      Totals:        12       0       0       0       0       0       0
  6945 ;;Total ram usage:       12 bytes
  6946 ;; Hardware stack levels used:    1
  6947 ;; Hardware stack levels required when called:    4
  6948 ;; This function calls:
  6949 ;;		Nothing
  6950 ;; This function is called by:
  6951 ;;		_efgtoa
  6952 ;; This function uses a non-reentrant model
  6953 ;;
  6954                           
  6955                           	psect	text30
  6956  002BC2                     __ptext30:
  6957                           	opt callstack 0
  6958  002BC2                     ___flge:
  6959                           	opt callstack 21
  6960  002BC2  0E00               	movlw	0
  6961  002BC4  1433               	andwf	___flge@ff1^0,w,c
  6962  002BC6  6E3B               	movwf	??___flge^0,c
  6963  002BC8  0E00               	movlw	0
  6964  002BCA  1434               	andwf	(___flge@ff1+1)^0,w,c
  6965  002BCC  6E3C               	movwf	(??___flge+1)^0,c
  6966  002BCE  0E80               	movlw	128
  6967  002BD0  1435               	andwf	(___flge@ff1+2)^0,w,c
  6968  002BD2  6E3D               	movwf	(??___flge+2)^0,c
  6969  002BD4  0E7F               	movlw	127
  6970  002BD6  1436               	andwf	(___flge@ff1+3)^0,w,c
  6971  002BD8  6E3E               	movwf	(??___flge+3)^0,c
  6972  002BDA  503B               	movf	??___flge^0,w,c
  6973  002BDC  103C               	iorwf	(??___flge+1)^0,w,c
  6974  002BDE  103D               	iorwf	(??___flge+2)^0,w,c
  6975  002BE0  103E               	iorwf	(??___flge+3)^0,w,c
  6976  002BE2  A4D8               	btfss	status,2,c
  6977  002BE4  EFF6  F015         	goto	u6711
  6978  002BE8  EFF8  F015         	goto	u6710
  6979  002BEC                     u6711:
  6980  002BEC  EF00  F016         	goto	l5048
  6981  002BF0                     u6710:
  6982  002BF0  0E00               	movlw	0
  6983  002BF2  6E33               	movwf	___flge@ff1^0,c
  6984  002BF4  0E00               	movlw	0
  6985  002BF6  6E34               	movwf	(___flge@ff1+1)^0,c
  6986  002BF8  0E00               	movlw	0
  6987  002BFA  6E35               	movwf	(___flge@ff1+2)^0,c
  6988  002BFC  0E00               	movlw	0
  6989  002BFE  6E36               	movwf	(___flge@ff1+3)^0,c
  6990  002C00                     l5048:
  6991  002C00  0E00               	movlw	0
  6992  002C02  1437               	andwf	___flge@ff2^0,w,c
  6993  002C04  6E3B               	movwf	??___flge^0,c
  6994  002C06  0E00               	movlw	0
  6995  002C08  1438               	andwf	(___flge@ff2+1)^0,w,c
  6996  002C0A  6E3C               	movwf	(??___flge+1)^0,c
  6997  002C0C  0E80               	movlw	128
  6998  002C0E  1439               	andwf	(___flge@ff2+2)^0,w,c
  6999  002C10  6E3D               	movwf	(??___flge+2)^0,c
  7000  002C12  0E7F               	movlw	127
  7001  002C14  143A               	andwf	(___flge@ff2+3)^0,w,c
  7002  002C16  6E3E               	movwf	(??___flge+3)^0,c
  7003  002C18  503B               	movf	??___flge^0,w,c
  7004  002C1A  103C               	iorwf	(??___flge+1)^0,w,c
  7005  002C1C  103D               	iorwf	(??___flge+2)^0,w,c
  7006  002C1E  103E               	iorwf	(??___flge+3)^0,w,c
  7007  002C20  A4D8               	btfss	status,2,c
  7008  002C22  EF15  F016         	goto	u6721
  7009  002C26  EF17  F016         	goto	u6720
  7010  002C2A                     u6721:
  7011  002C2A  EF1F  F016         	goto	l5052
  7012  002C2E                     u6720:
  7013  002C2E  0E00               	movlw	0
  7014  002C30  6E37               	movwf	___flge@ff2^0,c
  7015  002C32  0E00               	movlw	0
  7016  002C34  6E38               	movwf	(___flge@ff2+1)^0,c
  7017  002C36  0E00               	movlw	0
  7018  002C38  6E39               	movwf	(___flge@ff2+2)^0,c
  7019  002C3A  0E00               	movlw	0
  7020  002C3C  6E3A               	movwf	(___flge@ff2+3)^0,c
  7021  002C3E                     l5052:
  7022  002C3E  AE36               	btfss	(___flge@ff1+3)^0,7,c
  7023  002C40  EF24  F016         	goto	u6731
  7024  002C44  EF26  F016         	goto	u6730
  7025  002C48                     u6731:
  7026  002C48  EF2F  F016         	goto	l5056
  7027  002C4C                     u6730:
  7028  002C4C  6C33               	negf	___flge@ff1^0,c
  7029  002C4E  1E34               	comf	(___flge@ff1+1)^0,f,c
  7030  002C50  B0D8               	btfsc	status,0,c
  7031  002C52  2A34               	incf	(___flge@ff1+1)^0,f,c
  7032  002C54  1E35               	comf	(___flge@ff1+2)^0,f,c
  7033  002C56  B0D8               	btfsc	status,0,c
  7034  002C58  2A35               	incf	(___flge@ff1+2)^0,f,c
  7035  002C5A  0E80               	movlw	128
  7036  002C5C  5636               	subfwb	(___flge@ff1+3)^0,f,c
  7037  002C5E                     l5056:
  7038  002C5E  AE3A               	btfss	(___flge@ff2+3)^0,7,c
  7039  002C60  EF34  F016         	goto	u6741
  7040  002C64  EF36  F016         	goto	u6740
  7041  002C68                     u6741:
  7042  002C68  EF3F  F016         	goto	l613
  7043  002C6C                     u6740:
  7044  002C6C  6C37               	negf	___flge@ff2^0,c
  7045  002C6E  1E38               	comf	(___flge@ff2+1)^0,f,c
  7046  002C70  B0D8               	btfsc	status,0,c
  7047  002C72  2A38               	incf	(___flge@ff2+1)^0,f,c
  7048  002C74  1E39               	comf	(___flge@ff2+2)^0,f,c
  7049  002C76  B0D8               	btfsc	status,0,c
  7050  002C78  2A39               	incf	(___flge@ff2+2)^0,f,c
  7051  002C7A  0E80               	movlw	128
  7052  002C7C  563A               	subfwb	(___flge@ff2+3)^0,f,c
  7053  002C7E                     l613:
  7054  002C7E  0E00               	movlw	0
  7055  002C80  1A33               	xorwf	___flge@ff1^0,f,c
  7056  002C82  0E00               	movlw	0
  7057  002C84  1A34               	xorwf	(___flge@ff1+1)^0,f,c
  7058  002C86  0E00               	movlw	0
  7059  002C88  1A35               	xorwf	(___flge@ff1+2)^0,f,c
  7060  002C8A  0E80               	movlw	128
  7061  002C8C  1A36               	xorwf	(___flge@ff1+3)^0,f,c
  7062  002C8E  0E00               	movlw	0
  7063  002C90  1A37               	xorwf	___flge@ff2^0,f,c
  7064  002C92  0E00               	movlw	0
  7065  002C94  1A38               	xorwf	(___flge@ff2+1)^0,f,c
  7066  002C96  0E00               	movlw	0
  7067  002C98  1A39               	xorwf	(___flge@ff2+2)^0,f,c
  7068  002C9A  0E80               	movlw	128
  7069  002C9C  1A3A               	xorwf	(___flge@ff2+3)^0,f,c
  7070  002C9E  5037               	movf	___flge@ff2^0,w,c
  7071  002CA0  5C33               	subwf	___flge@ff1^0,w,c
  7072  002CA2  5038               	movf	(___flge@ff2+1)^0,w,c
  7073  002CA4  5834               	subwfb	(___flge@ff1+1)^0,w,c
  7074  002CA6  5039               	movf	(___flge@ff2+2)^0,w,c
  7075  002CA8  5835               	subwfb	(___flge@ff1+2)^0,w,c
  7076  002CAA  503A               	movf	(___flge@ff2+3)^0,w,c
  7077  002CAC  5836               	subwfb	(___flge@ff1+3)^0,w,c
  7078  002CAE  B0D8               	btfsc	status,0,c
  7079  002CB0  EF5C  F016         	goto	u6751
  7080  002CB4  EF5E  F016         	goto	u6750
  7081  002CB8                     u6751:
  7082  002CB8  EF61  F016         	goto	l5062
  7083  002CBC                     u6750:
  7084  002CBC  90D8               	bcf	status,0,c
  7085  002CBE  EF62  F016         	goto	l618
  7086  002CC2                     l5062:
  7087  002CC2  80D8               	bsf	status,0,c
  7088  002CC4                     l618:
  7089  002CC4  0012               	return		;funcret
  7090  002CC6                     __end_of___flge:
  7091                           	opt callstack 0
  7092                           
  7093 ;; *************** function ___fleq *****************
  7094 ;; Defined at:
  7095 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
  7096 ;; Parameters:    Size  Location     Type
  7097 ;;  ff1             4   11[COMRAM] unsigned char 
  7098 ;;  ff2             4   15[COMRAM] unsigned char 
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;		None
  7101 ;; Return value:  Size  Location     Type
  7102 ;;		None               void
  7103 ;; Registers used:
  7104 ;;		wreg, status,2, status,0
  7105 ;; Tracked objects:
  7106 ;;		On entry : 0/0
  7107 ;;		On exit  : 0/0
  7108 ;;		Unchanged: 0/0
  7109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7110 ;;      Params:         8       0       0       0       0       0       0
  7111 ;;      Locals:         0       0       0       0       0       0       0
  7112 ;;      Temps:          4       0       0       0       0       0       0
  7113 ;;      Totals:        12       0       0       0       0       0       0
  7114 ;;Total ram usage:       12 bytes
  7115 ;; Hardware stack levels used:    1
  7116 ;; Hardware stack levels required when called:    4
  7117 ;; This function calls:
  7118 ;;		Nothing
  7119 ;; This function is called by:
  7120 ;;		_efgtoa
  7121 ;; This function uses a non-reentrant model
  7122 ;;
  7123                           
  7124                           	psect	text31
  7125  00330A                     __ptext31:
  7126                           	opt callstack 0
  7127  00330A                     ___fleq:
  7128                           	opt callstack 21
  7129  00330A  0E00               	movlw	0
  7130  00330C  140C               	andwf	___fleq@ff1^0,w,c
  7131  00330E  6E14               	movwf	??___fleq^0,c
  7132  003310  0E00               	movlw	0
  7133  003312  140D               	andwf	(___fleq@ff1+1)^0,w,c
  7134  003314  6E15               	movwf	(??___fleq+1)^0,c
  7135  003316  0E80               	movlw	128
  7136  003318  140E               	andwf	(___fleq@ff1+2)^0,w,c
  7137  00331A  6E16               	movwf	(??___fleq+2)^0,c
  7138  00331C  0E7F               	movlw	127
  7139  00331E  140F               	andwf	(___fleq@ff1+3)^0,w,c
  7140  003320  6E17               	movwf	(??___fleq+3)^0,c
  7141  003322  5014               	movf	??___fleq^0,w,c
  7142  003324  1015               	iorwf	(??___fleq+1)^0,w,c
  7143  003326  1016               	iorwf	(??___fleq+2)^0,w,c
  7144  003328  1017               	iorwf	(??___fleq+3)^0,w,c
  7145  00332A  A4D8               	btfss	status,2,c
  7146  00332C  EF9A  F019         	goto	u6681
  7147  003330  EF9C  F019         	goto	u6680
  7148  003334                     u6681:
  7149  003334  EFA4  F019         	goto	l5032
  7150  003338                     u6680:
  7151  003338  0E00               	movlw	0
  7152  00333A  6E0C               	movwf	___fleq@ff1^0,c
  7153  00333C  0E00               	movlw	0
  7154  00333E  6E0D               	movwf	(___fleq@ff1+1)^0,c
  7155  003340  0E00               	movlw	0
  7156  003342  6E0E               	movwf	(___fleq@ff1+2)^0,c
  7157  003344  0E00               	movlw	0
  7158  003346  6E0F               	movwf	(___fleq@ff1+3)^0,c
  7159  003348                     l5032:
  7160  003348  0E00               	movlw	0
  7161  00334A  1410               	andwf	___fleq@ff2^0,w,c
  7162  00334C  6E14               	movwf	??___fleq^0,c
  7163  00334E  0E00               	movlw	0
  7164  003350  1411               	andwf	(___fleq@ff2+1)^0,w,c
  7165  003352  6E15               	movwf	(??___fleq+1)^0,c
  7166  003354  0E80               	movlw	128
  7167  003356  1412               	andwf	(___fleq@ff2+2)^0,w,c
  7168  003358  6E16               	movwf	(??___fleq+2)^0,c
  7169  00335A  0E7F               	movlw	127
  7170  00335C  1413               	andwf	(___fleq@ff2+3)^0,w,c
  7171  00335E  6E17               	movwf	(??___fleq+3)^0,c
  7172  003360  5014               	movf	??___fleq^0,w,c
  7173  003362  1015               	iorwf	(??___fleq+1)^0,w,c
  7174  003364  1016               	iorwf	(??___fleq+2)^0,w,c
  7175  003366  1017               	iorwf	(??___fleq+3)^0,w,c
  7176  003368  A4D8               	btfss	status,2,c
  7177  00336A  EFB9  F019         	goto	u6691
  7178  00336E  EFBB  F019         	goto	u6690
  7179  003372                     u6691:
  7180  003372  EFC3  F019         	goto	l5036
  7181  003376                     u6690:
  7182  003376  0E00               	movlw	0
  7183  003378  6E10               	movwf	___fleq@ff2^0,c
  7184  00337A  0E00               	movlw	0
  7185  00337C  6E11               	movwf	(___fleq@ff2+1)^0,c
  7186  00337E  0E00               	movlw	0
  7187  003380  6E12               	movwf	(___fleq@ff2+2)^0,c
  7188  003382  0E00               	movlw	0
  7189  003384  6E13               	movwf	(___fleq@ff2+3)^0,c
  7190  003386                     l5036:
  7191  003386  5010               	movf	___fleq@ff2^0,w,c
  7192  003388  180C               	xorwf	___fleq@ff1^0,w,c
  7193  00338A  E10F               	bnz	u6700
  7194  00338C  5011               	movf	(___fleq@ff2+1)^0,w,c
  7195  00338E  180D               	xorwf	(___fleq@ff1+1)^0,w,c
  7196  003390  E10C               	bnz	u6700
  7197  003392  5012               	movf	(___fleq@ff2+2)^0,w,c
  7198  003394  180E               	xorwf	(___fleq@ff1+2)^0,w,c
  7199  003396  E109               	bnz	u6700
  7200  003398  5013               	movf	(___fleq@ff2+3)^0,w,c
  7201  00339A  180F               	xorwf	(___fleq@ff1+3)^0,w,c
  7202  00339C  B4D8               	btfsc	status,2,c
  7203  00339E  EFD3  F019         	goto	u6701
  7204  0033A2  EFD5  F019         	goto	u6700
  7205  0033A6                     u6701:
  7206  0033A6  EFD8  F019         	goto	l5040
  7207  0033AA                     u6700:
  7208  0033AA  90D8               	bcf	status,0,c
  7209  0033AC  EFD9  F019         	goto	l607
  7210  0033B0                     l5040:
  7211  0033B0  80D8               	bsf	status,0,c
  7212  0033B2                     l607:
  7213  0033B2  0012               	return		;funcret
  7214  0033B4                     __end_of___fleq:
  7215                           	opt callstack 0
  7216                           
  7217 ;; *************** function ___fldiv *****************
  7218 ;; Defined at:
  7219 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
  7220 ;; Parameters:    Size  Location     Type
  7221 ;;  b               4   11[COMRAM] unsigned char 
  7222 ;;  a               4   15[COMRAM] unsigned char 
  7223 ;; Auto vars:     Size  Location     Type
  7224 ;;  grs             4   30[COMRAM] unsigned long 
  7225 ;;  rem             4   23[COMRAM] unsigned long 
  7226 ;;  new_exp         2   28[COMRAM] short 
  7227 ;;  aexp            1   35[COMRAM] unsigned char 
  7228 ;;  bexp            1   34[COMRAM] unsigned char 
  7229 ;;  sign            1   27[COMRAM] unsigned char 
  7230 ;; Return value:  Size  Location     Type
  7231 ;;                  4   11[COMRAM] unsigned char 
  7232 ;; Registers used:
  7233 ;;		wreg, status,2, status,0
  7234 ;; Tracked objects:
  7235 ;;		On entry : 0/0
  7236 ;;		On exit  : 0/0
  7237 ;;		Unchanged: 0/0
  7238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7239 ;;      Params:         8       0       0       0       0       0       0
  7240 ;;      Locals:        13       0       0       0       0       0       0
  7241 ;;      Temps:          4       0       0       0       0       0       0
  7242 ;;      Totals:        25       0       0       0       0       0       0
  7243 ;;Total ram usage:       25 bytes
  7244 ;; Hardware stack levels used:    1
  7245 ;; Hardware stack levels required when called:    4
  7246 ;; This function calls:
  7247 ;;		Nothing
  7248 ;; This function is called by:
  7249 ;;		_efgtoa
  7250 ;; This function uses a non-reentrant model
  7251 ;;
  7252                           
  7253                           	psect	text32
  7254  001F36                     __ptext32:
  7255                           	opt callstack 0
  7256  001F36                     ___fldiv:
  7257                           	opt callstack 21
  7258  001F36  500F               	movf	(___fldiv@b+3)^0,w,c
  7259  001F38  0B80               	andlw	128
  7260  001F3A  6E1C               	movwf	___fldiv@sign^0,c
  7261  001F3C  500F               	movf	(___fldiv@b+3)^0,w,c
  7262  001F3E  240F               	addwf	(___fldiv@b+3)^0,w,c
  7263  001F40  6E23               	movwf	___fldiv@bexp^0,c
  7264  001F42  AE0E               	btfss	(___fldiv@b+2)^0,7,c
  7265  001F44  EFA6  F00F         	goto	u6141
  7266  001F48  EFA8  F00F         	goto	u6140
  7267  001F4C                     u6141:
  7268  001F4C  EFA9  F00F         	goto	l4680
  7269  001F50                     u6140:
  7270  001F50  8023               	bsf	___fldiv@bexp^0,0,c
  7271  001F52                     l4680:
  7272  001F52  5023               	movf	___fldiv@bexp^0,w,c
  7273  001F54  B4D8               	btfsc	status,2,c
  7274  001F56  EFAF  F00F         	goto	u6151
  7275  001F5A  EFB1  F00F         	goto	u6150
  7276  001F5E                     u6151:
  7277  001F5E  EFC6  F00F         	goto	l4690
  7278  001F62                     u6150:
  7279  001F62  2823               	incf	___fldiv@bexp^0,w,c
  7280  001F64  A4D8               	btfss	status,2,c
  7281  001F66  EFB7  F00F         	goto	u6161
  7282  001F6A  EFB9  F00F         	goto	u6160
  7283  001F6E                     u6161:
  7284  001F6E  EFC1  F00F         	goto	l4686
  7285  001F72                     u6160:
  7286  001F72  0E00               	movlw	0
  7287  001F74  6E0C               	movwf	___fldiv@b^0,c
  7288  001F76  0E00               	movlw	0
  7289  001F78  6E0D               	movwf	(___fldiv@b+1)^0,c
  7290  001F7A  0E00               	movlw	0
  7291  001F7C  6E0E               	movwf	(___fldiv@b+2)^0,c
  7292  001F7E  0E00               	movlw	0
  7293  001F80  6E0F               	movwf	(___fldiv@b+3)^0,c
  7294  001F82                     l4686:
  7295  001F82  8E0E               	bsf	(___fldiv@b+2)^0,7,c
  7296  001F84  0E00               	movlw	0
  7297  001F86  6E0F               	movwf	(___fldiv@b+3)^0,c
  7298  001F88  EFCE  F00F         	goto	l4692
  7299  001F8C                     l4690:
  7300  001F8C  0E00               	movlw	0
  7301  001F8E  6E0C               	movwf	___fldiv@b^0,c
  7302  001F90  0E00               	movlw	0
  7303  001F92  6E0D               	movwf	(___fldiv@b+1)^0,c
  7304  001F94  0E00               	movlw	0
  7305  001F96  6E0E               	movwf	(___fldiv@b+2)^0,c
  7306  001F98  0E00               	movlw	0
  7307  001F9A  6E0F               	movwf	(___fldiv@b+3)^0,c
  7308  001F9C                     l4692:
  7309  001F9C  5013               	movf	(___fldiv@a+3)^0,w,c
  7310  001F9E  0B80               	andlw	128
  7311  001FA0  1A1C               	xorwf	___fldiv@sign^0,f,c
  7312  001FA2  5013               	movf	(___fldiv@a+3)^0,w,c
  7313  001FA4  2413               	addwf	(___fldiv@a+3)^0,w,c
  7314  001FA6  6E24               	movwf	___fldiv@aexp^0,c
  7315  001FA8  AE12               	btfss	(___fldiv@a+2)^0,7,c
  7316  001FAA  EFD9  F00F         	goto	u6171
  7317  001FAE  EFDB  F00F         	goto	u6170
  7318  001FB2                     u6171:
  7319  001FB2  EFDC  F00F         	goto	l4700
  7320  001FB6                     u6170:
  7321  001FB6  8024               	bsf	___fldiv@aexp^0,0,c
  7322  001FB8                     l4700:
  7323  001FB8  5024               	movf	___fldiv@aexp^0,w,c
  7324  001FBA  B4D8               	btfsc	status,2,c
  7325  001FBC  EFE2  F00F         	goto	u6181
  7326  001FC0  EFE4  F00F         	goto	u6180
  7327  001FC4                     u6181:
  7328  001FC4  EFF9  F00F         	goto	l4710
  7329  001FC8                     u6180:
  7330  001FC8  2824               	incf	___fldiv@aexp^0,w,c
  7331  001FCA  A4D8               	btfss	status,2,c
  7332  001FCC  EFEA  F00F         	goto	u6191
  7333  001FD0  EFEC  F00F         	goto	u6190
  7334  001FD4                     u6191:
  7335  001FD4  EFF4  F00F         	goto	l4706
  7336  001FD8                     u6190:
  7337  001FD8  0E00               	movlw	0
  7338  001FDA  6E10               	movwf	___fldiv@a^0,c
  7339  001FDC  0E00               	movlw	0
  7340  001FDE  6E11               	movwf	(___fldiv@a+1)^0,c
  7341  001FE0  0E00               	movlw	0
  7342  001FE2  6E12               	movwf	(___fldiv@a+2)^0,c
  7343  001FE4  0E00               	movlw	0
  7344  001FE6  6E13               	movwf	(___fldiv@a+3)^0,c
  7345  001FE8                     l4706:
  7346  001FE8  8E12               	bsf	(___fldiv@a+2)^0,7,c
  7347  001FEA  0E00               	movlw	0
  7348  001FEC  6E13               	movwf	(___fldiv@a+3)^0,c
  7349  001FEE  EF01  F010         	goto	l4712
  7350  001FF2                     l4710:
  7351  001FF2  0E00               	movlw	0
  7352  001FF4  6E10               	movwf	___fldiv@a^0,c
  7353  001FF6  0E00               	movlw	0
  7354  001FF8  6E11               	movwf	(___fldiv@a+1)^0,c
  7355  001FFA  0E00               	movlw	0
  7356  001FFC  6E12               	movwf	(___fldiv@a+2)^0,c
  7357  001FFE  0E00               	movlw	0
  7358  002000  6E13               	movwf	(___fldiv@a+3)^0,c
  7359  002002                     l4712:
  7360  002002  5010               	movf	___fldiv@a^0,w,c
  7361  002004  1011               	iorwf	(___fldiv@a+1)^0,w,c
  7362  002006  1012               	iorwf	(___fldiv@a+2)^0,w,c
  7363  002008  1013               	iorwf	(___fldiv@a+3)^0,w,c
  7364  00200A  A4D8               	btfss	status,2,c
  7365  00200C  EF0A  F010         	goto	u6201
  7366  002010  EF0C  F010         	goto	u6200
  7367  002014                     u6201:
  7368  002014  EF24  F010         	goto	l4724
  7369  002018                     u6200:
  7370  002018  0E00               	movlw	0
  7371  00201A  6E0C               	movwf	___fldiv@b^0,c
  7372  00201C  0E00               	movlw	0
  7373  00201E  6E0D               	movwf	(___fldiv@b+1)^0,c
  7374  002020  0E00               	movlw	0
  7375  002022  6E0E               	movwf	(___fldiv@b+2)^0,c
  7376  002024  0E00               	movlw	0
  7377  002026  6E0F               	movwf	(___fldiv@b+3)^0,c
  7378  002028  0E80               	movlw	128
  7379  00202A  120E               	iorwf	(___fldiv@b+2)^0,f,c
  7380  00202C  0E7F               	movlw	127
  7381  00202E  120F               	iorwf	(___fldiv@b+3)^0,f,c
  7382  002030                     l4718:
  7383  002030  501C               	movf	___fldiv@sign^0,w,c
  7384  002032  120F               	iorwf	(___fldiv@b+3)^0,f,c
  7385  002034  C00C  F00C         	movff	___fldiv@b,?___fldiv
  7386  002038  C00D  F00D         	movff	___fldiv@b+1,?___fldiv+1
  7387  00203C  C00E  F00E         	movff	___fldiv@b+2,?___fldiv+2
  7388  002040  C00F  F00F         	movff	___fldiv@b+3,?___fldiv+3
  7389  002044  EF67  F011         	goto	l930
  7390  002048                     l4724:
  7391  002048  5023               	movf	___fldiv@bexp^0,w,c
  7392  00204A  A4D8               	btfss	status,2,c
  7393  00204C  EF2A  F010         	goto	u6211
  7394  002050  EF2C  F010         	goto	u6210
  7395  002054                     u6211:
  7396  002054  EF36  F010         	goto	l4732
  7397  002058                     u6210:
  7398  002058  0E00               	movlw	0
  7399  00205A  6E0C               	movwf	?___fldiv^0,c
  7400  00205C  0E00               	movlw	0
  7401  00205E  6E0D               	movwf	(?___fldiv+1)^0,c
  7402  002060  0E00               	movlw	0
  7403  002062  6E0E               	movwf	(?___fldiv+2)^0,c
  7404  002064  0E00               	movlw	0
  7405  002066  6E0F               	movwf	(?___fldiv+3)^0,c
  7406  002068  EF67  F011         	goto	l930
  7407  00206C                     l4732:
  7408  00206C  5024               	movf	___fldiv@aexp^0,w,c
  7409  00206E  C023  F014         	movff	___fldiv@bexp,??___fldiv
  7410  002072  6A15               	clrf	(??___fldiv+1)^0,c
  7411  002074  5E14               	subwf	??___fldiv^0,f,c
  7412  002076  0E00               	movlw	0
  7413  002078  5A15               	subwfb	(??___fldiv+1)^0,f,c
  7414  00207A  0E7F               	movlw	127
  7415  00207C  2414               	addwf	??___fldiv^0,w,c
  7416  00207E  6E1D               	movwf	___fldiv@new_exp^0,c
  7417  002080  0E00               	movlw	0
  7418  002082  2015               	addwfc	(??___fldiv+1)^0,w,c
  7419  002084  6E1E               	movwf	(___fldiv@new_exp+1)^0,c
  7420  002086  C00C  F018         	movff	___fldiv@b,___fldiv@rem
  7421  00208A  C00D  F019         	movff	___fldiv@b+1,___fldiv@rem+1
  7422  00208E  C00E  F01A         	movff	___fldiv@b+2,___fldiv@rem+2
  7423  002092  C00F  F01B         	movff	___fldiv@b+3,___fldiv@rem+3
  7424  002096  0E00               	movlw	0
  7425  002098  6E0C               	movwf	___fldiv@b^0,c
  7426  00209A  0E00               	movlw	0
  7427  00209C  6E0D               	movwf	(___fldiv@b+1)^0,c
  7428  00209E  0E00               	movlw	0
  7429  0020A0  6E0E               	movwf	(___fldiv@b+2)^0,c
  7430  0020A2  0E00               	movlw	0
  7431  0020A4  6E0F               	movwf	(___fldiv@b+3)^0,c
  7432  0020A6  0E00               	movlw	0
  7433  0020A8  6E1F               	movwf	___fldiv@grs^0,c
  7434  0020AA  0E00               	movlw	0
  7435  0020AC  6E20               	movwf	(___fldiv@grs+1)^0,c
  7436  0020AE  0E00               	movlw	0
  7437  0020B0  6E21               	movwf	(___fldiv@grs+2)^0,c
  7438  0020B2  0E00               	movlw	0
  7439  0020B4  6E22               	movwf	(___fldiv@grs+3)^0,c
  7440  0020B6  0E00               	movlw	0
  7441  0020B8  6E24               	movwf	___fldiv@aexp^0,c
  7442  0020BA  EF97  F010         	goto	l932
  7443  0020BE                     l4742:
  7444  0020BE  5024               	movf	___fldiv@aexp^0,w,c
  7445  0020C0  B4D8               	btfsc	status,2,c
  7446  0020C2  EF65  F010         	goto	u6221
  7447  0020C6  EF67  F010         	goto	u6220
  7448  0020CA                     u6221:
  7449  0020CA  EF7E  F010         	goto	l4750
  7450  0020CE                     u6220:
  7451  0020CE  90D8               	bcf	status,0,c
  7452  0020D0  3618               	rlcf	___fldiv@rem^0,f,c
  7453  0020D2  3619               	rlcf	(___fldiv@rem+1)^0,f,c
  7454  0020D4  361A               	rlcf	(___fldiv@rem+2)^0,f,c
  7455  0020D6  361B               	rlcf	(___fldiv@rem+3)^0,f,c
  7456  0020D8  90D8               	bcf	status,0,c
  7457  0020DA  360C               	rlcf	___fldiv@b^0,f,c
  7458  0020DC  360D               	rlcf	(___fldiv@b+1)^0,f,c
  7459  0020DE  360E               	rlcf	(___fldiv@b+2)^0,f,c
  7460  0020E0  360F               	rlcf	(___fldiv@b+3)^0,f,c
  7461  0020E2  AE22               	btfss	(___fldiv@grs+3)^0,7,c
  7462  0020E4  EF76  F010         	goto	u6231
  7463  0020E8  EF78  F010         	goto	u6230
  7464  0020EC                     u6231:
  7465  0020EC  EF79  F010         	goto	l935
  7466  0020F0                     u6230:
  7467  0020F0  800C               	bsf	___fldiv@b^0,0,c
  7468  0020F2                     l935:
  7469  0020F2  90D8               	bcf	status,0,c
  7470  0020F4  361F               	rlcf	___fldiv@grs^0,f,c
  7471  0020F6  3620               	rlcf	(___fldiv@grs+1)^0,f,c
  7472  0020F8  3621               	rlcf	(___fldiv@grs+2)^0,f,c
  7473  0020FA  3622               	rlcf	(___fldiv@grs+3)^0,f,c
  7474  0020FC                     l4750:
  7475  0020FC  5010               	movf	___fldiv@a^0,w,c
  7476  0020FE  5C18               	subwf	___fldiv@rem^0,w,c
  7477  002100  5011               	movf	(___fldiv@a+1)^0,w,c
  7478  002102  5819               	subwfb	(___fldiv@rem+1)^0,w,c
  7479  002104  5012               	movf	(___fldiv@a+2)^0,w,c
  7480  002106  581A               	subwfb	(___fldiv@rem+2)^0,w,c
  7481  002108  5013               	movf	(___fldiv@a+3)^0,w,c
  7482  00210A  581B               	subwfb	(___fldiv@rem+3)^0,w,c
  7483  00210C  A0D8               	btfss	status,0,c
  7484  00210E  EF8B  F010         	goto	u6241
  7485  002112  EF8D  F010         	goto	u6240
  7486  002116                     u6241:
  7487  002116  EF96  F010         	goto	l4756
  7488  00211A                     u6240:
  7489  00211A  8C22               	bsf	(___fldiv@grs+3)^0,6,c
  7490  00211C  5010               	movf	___fldiv@a^0,w,c
  7491  00211E  5E18               	subwf	___fldiv@rem^0,f,c
  7492  002120  5011               	movf	(___fldiv@a+1)^0,w,c
  7493  002122  5A19               	subwfb	(___fldiv@rem+1)^0,f,c
  7494  002124  5012               	movf	(___fldiv@a+2)^0,w,c
  7495  002126  5A1A               	subwfb	(___fldiv@rem+2)^0,f,c
  7496  002128  5013               	movf	(___fldiv@a+3)^0,w,c
  7497  00212A  5A1B               	subwfb	(___fldiv@rem+3)^0,f,c
  7498  00212C                     l4756:
  7499  00212C  2A24               	incf	___fldiv@aexp^0,f,c
  7500  00212E                     l932:
  7501  00212E  0E19               	movlw	25
  7502  002130  6424               	cpfsgt	___fldiv@aexp^0,c
  7503  002132  EF9D  F010         	goto	u6251
  7504  002136  EF9F  F010         	goto	u6250
  7505  00213A                     u6251:
  7506  00213A  EF5F  F010         	goto	l4742
  7507  00213E                     u6250:
  7508  00213E  5018               	movf	___fldiv@rem^0,w,c
  7509  002140  1019               	iorwf	(___fldiv@rem+1)^0,w,c
  7510  002142  101A               	iorwf	(___fldiv@rem+2)^0,w,c
  7511  002144  101B               	iorwf	(___fldiv@rem+3)^0,w,c
  7512  002146  B4D8               	btfsc	status,2,c
  7513  002148  EFA8  F010         	goto	u6261
  7514  00214C  EFAA  F010         	goto	u6260
  7515  002150                     u6261:
  7516  002150  EFC2  F010         	goto	l4768
  7517  002154                     u6260:
  7518  002154  801F               	bsf	___fldiv@grs^0,0,c
  7519  002156  EFC2  F010         	goto	l4768
  7520  00215A                     l4762:
  7521  00215A  90D8               	bcf	status,0,c
  7522  00215C  360C               	rlcf	___fldiv@b^0,f,c
  7523  00215E  360D               	rlcf	(___fldiv@b+1)^0,f,c
  7524  002160  360E               	rlcf	(___fldiv@b+2)^0,f,c
  7525  002162  360F               	rlcf	(___fldiv@b+3)^0,f,c
  7526  002164  AE22               	btfss	(___fldiv@grs+3)^0,7,c
  7527  002166  EFB7  F010         	goto	u6271
  7528  00216A  EFB9  F010         	goto	u6270
  7529  00216E                     u6271:
  7530  00216E  EFBA  F010         	goto	l941
  7531  002172                     u6270:
  7532  002172  800C               	bsf	___fldiv@b^0,0,c
  7533  002174                     l941:
  7534  002174  90D8               	bcf	status,0,c
  7535  002176  361F               	rlcf	___fldiv@grs^0,f,c
  7536  002178  3620               	rlcf	(___fldiv@grs+1)^0,f,c
  7537  00217A  3621               	rlcf	(___fldiv@grs+2)^0,f,c
  7538  00217C  3622               	rlcf	(___fldiv@grs+3)^0,f,c
  7539  00217E  061D               	decf	___fldiv@new_exp^0,f,c
  7540  002180  A0D8               	btfss	status,0,c
  7541  002182  061E               	decf	(___fldiv@new_exp+1)^0,f,c
  7542  002184                     l4768:
  7543  002184  AE0E               	btfss	(___fldiv@b+2)^0,7,c
  7544  002186  EFC7  F010         	goto	u6281
  7545  00218A  EFC9  F010         	goto	u6280
  7546  00218E                     u6281:
  7547  00218E  EFAD  F010         	goto	l4762
  7548  002192                     u6280:
  7549  002192  0E00               	movlw	0
  7550  002194  6E24               	movwf	___fldiv@aexp^0,c
  7551  002196  AE22               	btfss	(___fldiv@grs+3)^0,7,c
  7552  002198  EFD0  F010         	goto	u6291
  7553  00219C  EFD2  F010         	goto	u6290
  7554  0021A0                     u6291:
  7555  0021A0  EFF6  F010         	goto	l943
  7556  0021A4                     u6290:
  7557  0021A4  0EFF               	movlw	255
  7558  0021A6  141F               	andwf	___fldiv@grs^0,w,c
  7559  0021A8  6E14               	movwf	??___fldiv^0,c
  7560  0021AA  0EFF               	movlw	255
  7561  0021AC  1420               	andwf	(___fldiv@grs+1)^0,w,c
  7562  0021AE  6E15               	movwf	(??___fldiv+1)^0,c
  7563  0021B0  0EFF               	movlw	255
  7564  0021B2  1421               	andwf	(___fldiv@grs+2)^0,w,c
  7565  0021B4  6E16               	movwf	(??___fldiv+2)^0,c
  7566  0021B6  0E7F               	movlw	127
  7567  0021B8  1422               	andwf	(___fldiv@grs+3)^0,w,c
  7568  0021BA  6E17               	movwf	(??___fldiv+3)^0,c
  7569  0021BC  5014               	movf	??___fldiv^0,w,c
  7570  0021BE  1015               	iorwf	(??___fldiv+1)^0,w,c
  7571  0021C0  1016               	iorwf	(??___fldiv+2)^0,w,c
  7572  0021C2  1017               	iorwf	(??___fldiv+3)^0,w,c
  7573  0021C4  B4D8               	btfsc	status,2,c
  7574  0021C6  EFE7  F010         	goto	u6301
  7575  0021CA  EFE9  F010         	goto	u6300
  7576  0021CE                     u6301:
  7577  0021CE  EFED  F010         	goto	l944
  7578  0021D2                     u6300:
  7579  0021D2                     l4776:
  7580  0021D2  0E01               	movlw	1
  7581  0021D4  6E24               	movwf	___fldiv@aexp^0,c
  7582  0021D6  EFF6  F010         	goto	l943
  7583  0021DA                     l944:
  7584  0021DA  A00C               	btfss	___fldiv@b^0,0,c
  7585  0021DC  EFF2  F010         	goto	u6311
  7586  0021E0  EFF4  F010         	goto	u6310
  7587  0021E4                     u6311:
  7588  0021E4  EFF6  F010         	goto	l943
  7589  0021E8                     u6310:
  7590  0021E8  EFE9  F010         	goto	l4776
  7591  0021EC                     l943:
  7592  0021EC  5024               	movf	___fldiv@aexp^0,w,c
  7593  0021EE  B4D8               	btfsc	status,2,c
  7594  0021F0  EFFC  F010         	goto	u6321
  7595  0021F4  EFFE  F010         	goto	u6320
  7596  0021F8                     u6321:
  7597  0021F8  EF22  F011         	goto	l4788
  7598  0021FC                     u6320:
  7599  0021FC  0E01               	movlw	1
  7600  0021FE  260C               	addwf	___fldiv@b^0,f,c
  7601  002200  0E00               	movlw	0
  7602  002202  220D               	addwfc	(___fldiv@b+1)^0,f,c
  7603  002204  220E               	addwfc	(___fldiv@b+2)^0,f,c
  7604  002206  220F               	addwfc	(___fldiv@b+3)^0,f,c
  7605  002208  A00F               	btfss	(___fldiv@b+3)^0,0,c
  7606  00220A  EF09  F011         	goto	u6331
  7607  00220E  EF0B  F011         	goto	u6330
  7608  002212                     u6331:
  7609  002212  EF22  F011         	goto	l4788
  7610  002216                     u6330:
  7611  002216  C00C  F014         	movff	___fldiv@b,??___fldiv
  7612  00221A  C00D  F015         	movff	___fldiv@b+1,??___fldiv+1
  7613  00221E  C00E  F016         	movff	___fldiv@b+2,??___fldiv+2
  7614  002222  C00F  F017         	movff	___fldiv@b+3,??___fldiv+3
  7615  002226  3417               	rlcf	(??___fldiv+3)^0,w,c
  7616  002228  3217               	rrcf	(??___fldiv+3)^0,f,c
  7617  00222A  3216               	rrcf	(??___fldiv+2)^0,f,c
  7618  00222C  3215               	rrcf	(??___fldiv+1)^0,f,c
  7619  00222E  3214               	rrcf	??___fldiv^0,f,c
  7620  002230  C014  F00C         	movff	??___fldiv,___fldiv@b
  7621  002234  C015  F00D         	movff	??___fldiv+1,___fldiv@b+1
  7622  002238  C016  F00E         	movff	??___fldiv+2,___fldiv@b+2
  7623  00223C  C017  F00F         	movff	??___fldiv+3,___fldiv@b+3
  7624  002240  4A1D               	infsnz	___fldiv@new_exp^0,f,c
  7625  002242  2A1E               	incf	(___fldiv@new_exp+1)^0,f,c
  7626  002244                     l4788:
  7627  002244  BE1E               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7628  002246  EF2D  F011         	goto	u6341
  7629  00224A  501E               	movf	(___fldiv@new_exp+1)^0,w,c
  7630  00224C  E108               	bnz	u6340
  7631  00224E  281D               	incf	___fldiv@new_exp^0,w,c
  7632  002250  A0D8               	btfss	status,0,c
  7633  002252  EF2D  F011         	goto	u6341
  7634  002256  EF2F  F011         	goto	u6340
  7635  00225A                     u6341:
  7636  00225A  EF3A  F011         	goto	l4792
  7637  00225E                     u6340:
  7638  00225E  0E00               	movlw	0
  7639  002260  6E1E               	movwf	(___fldiv@new_exp+1)^0,c
  7640  002262  681D               	setf	___fldiv@new_exp^0,c
  7641  002264  0E00               	movlw	0
  7642  002266  6E0C               	movwf	___fldiv@b^0,c
  7643  002268  0E00               	movlw	0
  7644  00226A  6E0D               	movwf	(___fldiv@b+1)^0,c
  7645  00226C  0E00               	movlw	0
  7646  00226E  6E0E               	movwf	(___fldiv@b+2)^0,c
  7647  002270  0E00               	movlw	0
  7648  002272  6E0F               	movwf	(___fldiv@b+3)^0,c
  7649  002274                     l4792:
  7650  002274  BE1E               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7651  002276  EF47  F011         	goto	u6350
  7652  00227A  501E               	movf	(___fldiv@new_exp+1)^0,w,c
  7653  00227C  E106               	bnz	u6351
  7654  00227E  041D               	decf	___fldiv@new_exp^0,w,c
  7655  002280  B0D8               	btfsc	status,0,c
  7656  002282  EF45  F011         	goto	u6351
  7657  002286  EF47  F011         	goto	u6350
  7658  00228A                     u6351:
  7659  00228A  EF55  F011         	goto	l4796
  7660  00228E                     u6350:
  7661  00228E  0E00               	movlw	0
  7662  002290  6E1E               	movwf	(___fldiv@new_exp+1)^0,c
  7663  002292  0E00               	movlw	0
  7664  002294  6E1D               	movwf	___fldiv@new_exp^0,c
  7665  002296  0E00               	movlw	0
  7666  002298  6E0C               	movwf	___fldiv@b^0,c
  7667  00229A  0E00               	movlw	0
  7668  00229C  6E0D               	movwf	(___fldiv@b+1)^0,c
  7669  00229E  0E00               	movlw	0
  7670  0022A0  6E0E               	movwf	(___fldiv@b+2)^0,c
  7671  0022A2  0E00               	movlw	0
  7672  0022A4  6E0F               	movwf	(___fldiv@b+3)^0,c
  7673  0022A6  0E00               	movlw	0
  7674  0022A8  6E1C               	movwf	___fldiv@sign^0,c
  7675  0022AA                     l4796:
  7676  0022AA  C01D  F023         	movff	___fldiv@new_exp,___fldiv@bexp
  7677  0022AE  A023               	btfss	___fldiv@bexp^0,0,c
  7678  0022B0  EF5C  F011         	goto	u6361
  7679  0022B4  EF5E  F011         	goto	u6360
  7680  0022B8                     u6361:
  7681  0022B8  EF61  F011         	goto	l4802
  7682  0022BC                     u6360:
  7683  0022BC  8E0E               	bsf	(___fldiv@b+2)^0,7,c
  7684  0022BE  EF62  F011         	goto	l4804
  7685  0022C2                     l4802:
  7686  0022C2  9E0E               	bcf	(___fldiv@b+2)^0,7,c
  7687  0022C4                     l4804:
  7688  0022C4  90D8               	bcf	status,0,c
  7689  0022C6  3023               	rrcf	___fldiv@bexp^0,w,c
  7690  0022C8  6E0F               	movwf	(___fldiv@b+3)^0,c
  7691  0022CA  EF18  F010         	goto	l4718
  7692  0022CE                     l930:
  7693  0022CE  0012               	return		;funcret
  7694  0022D0                     __end_of___fldiv:
  7695                           	opt callstack 0
  7696                           
  7697 ;; *************** function ___awmod *****************
  7698 ;; Defined at:
  7699 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  dividend        2   11[COMRAM] int 
  7702 ;;  divisor         2   13[COMRAM] int 
  7703 ;; Auto vars:     Size  Location     Type
  7704 ;;  sign            1   16[COMRAM] unsigned char 
  7705 ;;  counter         1   15[COMRAM] unsigned char 
  7706 ;; Return value:  Size  Location     Type
  7707 ;;                  2   11[COMRAM] int 
  7708 ;; Registers used:
  7709 ;;		wreg, status,2, status,0
  7710 ;; Tracked objects:
  7711 ;;		On entry : 0/0
  7712 ;;		On exit  : 0/0
  7713 ;;		Unchanged: 0/0
  7714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7715 ;;      Params:         4       0       0       0       0       0       0
  7716 ;;      Locals:         2       0       0       0       0       0       0
  7717 ;;      Temps:          0       0       0       0       0       0       0
  7718 ;;      Totals:         6       0       0       0       0       0       0
  7719 ;;Total ram usage:        6 bytes
  7720 ;; Hardware stack levels used:    1
  7721 ;; Hardware stack levels required when called:    4
  7722 ;; This function calls:
  7723 ;;		Nothing
  7724 ;; This function is called by:
  7725 ;;		_efgtoa
  7726 ;; This function uses a non-reentrant model
  7727 ;;
  7728                           
  7729                           	psect	text33
  7730  0031AA                     __ptext33:
  7731                           	opt callstack 0
  7732  0031AA                     ___awmod:
  7733                           	opt callstack 21
  7734  0031AA  0E00               	movlw	0
  7735  0031AC  6E11               	movwf	___awmod@sign^0,c
  7736  0031AE  BE0D               	btfsc	(___awmod@dividend+1)^0,7,c
  7737  0031B0  EFDE  F018         	goto	u6620
  7738  0031B4  EFDC  F018         	goto	u6621
  7739  0031B8                     u6621:
  7740  0031B8  EFE4  F018         	goto	l5000
  7741  0031BC                     u6620:
  7742  0031BC  6C0C               	negf	___awmod@dividend^0,c
  7743  0031BE  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  7744  0031C0  B0D8               	btfsc	status,0,c
  7745  0031C2  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  7746  0031C4  0E01               	movlw	1
  7747  0031C6  6E11               	movwf	___awmod@sign^0,c
  7748  0031C8                     l5000:
  7749  0031C8  BE0F               	btfsc	(___awmod@divisor+1)^0,7,c
  7750  0031CA  EFEB  F018         	goto	u6630
  7751  0031CE  EFE9  F018         	goto	u6631
  7752  0031D2                     u6631:
  7753  0031D2  EFEF  F018         	goto	l5004
  7754  0031D6                     u6630:
  7755  0031D6  6C0E               	negf	___awmod@divisor^0,c
  7756  0031D8  1E0F               	comf	(___awmod@divisor+1)^0,f,c
  7757  0031DA  B0D8               	btfsc	status,0,c
  7758  0031DC  2A0F               	incf	(___awmod@divisor+1)^0,f,c
  7759  0031DE                     l5004:
  7760  0031DE  500E               	movf	___awmod@divisor^0,w,c
  7761  0031E0  100F               	iorwf	(___awmod@divisor+1)^0,w,c
  7762  0031E2  B4D8               	btfsc	status,2,c
  7763  0031E4  EFF6  F018         	goto	u6641
  7764  0031E8  EFF8  F018         	goto	u6640
  7765  0031EC                     u6641:
  7766  0031EC  EF1C  F019         	goto	l5020
  7767  0031F0                     u6640:
  7768  0031F0  0E01               	movlw	1
  7769  0031F2  6E10               	movwf	___awmod@counter^0,c
  7770  0031F4  EF00  F019         	goto	l5010
  7771  0031F8                     l5008:
  7772  0031F8  90D8               	bcf	status,0,c
  7773  0031FA  360E               	rlcf	___awmod@divisor^0,f,c
  7774  0031FC  360F               	rlcf	(___awmod@divisor+1)^0,f,c
  7775  0031FE  2A10               	incf	___awmod@counter^0,f,c
  7776  003200                     l5010:
  7777  003200  AE0F               	btfss	(___awmod@divisor+1)^0,7,c
  7778  003202  EF05  F019         	goto	u6651
  7779  003206  EF07  F019         	goto	u6650
  7780  00320A                     u6651:
  7781  00320A  EFFC  F018         	goto	l5008
  7782  00320E                     u6650:
  7783  00320E                     l5012:
  7784  00320E  500E               	movf	___awmod@divisor^0,w,c
  7785  003210  5C0C               	subwf	___awmod@dividend^0,w,c
  7786  003212  500F               	movf	(___awmod@divisor+1)^0,w,c
  7787  003214  580D               	subwfb	(___awmod@dividend+1)^0,w,c
  7788  003216  A0D8               	btfss	status,0,c
  7789  003218  EF10  F019         	goto	u6661
  7790  00321C  EF12  F019         	goto	u6660
  7791  003220                     u6661:
  7792  003220  EF16  F019         	goto	l5016
  7793  003224                     u6660:
  7794  003224  500E               	movf	___awmod@divisor^0,w,c
  7795  003226  5E0C               	subwf	___awmod@dividend^0,f,c
  7796  003228  500F               	movf	(___awmod@divisor+1)^0,w,c
  7797  00322A  5A0D               	subwfb	(___awmod@dividend+1)^0,f,c
  7798  00322C                     l5016:
  7799  00322C  90D8               	bcf	status,0,c
  7800  00322E  320F               	rrcf	(___awmod@divisor+1)^0,f,c
  7801  003230  320E               	rrcf	___awmod@divisor^0,f,c
  7802  003232  2E10               	decfsz	___awmod@counter^0,f,c
  7803  003234  EF07  F019         	goto	l5012
  7804  003238                     l5020:
  7805  003238  5011               	movf	___awmod@sign^0,w,c
  7806  00323A  B4D8               	btfsc	status,2,c
  7807  00323C  EF22  F019         	goto	u6671
  7808  003240  EF24  F019         	goto	u6670
  7809  003244                     u6671:
  7810  003244  EF28  F019         	goto	l5024
  7811  003248                     u6670:
  7812  003248  6C0C               	negf	___awmod@dividend^0,c
  7813  00324A  1E0D               	comf	(___awmod@dividend+1)^0,f,c
  7814  00324C  B0D8               	btfsc	status,0,c
  7815  00324E  2A0D               	incf	(___awmod@dividend+1)^0,f,c
  7816  003250                     l5024:
  7817  003250  C00C  F00C         	movff	___awmod@dividend,?___awmod
  7818  003254  C00D  F00D         	movff	___awmod@dividend+1,?___awmod+1
  7819  003258  0012               	return		;funcret
  7820  00325A                     __end_of___awmod:
  7821                           	opt callstack 0
  7822                           
  7823 ;; *************** function ___awdiv *****************
  7824 ;; Defined at:
  7825 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
  7826 ;; Parameters:    Size  Location     Type
  7827 ;;  dividend        2   11[COMRAM] int 
  7828 ;;  divisor         2   13[COMRAM] int 
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  quotient        2   17[COMRAM] int 
  7831 ;;  sign            1   16[COMRAM] unsigned char 
  7832 ;;  counter         1   15[COMRAM] unsigned char 
  7833 ;; Return value:  Size  Location     Type
  7834 ;;                  2   11[COMRAM] int 
  7835 ;; Registers used:
  7836 ;;		wreg, status,2, status,0
  7837 ;; Tracked objects:
  7838 ;;		On entry : 0/0
  7839 ;;		On exit  : 0/0
  7840 ;;		Unchanged: 0/0
  7841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7842 ;;      Params:         4       0       0       0       0       0       0
  7843 ;;      Locals:         4       0       0       0       0       0       0
  7844 ;;      Temps:          0       0       0       0       0       0       0
  7845 ;;      Totals:         8       0       0       0       0       0       0
  7846 ;;Total ram usage:        8 bytes
  7847 ;; Hardware stack levels used:    1
  7848 ;; Hardware stack levels required when called:    4
  7849 ;; This function calls:
  7850 ;;		Nothing
  7851 ;; This function is called by:
  7852 ;;		_efgtoa
  7853 ;; This function uses a non-reentrant model
  7854 ;;
  7855                           
  7856                           	psect	text34
  7857  002F64                     __ptext34:
  7858                           	opt callstack 0
  7859  002F64                     ___awdiv:
  7860                           	opt callstack 21
  7861  002F64  0E00               	movlw	0
  7862  002F66  6E11               	movwf	___awdiv@sign^0,c
  7863  002F68  BE0F               	btfsc	(___awdiv@divisor+1)^0,7,c
  7864  002F6A  EFBB  F017         	goto	u6560
  7865  002F6E  EFB9  F017         	goto	u6561
  7866  002F72                     u6561:
  7867  002F72  EFC1  F017         	goto	l4956
  7868  002F76                     u6560:
  7869  002F76  6C0E               	negf	___awdiv@divisor^0,c
  7870  002F78  1E0F               	comf	(___awdiv@divisor+1)^0,f,c
  7871  002F7A  B0D8               	btfsc	status,0,c
  7872  002F7C  2A0F               	incf	(___awdiv@divisor+1)^0,f,c
  7873  002F7E  0E01               	movlw	1
  7874  002F80  6E11               	movwf	___awdiv@sign^0,c
  7875  002F82                     l4956:
  7876  002F82  BE0D               	btfsc	(___awdiv@dividend+1)^0,7,c
  7877  002F84  EFC8  F017         	goto	u6570
  7878  002F88  EFC6  F017         	goto	u6571
  7879  002F8C                     u6571:
  7880  002F8C  EFCE  F017         	goto	l4962
  7881  002F90                     u6570:
  7882  002F90  6C0C               	negf	___awdiv@dividend^0,c
  7883  002F92  1E0D               	comf	(___awdiv@dividend+1)^0,f,c
  7884  002F94  B0D8               	btfsc	status,0,c
  7885  002F96  2A0D               	incf	(___awdiv@dividend+1)^0,f,c
  7886  002F98  0E01               	movlw	1
  7887  002F9A  1A11               	xorwf	___awdiv@sign^0,f,c
  7888  002F9C                     l4962:
  7889  002F9C  0E00               	movlw	0
  7890  002F9E  6E13               	movwf	(___awdiv@quotient+1)^0,c
  7891  002FA0  0E00               	movlw	0
  7892  002FA2  6E12               	movwf	___awdiv@quotient^0,c
  7893  002FA4  500E               	movf	___awdiv@divisor^0,w,c
  7894  002FA6  100F               	iorwf	(___awdiv@divisor+1)^0,w,c
  7895  002FA8  B4D8               	btfsc	status,2,c
  7896  002FAA  EFD9  F017         	goto	u6581
  7897  002FAE  EFDB  F017         	goto	u6580
  7898  002FB2                     u6581:
  7899  002FB2  EF03  F018         	goto	l4984
  7900  002FB6                     u6580:
  7901  002FB6  0E01               	movlw	1
  7902  002FB8  6E10               	movwf	___awdiv@counter^0,c
  7903  002FBA  EFE3  F017         	goto	l4970
  7904  002FBE                     l4968:
  7905  002FBE  90D8               	bcf	status,0,c
  7906  002FC0  360E               	rlcf	___awdiv@divisor^0,f,c
  7907  002FC2  360F               	rlcf	(___awdiv@divisor+1)^0,f,c
  7908  002FC4  2A10               	incf	___awdiv@counter^0,f,c
  7909  002FC6                     l4970:
  7910  002FC6  AE0F               	btfss	(___awdiv@divisor+1)^0,7,c
  7911  002FC8  EFE8  F017         	goto	u6591
  7912  002FCC  EFEA  F017         	goto	u6590
  7913  002FD0                     u6591:
  7914  002FD0  EFDF  F017         	goto	l4968
  7915  002FD4                     u6590:
  7916  002FD4                     l4972:
  7917  002FD4  90D8               	bcf	status,0,c
  7918  002FD6  3612               	rlcf	___awdiv@quotient^0,f,c
  7919  002FD8  3613               	rlcf	(___awdiv@quotient+1)^0,f,c
  7920  002FDA  500E               	movf	___awdiv@divisor^0,w,c
  7921  002FDC  5C0C               	subwf	___awdiv@dividend^0,w,c
  7922  002FDE  500F               	movf	(___awdiv@divisor+1)^0,w,c
  7923  002FE0  580D               	subwfb	(___awdiv@dividend+1)^0,w,c
  7924  002FE2  A0D8               	btfss	status,0,c
  7925  002FE4  EFF6  F017         	goto	u6601
  7926  002FE8  EFF8  F017         	goto	u6600
  7927  002FEC                     u6601:
  7928  002FEC  EFFD  F017         	goto	l4980
  7929  002FF0                     u6600:
  7930  002FF0  500E               	movf	___awdiv@divisor^0,w,c
  7931  002FF2  5E0C               	subwf	___awdiv@dividend^0,f,c
  7932  002FF4  500F               	movf	(___awdiv@divisor+1)^0,w,c
  7933  002FF6  5A0D               	subwfb	(___awdiv@dividend+1)^0,f,c
  7934  002FF8  8012               	bsf	___awdiv@quotient^0,0,c
  7935  002FFA                     l4980:
  7936  002FFA  90D8               	bcf	status,0,c
  7937  002FFC  320F               	rrcf	(___awdiv@divisor+1)^0,f,c
  7938  002FFE  320E               	rrcf	___awdiv@divisor^0,f,c
  7939  003000  2E10               	decfsz	___awdiv@counter^0,f,c
  7940  003002  EFEA  F017         	goto	l4972
  7941  003006                     l4984:
  7942  003006  5011               	movf	___awdiv@sign^0,w,c
  7943  003008  B4D8               	btfsc	status,2,c
  7944  00300A  EF09  F018         	goto	u6611
  7945  00300E  EF0B  F018         	goto	u6610
  7946  003012                     u6611:
  7947  003012  EF0F  F018         	goto	l4988
  7948  003016                     u6610:
  7949  003016  6C12               	negf	___awdiv@quotient^0,c
  7950  003018  1E13               	comf	(___awdiv@quotient+1)^0,f,c
  7951  00301A  B0D8               	btfsc	status,0,c
  7952  00301C  2A13               	incf	(___awdiv@quotient+1)^0,f,c
  7953  00301E                     l4988:
  7954  00301E  C012  F00C         	movff	___awdiv@quotient,?___awdiv
  7955  003022  C013  F00D         	movff	___awdiv@quotient+1,?___awdiv+1
  7956  003026  0012               	return		;funcret
  7957  003028                     __end_of___awdiv:
  7958                           	opt callstack 0
  7959                           
  7960 ;; *************** function _atoi *****************
  7961 ;; Defined at:
  7962 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
  7963 ;; Parameters:    Size  Location     Type
  7964 ;;  s               2   18[COMRAM] PTR const unsigned char 
  7965 ;;		 -> STR_4(5), 
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;  n               2   31[COMRAM] int 
  7968 ;;  neg             2   24[COMRAM] int 
  7969 ;; Return value:  Size  Location     Type
  7970 ;;                  2   18[COMRAM] int 
  7971 ;; Registers used:
  7972 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7973 ;; Tracked objects:
  7974 ;;		On entry : 0/0
  7975 ;;		On exit  : 0/0
  7976 ;;		Unchanged: 0/0
  7977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7978 ;;      Params:         2       0       0       0       0       0       0
  7979 ;;      Locals:         9       0       0       0       0       0       0
  7980 ;;      Temps:          4       0       0       0       0       0       0
  7981 ;;      Totals:        15       0       0       0       0       0       0
  7982 ;;Total ram usage:       15 bytes
  7983 ;; Hardware stack levels used:    1
  7984 ;; Hardware stack levels required when called:    5
  7985 ;; This function calls:
  7986 ;;		___wmul
  7987 ;;		_isdigit
  7988 ;;		_isspace
  7989 ;; This function is called by:
  7990 ;;		_vfpfcnvrt
  7991 ;; This function uses a non-reentrant model
  7992 ;;
  7993                           
  7994                           	psect	text35
  7995  002696                     __ptext35:
  7996                           	opt callstack 0
  7997  002696                     _atoi:
  7998                           	opt callstack 21
  7999  002696  0E00               	movlw	0
  8000  002698  6E21               	movwf	(atoi@n+1)^0,c
  8001  00269A  0E00               	movlw	0
  8002  00269C  6E20               	movwf	atoi@n^0,c
  8003  00269E  0E00               	movlw	0
  8004  0026A0  6E1A               	movwf	(atoi@neg+1)^0,c
  8005  0026A2  0E00               	movlw	0
  8006  0026A4  6E19               	movwf	atoi@neg^0,c
  8007  0026A6  EF57  F013         	goto	l5432
  8008  0026AA                     l5430:
  8009  0026AA  4A13               	infsnz	atoi@s^0,f,c
  8010  0026AC  2A14               	incf	(atoi@s+1)^0,f,c
  8011  0026AE                     l5432:
  8012  0026AE  0E01               	movlw	1
  8013  0026B0  6E1F               	movwf	_atoi$1433^0,c
  8014  0026B2  C013  FFF6         	movff	atoi@s,tblptrl
  8015  0026B6  C014  FFF7         	movff	atoi@s+1,tblptrh
  8016  0026BA                     	if	0	;tblptru may be non-zero
  8017  0026BA                     	endif
  8018  0026BA                     	if	0	;tblptru may be non-zero
  8019  0026BA                     	endif
  8020  0026BA  0008               	tblrd		*
  8021  0026BC  50F5               	movf	tablat,w,c
  8022  0026BE  0A20               	xorlw	32
  8023  0026C0  B4D8               	btfsc	status,2,c
  8024  0026C2  EF65  F013         	goto	u7381
  8025  0026C6  EF67  F013         	goto	u7380
  8026  0026CA                     u7381:
  8027  0026CA  EF84  F013         	goto	l5440
  8028  0026CE                     u7380:
  8029  0026CE  0EF7               	movlw	247
  8030  0026D0  6E15               	movwf	??_atoi^0,c
  8031  0026D2  0EFF               	movlw	255
  8032  0026D4  6E16               	movwf	(??_atoi+1)^0,c
  8033  0026D6  C013  FFF6         	movff	atoi@s,tblptrl
  8034  0026DA  C014  FFF7         	movff	atoi@s+1,tblptrh
  8035  0026DE                     	if	0	;tblptru may be non-zero
  8036  0026DE                     	endif
  8037  0026DE                     	if	0	;tblptru may be non-zero
  8038  0026DE                     	endif
  8039  0026DE  0008               	tblrd		*
  8040  0026E0  50F5               	movf	tablat,w,c
  8041  0026E2  6E17               	movwf	(??_atoi+2)^0,c
  8042  0026E4  6A18               	clrf	(??_atoi+3)^0,c
  8043  0026E6  5015               	movf	??_atoi^0,w,c
  8044  0026E8  2617               	addwf	(??_atoi+2)^0,f,c
  8045  0026EA  5016               	movf	(??_atoi+1)^0,w,c
  8046  0026EC  2218               	addwfc	(??_atoi+3)^0,f,c
  8047  0026EE  5018               	movf	(??_atoi+3)^0,w,c
  8048  0026F0  E109               	bnz	u7390
  8049  0026F2  0E05               	movlw	5
  8050  0026F4  5C17               	subwf	(??_atoi+2)^0,w,c
  8051  0026F6  A0D8               	btfss	status,0,c
  8052  0026F8  EF80  F013         	goto	u7391
  8053  0026FC  EF82  F013         	goto	u7390
  8054  002700                     u7391:
  8055  002700  EF84  F013         	goto	l5440
  8056  002704                     u7390:
  8057  002704  0E00               	movlw	0
  8058  002706  6E1F               	movwf	_atoi$1433^0,c
  8059  002708                     l5440:
  8060  002708  C01F  F01B         	movff	_atoi$1433,_atoi$1432
  8061  00270C  6A1C               	clrf	(_atoi$1432+1)^0,c
  8062  00270E  501B               	movf	_atoi$1432^0,w,c
  8063  002710  101C               	iorwf	(_atoi$1432+1)^0,w,c
  8064  002712  A4D8               	btfss	status,2,c
  8065  002714  EF8E  F013         	goto	u7401
  8066  002718  EF90  F013         	goto	u7400
  8067  00271C                     u7401:
  8068  00271C  EF55  F013         	goto	l5430
  8069  002720                     u7400:
  8070  002720  EF9A  F013         	goto	l5450
  8071  002724                     l5446:
  8072  002724  0E00               	movlw	0
  8073  002726  6E1A               	movwf	(atoi@neg+1)^0,c
  8074  002728  0E01               	movlw	1
  8075  00272A  6E19               	movwf	atoi@neg^0,c
  8076  00272C                     l5448:
  8077  00272C  4A13               	infsnz	atoi@s^0,f,c
  8078  00272E  2A14               	incf	(atoi@s+1)^0,f,c
  8079  002730  EFCF  F013         	goto	l5456
  8080  002734                     l5450:
  8081  002734  C013  FFF6         	movff	atoi@s,tblptrl
  8082  002738  C014  FFF7         	movff	atoi@s+1,tblptrh
  8083  00273C                     	if	0	;tblptru may be non-zero
  8084  00273C                     	endif
  8085  00273C                     	if	0	;tblptru may be non-zero
  8086  00273C                     	endif
  8087  00273C  0008               	tblrd		*
  8088  00273E  50F5               	movf	tablat,w,c
  8089  002740  6E15               	movwf	??_atoi^0,c
  8090  002742  6A16               	clrf	(??_atoi+1)^0,c
  8091                           
  8092                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8093                           ; Switch size 1, requested type "simple"
  8094                           ; Number of cases is 1, Range of values is 0 to 0
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            4     3 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  002744  5016               	movf	(??_atoi+1)^0,w,c
  8100  002746  0A00               	xorlw	0	; case 0
  8101  002748  B4D8               	btfsc	status,2,c
  8102  00274A  EFA9  F013         	goto	l5688
  8103  00274E  EFCF  F013         	goto	l5456
  8104  002752                     l5688:
  8105                           
  8106                           ; Switch size 1, requested type "simple"
  8107                           ; Number of cases is 2, Range of values is 43 to 45
  8108                           ; switch strategies available:
  8109                           ; Name         Instructions Cycles
  8110                           ; simple_byte            7     4 (average)
  8111                           ;	Chosen strategy is simple_byte
  8112  002752  5015               	movf	??_atoi^0,w,c
  8113  002754  0A2B               	xorlw	43	; case 43
  8114  002756  B4D8               	btfsc	status,2,c
  8115  002758  EF96  F013         	goto	l5448
  8116  00275C  0A06               	xorlw	6	; case 45
  8117  00275E  B4D8               	btfsc	status,2,c
  8118  002760  EF92  F013         	goto	l5446
  8119  002764  EFCF  F013         	goto	l5456
  8120  002768                     l5452:
  8121  002768  C020  F00C         	movff	atoi@n,___wmul@multiplier
  8122  00276C  C021  F00D         	movff	atoi@n+1,___wmul@multiplier+1
  8123  002770  0E00               	movlw	0
  8124  002772  6E0F               	movwf	(___wmul@multiplicand+1)^0,c
  8125  002774  0E0A               	movlw	10
  8126  002776  6E0E               	movwf	___wmul@multiplicand^0,c
  8127  002778  ECA8  F01C         	call	___wmul	;wreg free
  8128  00277C  C013  FFF6         	movff	atoi@s,tblptrl
  8129  002780  C014  FFF7         	movff	atoi@s+1,tblptrh
  8130  002784                     	if	0	;tblptru may be non-zero
  8131  002784                     	endif
  8132  002784                     	if	0	;tblptru may be non-zero
  8133  002784                     	endif
  8134  002784  0008               	tblrd		*
  8135  002786  50F5               	movf	tablat,w,c
  8136  002788  5E0C               	subwf	?___wmul^0,f,c
  8137  00278A  0E00               	movlw	0
  8138  00278C  5A0D               	subwfb	(?___wmul+1)^0,f,c
  8139  00278E  0E30               	movlw	48
  8140  002790  240C               	addwf	?___wmul^0,w,c
  8141  002792  6E20               	movwf	atoi@n^0,c
  8142  002794  0E00               	movlw	0
  8143  002796  200D               	addwfc	(?___wmul+1)^0,w,c
  8144  002798  6E21               	movwf	(atoi@n+1)^0,c
  8145  00279A  EF96  F013         	goto	l5448
  8146  00279E                     l5456:
  8147  00279E  0ED0               	movlw	208
  8148  0027A0  6E15               	movwf	??_atoi^0,c
  8149  0027A2  0EFF               	movlw	255
  8150  0027A4  6E16               	movwf	(??_atoi+1)^0,c
  8151  0027A6  C013  FFF6         	movff	atoi@s,tblptrl
  8152  0027AA  C014  FFF7         	movff	atoi@s+1,tblptrh
  8153  0027AE                     	if	0	;tblptru may be non-zero
  8154  0027AE                     	endif
  8155  0027AE                     	if	0	;tblptru may be non-zero
  8156  0027AE                     	endif
  8157  0027AE  0008               	tblrd		*
  8158  0027B0  50F5               	movf	tablat,w,c
  8159  0027B2  6E17               	movwf	(??_atoi+2)^0,c
  8160  0027B4  6A18               	clrf	(??_atoi+3)^0,c
  8161  0027B6  5015               	movf	??_atoi^0,w,c
  8162  0027B8  2617               	addwf	(??_atoi+2)^0,f,c
  8163  0027BA  5016               	movf	(??_atoi+1)^0,w,c
  8164  0027BC  2218               	addwfc	(??_atoi+3)^0,f,c
  8165  0027BE  5018               	movf	(??_atoi+3)^0,w,c
  8166  0027C0  E10A               	bnz	u7410
  8167  0027C2  0E0A               	movlw	10
  8168  0027C4  5C17               	subwf	(??_atoi+2)^0,w,c
  8169  0027C6  A0D8               	btfss	status,0,c
  8170  0027C8  EFE8  F013         	goto	u7411
  8171  0027CC  EFEB  F013         	goto	u7410
  8172  0027D0                     u7411:
  8173  0027D0  0E01               	movlw	1
  8174  0027D2  EFEC  F013         	goto	u7420
  8175  0027D6                     u7410:
  8176  0027D6  0E00               	movlw	0
  8177  0027D8                     u7420:
  8178  0027D8  6E1D               	movwf	_atoi$1434^0,c
  8179  0027DA  6A1E               	clrf	(_atoi$1434+1)^0,c
  8180  0027DC  501D               	movf	_atoi$1434^0,w,c
  8181  0027DE  101E               	iorwf	(_atoi$1434+1)^0,w,c
  8182  0027E0  A4D8               	btfss	status,2,c
  8183  0027E2  EFF5  F013         	goto	u7431
  8184  0027E6  EFF7  F013         	goto	u7430
  8185  0027EA                     u7431:
  8186  0027EA  EFB4  F013         	goto	l5452
  8187  0027EE                     u7430:
  8188  0027EE  5019               	movf	atoi@neg^0,w,c
  8189  0027F0  101A               	iorwf	(atoi@neg+1)^0,w,c
  8190  0027F2  A4D8               	btfss	status,2,c
  8191  0027F4  EFFE  F013         	goto	u7441
  8192  0027F8  EF00  F014         	goto	u7440
  8193  0027FC                     u7441:
  8194  0027FC  EF0E  F014         	goto	l1058
  8195  002800                     u7440:
  8196  002800  C020  F015         	movff	atoi@n,??_atoi
  8197  002804  C021  F016         	movff	atoi@n+1,??_atoi+1
  8198  002808  1E15               	comf	??_atoi^0,f,c
  8199  00280A  1E16               	comf	(??_atoi+1)^0,f,c
  8200  00280C  4A15               	infsnz	??_atoi^0,f,c
  8201  00280E  2A16               	incf	(??_atoi+1)^0,f,c
  8202  002810  C015  F013         	movff	??_atoi,?_atoi
  8203  002814  C016  F014         	movff	??_atoi+1,?_atoi+1
  8204  002818  EF12  F014         	goto	l1061
  8205  00281C                     l1058:
  8206  00281C  C020  F013         	movff	atoi@n,?_atoi
  8207  002820  C021  F014         	movff	atoi@n+1,?_atoi+1
  8208  002824                     l1061:
  8209  002824  0012               	return		;funcret
  8210  002826                     __end_of_atoi:
  8211                           	opt callstack 0
  8212                           
  8213 ;; *************** function _isspace *****************
  8214 ;; Defined at:
  8215 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;  c               2   11[COMRAM] int 
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  2   11[COMRAM] int 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8229 ;;      Params:         2       0       0       0       0       0       0
  8230 ;;      Locals:         1       0       0       0       0       0       0
  8231 ;;      Temps:          4       0       0       0       0       0       0
  8232 ;;      Totals:         7       0       0       0       0       0       0
  8233 ;;Total ram usage:        7 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    4
  8236 ;; This function calls:
  8237 ;;		Nothing
  8238 ;; This function is called by:
  8239 ;;		_atoi
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           
  8243                           	psect	text36
  8244  003640                     __ptext36:
  8245                           	opt callstack 0
  8246  003640                     _isspace:
  8247                           	opt callstack 21
  8248  003640  0E01               	movlw	1
  8249  003642  6E12               	movwf	_isspace$1463^0,c
  8250  003644  0E20               	movlw	32
  8251  003646  180C               	xorwf	isspace@c^0,w,c
  8252  003648  100D               	iorwf	(isspace@c+1)^0,w,c
  8253  00364A  B4D8               	btfsc	status,2,c
  8254  00364C  EF2A  F01B         	goto	u6841
  8255  003650  EF2C  F01B         	goto	u6840
  8256  003654                     u6841:
  8257  003654  EF45  F01B         	goto	l5126
  8258  003658                     u6840:
  8259  003658  0EF7               	movlw	247
  8260  00365A  6E0E               	movwf	??_isspace^0,c
  8261  00365C  0EFF               	movlw	255
  8262  00365E  6E0F               	movwf	(??_isspace+1)^0,c
  8263  003660  C00C  F010         	movff	isspace@c,??_isspace+2
  8264  003664  C00D  F011         	movff	isspace@c+1,??_isspace+3
  8265  003668  500E               	movf	??_isspace^0,w,c
  8266  00366A  2610               	addwf	(??_isspace+2)^0,f,c
  8267  00366C  500F               	movf	(??_isspace+1)^0,w,c
  8268  00366E  2211               	addwfc	(??_isspace+3)^0,f,c
  8269  003670  5011               	movf	(??_isspace+3)^0,w,c
  8270  003672  E109               	bnz	u6850
  8271  003674  0E05               	movlw	5
  8272  003676  5C10               	subwf	(??_isspace+2)^0,w,c
  8273  003678  A0D8               	btfss	status,0,c
  8274  00367A  EF41  F01B         	goto	u6851
  8275  00367E  EF43  F01B         	goto	u6850
  8276  003682                     u6851:
  8277  003682  EF45  F01B         	goto	l5126
  8278  003686                     u6850:
  8279  003686  0E00               	movlw	0
  8280  003688  6E12               	movwf	_isspace$1463^0,c
  8281  00368A                     l5126:
  8282  00368A  C012  F00C         	movff	_isspace$1463,?_isspace
  8283  00368E  6A0D               	clrf	(?_isspace+1)^0,c
  8284  003690  0012               	return		;funcret
  8285  003692                     __end_of_isspace:
  8286                           	opt callstack 0
  8287                           
  8288 ;; *************** function _isdigit *****************
  8289 ;; Defined at:
  8290 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  c               2   11[COMRAM] int 
  8293 ;; Auto vars:     Size  Location     Type
  8294 ;;		None
  8295 ;; Return value:  Size  Location     Type
  8296 ;;                  2   11[COMRAM] int 
  8297 ;; Registers used:
  8298 ;;		wreg, status,2, status,0
  8299 ;; Tracked objects:
  8300 ;;		On entry : 0/0
  8301 ;;		On exit  : 0/0
  8302 ;;		Unchanged: 0/0
  8303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8304 ;;      Params:         2       0       0       0       0       0       0
  8305 ;;      Locals:         0       0       0       0       0       0       0
  8306 ;;      Temps:          4       0       0       0       0       0       0
  8307 ;;      Totals:         6       0       0       0       0       0       0
  8308 ;;Total ram usage:        6 bytes
  8309 ;; Hardware stack levels used:    1
  8310 ;; Hardware stack levels required when called:    4
  8311 ;; This function calls:
  8312 ;;		Nothing
  8313 ;; This function is called by:
  8314 ;;		_vfpfcnvrt
  8315 ;;		_atoi
  8316 ;; This function uses a non-reentrant model
  8317 ;;
  8318                           
  8319                           	psect	text37
  8320  0038E6                     __ptext37:
  8321                           	opt callstack 0
  8322  0038E6                     _isdigit:
  8323                           	opt callstack 22
  8324  0038E6  0ED0               	movlw	208
  8325  0038E8  6E0E               	movwf	??_isdigit^0,c
  8326  0038EA  0EFF               	movlw	255
  8327  0038EC  6E0F               	movwf	(??_isdigit+1)^0,c
  8328  0038EE  C00C  F010         	movff	isdigit@c,??_isdigit+2
  8329  0038F2  C00D  F011         	movff	isdigit@c+1,??_isdigit+3
  8330  0038F6  500E               	movf	??_isdigit^0,w,c
  8331  0038F8  2610               	addwf	(??_isdigit+2)^0,f,c
  8332  0038FA  500F               	movf	(??_isdigit+1)^0,w,c
  8333  0038FC  2211               	addwfc	(??_isdigit+3)^0,f,c
  8334  0038FE  5011               	movf	(??_isdigit+3)^0,w,c
  8335  003900  E10A               	bnz	u6120
  8336  003902  0E0A               	movlw	10
  8337  003904  5C10               	subwf	(??_isdigit+2)^0,w,c
  8338  003906  A0D8               	btfss	status,0,c
  8339  003908  EF88  F01C         	goto	u6121
  8340  00390C  EF8B  F01C         	goto	u6120
  8341  003910                     u6121:
  8342  003910  0E01               	movlw	1
  8343  003912  EF8C  F01C         	goto	u6130
  8344  003916                     u6120:
  8345  003916  0E00               	movlw	0
  8346  003918                     u6130:
  8347  003918  6E0C               	movwf	?_isdigit^0,c
  8348  00391A  6A0D               	clrf	(?_isdigit+1)^0,c
  8349  00391C  0012               	return		;funcret
  8350  00391E                     __end_of_isdigit:
  8351                           	opt callstack 0
  8352                           
  8353 ;; *************** function ___wmul *****************
  8354 ;; Defined at:
  8355 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/Umul16.c"
  8356 ;; Parameters:    Size  Location     Type
  8357 ;;  multiplier      2   11[COMRAM] unsigned int 
  8358 ;;  multiplicand    2   13[COMRAM] unsigned int 
  8359 ;; Auto vars:     Size  Location     Type
  8360 ;;  product         2   15[COMRAM] unsigned int 
  8361 ;; Return value:  Size  Location     Type
  8362 ;;                  2   11[COMRAM] unsigned int 
  8363 ;; Registers used:
  8364 ;;		wreg, status,2, status,0, prodl, prodh
  8365 ;; Tracked objects:
  8366 ;;		On entry : 0/0
  8367 ;;		On exit  : 0/0
  8368 ;;		Unchanged: 0/0
  8369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8370 ;;      Params:         4       0       0       0       0       0       0
  8371 ;;      Locals:         2       0       0       0       0       0       0
  8372 ;;      Temps:          0       0       0       0       0       0       0
  8373 ;;      Totals:         6       0       0       0       0       0       0
  8374 ;;Total ram usage:        6 bytes
  8375 ;; Hardware stack levels used:    1
  8376 ;; Hardware stack levels required when called:    4
  8377 ;; This function calls:
  8378 ;;		Nothing
  8379 ;; This function is called by:
  8380 ;;		_atoi
  8381 ;; This function uses a non-reentrant model
  8382 ;;
  8383                           
  8384                           	psect	text38
  8385  003950                     __ptext38:
  8386                           	opt callstack 0
  8387  003950                     ___wmul:
  8388                           	opt callstack 21
  8389  003950  500C               	movf	___wmul@multiplier^0,w,c
  8390  003952  020E               	mulwf	___wmul@multiplicand^0,c
  8391  003954  CFF3 F010          	movff	prodl,___wmul@product
  8392  003958  CFF4 F011          	movff	prodh,___wmul@product+1
  8393  00395C  500C               	movf	___wmul@multiplier^0,w,c
  8394  00395E  020F               	mulwf	(___wmul@multiplicand+1)^0,c
  8395  003960  50F3               	movf	243,w,c
  8396  003962  2611               	addwf	(___wmul@product+1)^0,f,c
  8397  003964  500D               	movf	(___wmul@multiplier+1)^0,w,c
  8398  003966  020E               	mulwf	___wmul@multiplicand^0,c
  8399  003968  50F3               	movf	243,w,c
  8400  00396A  2611               	addwf	(___wmul@product+1)^0,f,c
  8401  00396C  C010  F00C         	movff	___wmul@product,?___wmul
  8402  003970  C011  F00D         	movff	___wmul@product+1,?___wmul+1
  8403  003974  0012               	return		;funcret
  8404  003976                     __end_of___wmul:
  8405                           	opt callstack 0
  8406                           
  8407 ;; *************** function _memset *****************
  8408 ;; Defined at:
  8409 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  8410 ;; Parameters:    Size  Location     Type
  8411 ;;  dest            2   11[COMRAM] PTR void 
  8412 ;;		 -> str(10), 
  8413 ;;  c               2   13[COMRAM] int 
  8414 ;;  n               2   15[COMRAM] unsigned int 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  s               2   21[COMRAM] PTR unsigned char 
  8417 ;;		 -> str(10), 
  8418 ;;  k               2   19[COMRAM] unsigned int 
  8419 ;; Return value:  Size  Location     Type
  8420 ;;                  2   11[COMRAM] PTR void 
  8421 ;; Registers used:
  8422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8423 ;; Tracked objects:
  8424 ;;		On entry : 0/0
  8425 ;;		On exit  : 0/0
  8426 ;;		Unchanged: 0/0
  8427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8428 ;;      Params:         6       0       0       0       0       0       0
  8429 ;;      Locals:         4       0       0       0       0       0       0
  8430 ;;      Temps:          2       0       0       0       0       0       0
  8431 ;;      Totals:        12       0       0       0       0       0       0
  8432 ;;Total ram usage:       12 bytes
  8433 ;; Hardware stack levels used:    1
  8434 ;; Hardware stack levels required when called:    4
  8435 ;; This function calls:
  8436 ;;		Nothing
  8437 ;; This function is called by:
  8438 ;;		_Mode2
  8439 ;; This function uses a non-reentrant model
  8440 ;;
  8441                           
  8442                           	psect	text39
  8443  002826                     __ptext39:
  8444                           	opt callstack 0
  8445  002826                     _memset:
  8446                           	opt callstack 25
  8447  002826  C00C  F016         	movff	memset@dest,memset@s
  8448  00282A  C00D  F017         	movff	memset@dest+1,memset@s+1
  8449  00282E  5010               	movf	memset@n^0,w,c
  8450  002830  1011               	iorwf	(memset@n+1)^0,w,c
  8451  002832  A4D8               	btfss	status,2,c
  8452  002834  EF1E  F014         	goto	u5091
  8453  002838  EF20  F014         	goto	u5090
  8454  00283C                     u5091:
  8455  00283C  EF22  F014         	goto	l4120
  8456  002840                     u5090:
  8457  002840  EFCD  F014         	goto	l1098
  8458  002844                     l4120:
  8459  002844  C016  FFD9         	movff	memset@s,fsr2l
  8460  002848  C017  FFDA         	movff	memset@s+1,fsr2h
  8461  00284C  C00E  FFDF         	movff	memset@c,indf2
  8462  002850  5010               	movf	memset@n^0,w,c
  8463  002852  2416               	addwf	memset@s^0,w,c
  8464  002854  6E12               	movwf	??_memset^0,c
  8465  002856  5011               	movf	(memset@n+1)^0,w,c
  8466  002858  2017               	addwfc	(memset@s+1)^0,w,c
  8467  00285A  6E13               	movwf	(??_memset+1)^0,c
  8468  00285C  0EFF               	movlw	255
  8469  00285E  2412               	addwf	??_memset^0,w,c
  8470  002860  6ED9               	movwf	fsr2l,c
  8471  002862  0EFF               	movlw	255
  8472  002864  2013               	addwfc	(??_memset+1)^0,w,c
  8473  002866  6EDA               	movwf	fsr2h,c
  8474  002868  C00E  FFDF         	movff	memset@c,indf2
  8475  00286C  5011               	movf	(memset@n+1)^0,w,c
  8476  00286E  E107               	bnz	u5101
  8477  002870  0E03               	movlw	3
  8478  002872  5C10               	subwf	memset@n^0,w,c
  8479  002874  B0D8               	btfsc	status,0,c
  8480  002876  EF3F  F014         	goto	u5101
  8481  00287A  EF41  F014         	goto	u5100
  8482  00287E                     u5101:
  8483  00287E  EF43  F014         	goto	l4126
  8484  002882                     u5100:
  8485  002882  EFCD  F014         	goto	l1098
  8486  002886                     l4126:
  8487  002886  EE20 F001          	lfsr	2,1
  8488  00288A  5016               	movf	memset@s^0,w,c
  8489  00288C  26D9               	addwf	fsr2l,f,c
  8490  00288E  5017               	movf	(memset@s+1)^0,w,c
  8491  002890  22DA               	addwfc	fsr2h,f,c
  8492  002892  C00E  FFDF         	movff	memset@c,indf2
  8493  002896  EE20 F002          	lfsr	2,2
  8494  00289A  5016               	movf	memset@s^0,w,c
  8495  00289C  26D9               	addwf	fsr2l,f,c
  8496  00289E  5017               	movf	(memset@s+1)^0,w,c
  8497  0028A0  22DA               	addwfc	fsr2h,f,c
  8498  0028A2  C00E  FFDF         	movff	memset@c,indf2
  8499  0028A6  5010               	movf	memset@n^0,w,c
  8500  0028A8  2416               	addwf	memset@s^0,w,c
  8501  0028AA  6E12               	movwf	??_memset^0,c
  8502  0028AC  5011               	movf	(memset@n+1)^0,w,c
  8503  0028AE  2017               	addwfc	(memset@s+1)^0,w,c
  8504  0028B0  6E13               	movwf	(??_memset+1)^0,c
  8505  0028B2  0EFE               	movlw	254
  8506  0028B4  2412               	addwf	??_memset^0,w,c
  8507  0028B6  6ED9               	movwf	fsr2l,c
  8508  0028B8  0EFF               	movlw	255
  8509  0028BA  2013               	addwfc	(??_memset+1)^0,w,c
  8510  0028BC  6EDA               	movwf	fsr2h,c
  8511  0028BE  C00E  FFDF         	movff	memset@c,indf2
  8512  0028C2  5010               	movf	memset@n^0,w,c
  8513  0028C4  2416               	addwf	memset@s^0,w,c
  8514  0028C6  6E12               	movwf	??_memset^0,c
  8515  0028C8  5011               	movf	(memset@n+1)^0,w,c
  8516  0028CA  2017               	addwfc	(memset@s+1)^0,w,c
  8517  0028CC  6E13               	movwf	(??_memset+1)^0,c
  8518  0028CE  0EFD               	movlw	253
  8519  0028D0  2412               	addwf	??_memset^0,w,c
  8520  0028D2  6ED9               	movwf	fsr2l,c
  8521  0028D4  0EFF               	movlw	255
  8522  0028D6  2013               	addwfc	(??_memset+1)^0,w,c
  8523  0028D8  6EDA               	movwf	fsr2h,c
  8524  0028DA  C00E  FFDF         	movff	memset@c,indf2
  8525  0028DE  5011               	movf	(memset@n+1)^0,w,c
  8526  0028E0  E107               	bnz	u5111
  8527  0028E2  0E07               	movlw	7
  8528  0028E4  5C10               	subwf	memset@n^0,w,c
  8529  0028E6  B0D8               	btfsc	status,0,c
  8530  0028E8  EF78  F014         	goto	u5111
  8531  0028EC  EF7A  F014         	goto	u5110
  8532  0028F0                     u5111:
  8533  0028F0  EF7C  F014         	goto	l4132
  8534  0028F4                     u5110:
  8535  0028F4  EFCD  F014         	goto	l1098
  8536  0028F8                     l4132:
  8537  0028F8  EE20 F003          	lfsr	2,3
  8538  0028FC  5016               	movf	memset@s^0,w,c
  8539  0028FE  26D9               	addwf	fsr2l,f,c
  8540  002900  5017               	movf	(memset@s+1)^0,w,c
  8541  002902  22DA               	addwfc	fsr2h,f,c
  8542  002904  C00E  FFDF         	movff	memset@c,indf2
  8543  002908  5010               	movf	memset@n^0,w,c
  8544  00290A  2416               	addwf	memset@s^0,w,c
  8545  00290C  6E12               	movwf	??_memset^0,c
  8546  00290E  5011               	movf	(memset@n+1)^0,w,c
  8547  002910  2017               	addwfc	(memset@s+1)^0,w,c
  8548  002912  6E13               	movwf	(??_memset+1)^0,c
  8549  002914  0EFC               	movlw	252
  8550  002916  2412               	addwf	??_memset^0,w,c
  8551  002918  6ED9               	movwf	fsr2l,c
  8552  00291A  0EFF               	movlw	255
  8553  00291C  2013               	addwfc	(??_memset+1)^0,w,c
  8554  00291E  6EDA               	movwf	fsr2h,c
  8555  002920  C00E  FFDF         	movff	memset@c,indf2
  8556  002924  5011               	movf	(memset@n+1)^0,w,c
  8557  002926  E107               	bnz	u5121
  8558  002928  0E09               	movlw	9
  8559  00292A  5C10               	subwf	memset@n^0,w,c
  8560  00292C  B0D8               	btfsc	status,0,c
  8561  00292E  EF9B  F014         	goto	u5121
  8562  002932  EF9D  F014         	goto	u5120
  8563  002936                     u5121:
  8564  002936  EF9F  F014         	goto	l4138
  8565  00293A                     u5120:
  8566  00293A  EFCD  F014         	goto	l1098
  8567  00293E                     l4138:
  8568  00293E  C016  F012         	movff	memset@s,??_memset
  8569  002942  C017  F013         	movff	memset@s+1,??_memset+1
  8570  002946  1E12               	comf	??_memset^0,f,c
  8571  002948  1E13               	comf	(??_memset+1)^0,f,c
  8572  00294A  4A12               	infsnz	??_memset^0,f,c
  8573  00294C  2A13               	incf	(??_memset+1)^0,f,c
  8574  00294E  0E03               	movlw	3
  8575  002950  1412               	andwf	??_memset^0,w,c
  8576  002952  6E14               	movwf	memset@k^0,c
  8577  002954  6A15               	clrf	(memset@k+1)^0,c
  8578  002956  5014               	movf	memset@k^0,w,c
  8579  002958  2616               	addwf	memset@s^0,f,c
  8580  00295A  5015               	movf	(memset@k+1)^0,w,c
  8581  00295C  2217               	addwfc	(memset@s+1)^0,f,c
  8582  00295E  5014               	movf	memset@k^0,w,c
  8583  002960  5E10               	subwf	memset@n^0,f,c
  8584  002962  5015               	movf	(memset@k+1)^0,w,c
  8585  002964  5A11               	subwfb	(memset@n+1)^0,f,c
  8586  002966  0EFC               	movlw	252
  8587  002968  1610               	andwf	memset@n^0,f,c
  8588  00296A  0EFF               	movlw	255
  8589  00296C  1611               	andwf	(memset@n+1)^0,f,c
  8590  00296E  EFC4  F014         	goto	l4146
  8591  002972                     l4140:
  8592  002972  C016  FFD9         	movff	memset@s,fsr2l
  8593  002976  C017  FFDA         	movff	memset@s+1,fsr2h
  8594  00297A  C00E  FFDF         	movff	memset@c,indf2
  8595  00297E  0610               	decf	memset@n^0,f,c
  8596  002980  A0D8               	btfss	status,0,c
  8597  002982  0611               	decf	(memset@n+1)^0,f,c
  8598  002984  4A16               	infsnz	memset@s^0,f,c
  8599  002986  2A17               	incf	(memset@s+1)^0,f,c
  8600  002988                     l4146:
  8601  002988  5010               	movf	memset@n^0,w,c
  8602  00298A  1011               	iorwf	(memset@n+1)^0,w,c
  8603  00298C  A4D8               	btfss	status,2,c
  8604  00298E  EFCB  F014         	goto	u5131
  8605  002992  EFCD  F014         	goto	u5130
  8606  002996                     u5131:
  8607  002996  EFB9  F014         	goto	l4140
  8608  00299A                     u5130:
  8609  00299A                     l1098:
  8610  00299A  0012               	return		;funcret
  8611  00299C                     __end_of_memset:
  8612                           	opt callstack 0
  8613                           
  8614 ;; *************** function ___xxtofl *****************
  8615 ;; Defined at:
  8616 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  sign            1    wreg     unsigned char 
  8619 ;;  val             4   11[COMRAM] long 
  8620 ;; Auto vars:     Size  Location     Type
  8621 ;;  sign            1   19[COMRAM] unsigned char 
  8622 ;;  arg             4   21[COMRAM] unsigned long 
  8623 ;;  exp             1   20[COMRAM] unsigned char 
  8624 ;; Return value:  Size  Location     Type
  8625 ;;                  4   11[COMRAM] unsigned char 
  8626 ;; Registers used:
  8627 ;;		wreg, status,2, status,0
  8628 ;; Tracked objects:
  8629 ;;		On entry : 0/0
  8630 ;;		On exit  : 0/0
  8631 ;;		Unchanged: 0/0
  8632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8633 ;;      Params:         4       0       0       0       0       0       0
  8634 ;;      Locals:         6       0       0       0       0       0       0
  8635 ;;      Temps:          4       0       0       0       0       0       0
  8636 ;;      Totals:        14       0       0       0       0       0       0
  8637 ;;Total ram usage:       14 bytes
  8638 ;; Hardware stack levels used:    1
  8639 ;; Hardware stack levels required when called:    4
  8640 ;; This function calls:
  8641 ;;		Nothing
  8642 ;; This function is called by:
  8643 ;;		_Mode2
  8644 ;; This function uses a non-reentrant model
  8645 ;;
  8646                           
  8647                           	psect	text40
  8648  0024E2                     __ptext40:
  8649                           	opt callstack 0
  8650  0024E2                     ___xxtofl:
  8651                           	opt callstack 25
  8652                           
  8653                           ;incstack = 0
  8654                           ;___xxtofl@sign stored from wreg
  8655  0024E2  6E14               	movwf	___xxtofl@sign^0,c
  8656  0024E4  5014               	movf	___xxtofl@sign^0,w,c
  8657  0024E6  B4D8               	btfsc	status,2,c
  8658  0024E8  EF78  F012         	goto	u5141
  8659  0024EC  EF7A  F012         	goto	u5140
  8660  0024F0                     u5141:
  8661  0024F0  EF9C  F012         	goto	l1003
  8662  0024F4                     u5140:
  8663  0024F4  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  8664  0024F6  EF81  F012         	goto	u5150
  8665  0024FA  EF7F  F012         	goto	u5151
  8666  0024FE                     u5151:
  8667  0024FE  EF9C  F012         	goto	l1003
  8668  002502                     u5150:
  8669  002502  C00C  F010         	movff	___xxtofl@val,??___xxtofl
  8670  002506  C00D  F011         	movff	___xxtofl@val+1,??___xxtofl+1
  8671  00250A  C00E  F012         	movff	___xxtofl@val+2,??___xxtofl+2
  8672  00250E  C00F  F013         	movff	___xxtofl@val+3,??___xxtofl+3
  8673  002512  1E10               	comf	??___xxtofl^0,f,c
  8674  002514  1E11               	comf	(??___xxtofl+1)^0,f,c
  8675  002516  1E12               	comf	(??___xxtofl+2)^0,f,c
  8676  002518  1E13               	comf	(??___xxtofl+3)^0,f,c
  8677  00251A  2A10               	incf	??___xxtofl^0,f,c
  8678  00251C  0E00               	movlw	0
  8679  00251E  2211               	addwfc	(??___xxtofl+1)^0,f,c
  8680  002520  2212               	addwfc	(??___xxtofl+2)^0,f,c
  8681  002522  2213               	addwfc	(??___xxtofl+3)^0,f,c
  8682  002524  C010  F016         	movff	??___xxtofl,___xxtofl@arg
  8683  002528  C011  F017         	movff	??___xxtofl+1,___xxtofl@arg+1
  8684  00252C  C012  F018         	movff	??___xxtofl+2,___xxtofl@arg+2
  8685  002530  C013  F019         	movff	??___xxtofl+3,___xxtofl@arg+3
  8686  002534  EFA4  F012         	goto	l4166
  8687  002538                     l1003:
  8688  002538  C00C  F016         	movff	___xxtofl@val,___xxtofl@arg
  8689  00253C  C00D  F017         	movff	___xxtofl@val+1,___xxtofl@arg+1
  8690  002540  C00E  F018         	movff	___xxtofl@val+2,___xxtofl@arg+2
  8691  002544  C00F  F019         	movff	___xxtofl@val+3,___xxtofl@arg+3
  8692  002548                     l4166:
  8693  002548  500C               	movf	___xxtofl@val^0,w,c
  8694  00254A  100D               	iorwf	(___xxtofl@val+1)^0,w,c
  8695  00254C  100E               	iorwf	(___xxtofl@val+2)^0,w,c
  8696  00254E  100F               	iorwf	(___xxtofl@val+3)^0,w,c
  8697  002550  A4D8               	btfss	status,2,c
  8698  002552  EFAD  F012         	goto	u5161
  8699  002556  EFAF  F012         	goto	u5160
  8700  00255A                     u5161:
  8701  00255A  EFB9  F012         	goto	l4172
  8702  00255E                     u5160:
  8703  00255E  0E00               	movlw	0
  8704  002560  6E0C               	movwf	?___xxtofl^0,c
  8705  002562  0E00               	movlw	0
  8706  002564  6E0D               	movwf	(?___xxtofl+1)^0,c
  8707  002566  0E00               	movlw	0
  8708  002568  6E0E               	movwf	(?___xxtofl+2)^0,c
  8709  00256A  0E00               	movlw	0
  8710  00256C  6E0F               	movwf	(?___xxtofl+3)^0,c
  8711  00256E  EF4A  F013         	goto	l1006
  8712  002572                     l4172:
  8713  002572  0E96               	movlw	150
  8714  002574  6E15               	movwf	___xxtofl@exp^0,c
  8715  002576  EFC3  F012         	goto	l4176
  8716  00257A                     l4174:
  8717  00257A  2A15               	incf	___xxtofl@exp^0,f,c
  8718  00257C  90D8               	bcf	status,0,c
  8719  00257E  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  8720  002580  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  8721  002582  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  8722  002584  3216               	rrcf	___xxtofl@arg^0,f,c
  8723  002586                     l4176:
  8724  002586  0E00               	movlw	0
  8725  002588  1416               	andwf	___xxtofl@arg^0,w,c
  8726  00258A  6E10               	movwf	??___xxtofl^0,c
  8727  00258C  0E00               	movlw	0
  8728  00258E  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  8729  002590  6E11               	movwf	(??___xxtofl+1)^0,c
  8730  002592  0E00               	movlw	0
  8731  002594  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  8732  002596  6E12               	movwf	(??___xxtofl+2)^0,c
  8733  002598  0EFE               	movlw	254
  8734  00259A  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  8735  00259C  6E13               	movwf	(??___xxtofl+3)^0,c
  8736  00259E  5010               	movf	??___xxtofl^0,w,c
  8737  0025A0  1011               	iorwf	(??___xxtofl+1)^0,w,c
  8738  0025A2  1012               	iorwf	(??___xxtofl+2)^0,w,c
  8739  0025A4  1013               	iorwf	(??___xxtofl+3)^0,w,c
  8740  0025A6  A4D8               	btfss	status,2,c
  8741  0025A8  EFD8  F012         	goto	u5171
  8742  0025AC  EFDA  F012         	goto	u5170
  8743  0025B0                     u5171:
  8744  0025B0  EFBD  F012         	goto	l4174
  8745  0025B4                     u5170:
  8746  0025B4  EFE8  F012         	goto	l1010
  8747  0025B8                     l4178:
  8748  0025B8  2A15               	incf	___xxtofl@exp^0,f,c
  8749  0025BA  0E01               	movlw	1
  8750  0025BC  2616               	addwf	___xxtofl@arg^0,f,c
  8751  0025BE  0E00               	movlw	0
  8752  0025C0  2217               	addwfc	(___xxtofl@arg+1)^0,f,c
  8753  0025C2  2218               	addwfc	(___xxtofl@arg+2)^0,f,c
  8754  0025C4  2219               	addwfc	(___xxtofl@arg+3)^0,f,c
  8755  0025C6  90D8               	bcf	status,0,c
  8756  0025C8  3219               	rrcf	(___xxtofl@arg+3)^0,f,c
  8757  0025CA  3218               	rrcf	(___xxtofl@arg+2)^0,f,c
  8758  0025CC  3217               	rrcf	(___xxtofl@arg+1)^0,f,c
  8759  0025CE  3216               	rrcf	___xxtofl@arg^0,f,c
  8760  0025D0                     l1010:
  8761  0025D0  0E00               	movlw	0
  8762  0025D2  1416               	andwf	___xxtofl@arg^0,w,c
  8763  0025D4  6E10               	movwf	??___xxtofl^0,c
  8764  0025D6  0E00               	movlw	0
  8765  0025D8  1417               	andwf	(___xxtofl@arg+1)^0,w,c
  8766  0025DA  6E11               	movwf	(??___xxtofl+1)^0,c
  8767  0025DC  0E00               	movlw	0
  8768  0025DE  1418               	andwf	(___xxtofl@arg+2)^0,w,c
  8769  0025E0  6E12               	movwf	(??___xxtofl+2)^0,c
  8770  0025E2  0EFF               	movlw	255
  8771  0025E4  1419               	andwf	(___xxtofl@arg+3)^0,w,c
  8772  0025E6  6E13               	movwf	(??___xxtofl+3)^0,c
  8773  0025E8  5010               	movf	??___xxtofl^0,w,c
  8774  0025EA  1011               	iorwf	(??___xxtofl+1)^0,w,c
  8775  0025EC  1012               	iorwf	(??___xxtofl+2)^0,w,c
  8776  0025EE  1013               	iorwf	(??___xxtofl+3)^0,w,c
  8777  0025F0  A4D8               	btfss	status,2,c
  8778  0025F2  EFFD  F012         	goto	u5181
  8779  0025F6  EFFF  F012         	goto	u5180
  8780  0025FA                     u5181:
  8781  0025FA  EFDC  F012         	goto	l4178
  8782  0025FE                     u5180:
  8783  0025FE  EF07  F013         	goto	l4186
  8784  002602                     l4184:
  8785  002602  0615               	decf	___xxtofl@exp^0,f,c
  8786  002604  90D8               	bcf	status,0,c
  8787  002606  3616               	rlcf	___xxtofl@arg^0,f,c
  8788  002608  3617               	rlcf	(___xxtofl@arg+1)^0,f,c
  8789  00260A  3618               	rlcf	(___xxtofl@arg+2)^0,f,c
  8790  00260C  3619               	rlcf	(___xxtofl@arg+3)^0,f,c
  8791  00260E                     l4186:
  8792  00260E  BE18               	btfsc	(___xxtofl@arg+2)^0,7,c
  8793  002610  EF0C  F013         	goto	u5191
  8794  002614  EF0E  F013         	goto	u5190
  8795  002618                     u5191:
  8796  002618  EF16  F013         	goto	l1017
  8797  00261C                     u5190:
  8798  00261C  0E02               	movlw	2
  8799  00261E  6015               	cpfslt	___xxtofl@exp^0,c
  8800  002620  EF14  F013         	goto	u5201
  8801  002624  EF16  F013         	goto	u5200
  8802  002628                     u5201:
  8803  002628  EF01  F013         	goto	l4184
  8804  00262C                     u5200:
  8805  00262C                     l1017:
  8806  00262C  B015               	btfsc	___xxtofl@exp^0,0,c
  8807  00262E  EF1B  F013         	goto	u5211
  8808  002632  EF1D  F013         	goto	u5210
  8809  002636                     u5211:
  8810  002636  EF1E  F013         	goto	l4192
  8811  00263A                     u5210:
  8812  00263A  9E18               	bcf	(___xxtofl@arg+2)^0,7,c
  8813  00263C                     l4192:
  8814  00263C  90D8               	bcf	status,0,c
  8815  00263E  3215               	rrcf	___xxtofl@exp^0,f,c
  8816  002640  C015  F010         	movff	___xxtofl@exp,??___xxtofl
  8817  002644  6A11               	clrf	(??___xxtofl+1)^0,c
  8818  002646  6A12               	clrf	(??___xxtofl+2)^0,c
  8819  002648  6A13               	clrf	(??___xxtofl+3)^0,c
  8820  00264A  C010  F013         	movff	??___xxtofl,??___xxtofl+3
  8821  00264E  6A12               	clrf	(??___xxtofl+2)^0,c
  8822  002650  6A11               	clrf	(??___xxtofl+1)^0,c
  8823  002652  6A10               	clrf	??___xxtofl^0,c
  8824  002654  5010               	movf	??___xxtofl^0,w,c
  8825  002656  1216               	iorwf	___xxtofl@arg^0,f,c
  8826  002658  5011               	movf	(??___xxtofl+1)^0,w,c
  8827  00265A  1217               	iorwf	(___xxtofl@arg+1)^0,f,c
  8828  00265C  5012               	movf	(??___xxtofl+2)^0,w,c
  8829  00265E  1218               	iorwf	(___xxtofl@arg+2)^0,f,c
  8830  002660  5013               	movf	(??___xxtofl+3)^0,w,c
  8831  002662  1219               	iorwf	(___xxtofl@arg+3)^0,f,c
  8832  002664  5014               	movf	___xxtofl@sign^0,w,c
  8833  002666  B4D8               	btfsc	status,2,c
  8834  002668  EF38  F013         	goto	u5221
  8835  00266C  EF3A  F013         	goto	u5220
  8836  002670                     u5221:
  8837  002670  EF42  F013         	goto	l4202
  8838  002674                     u5220:
  8839  002674  BE0F               	btfsc	(___xxtofl@val+3)^0,7,c
  8840  002676  EF41  F013         	goto	u5230
  8841  00267A  EF3F  F013         	goto	u5231
  8842  00267E                     u5231:
  8843  00267E  EF42  F013         	goto	l4202
  8844  002682                     u5230:
  8845  002682  8E19               	bsf	(___xxtofl@arg+3)^0,7,c
  8846  002684                     l4202:
  8847  002684  C016  F00C         	movff	___xxtofl@arg,?___xxtofl
  8848  002688  C017  F00D         	movff	___xxtofl@arg+1,?___xxtofl+1
  8849  00268C  C018  F00E         	movff	___xxtofl@arg+2,?___xxtofl+2
  8850  002690  C019  F00F         	movff	___xxtofl@arg+3,?___xxtofl+3
  8851  002694                     l1006:
  8852  002694  0012               	return		;funcret
  8853  002696                     __end_of___xxtofl:
  8854                           	opt callstack 0
  8855                           
  8856 ;; *************** function _GetString *****************
  8857 ;; Defined at:
  8858 ;;		line 63 in file "setting_hardaware/uart.c"
  8859 ;; Parameters:    Size  Location     Type
  8860 ;;		None
  8861 ;; Auto vars:     Size  Location     Type
  8862 ;;		None
  8863 ;; Return value:  Size  Location     Type
  8864 ;;                  2   11[COMRAM] PTR unsigned char 
  8865 ;; Registers used:
  8866 ;;		wreg, status,2, status,0
  8867 ;; Tracked objects:
  8868 ;;		On entry : 0/0
  8869 ;;		On exit  : 0/0
  8870 ;;		Unchanged: 0/0
  8871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8872 ;;      Params:         2       0       0       0       0       0       0
  8873 ;;      Locals:         0       0       0       0       0       0       0
  8874 ;;      Temps:          0       0       0       0       0       0       0
  8875 ;;      Totals:         2       0       0       0       0       0       0
  8876 ;;Total ram usage:        2 bytes
  8877 ;; Hardware stack levels used:    1
  8878 ;; Hardware stack levels required when called:    4
  8879 ;; This function calls:
  8880 ;;		Nothing
  8881 ;; This function is called by:
  8882 ;;		_Mode2
  8883 ;;		_main
  8884 ;; This function uses a non-reentrant model
  8885 ;;
  8886                           
  8887                           	psect	text41
  8888  003A3E                     __ptext41:
  8889                           	opt callstack 0
  8890  003A3E                     _GetString:
  8891                           	opt callstack 25
  8892  003A3E                     
  8893                           ;setting_hardaware/uart.c: 64:     return mystring;
  8894  003A3E  0EDA               	movlw	low _mystring
  8895  003A40  6E0C               	movwf	?_GetString^0,c
  8896  003A42  0E00               	movlw	high _mystring
  8897  003A44  6E0D               	movwf	(?_GetString+1)^0,c
  8898  003A46  0012               	return		;funcret
  8899  003A48                     __end_of_GetString:
  8900                           	opt callstack 0
  8901                           
  8902 ;; *************** function _ADC_Read *****************
  8903 ;; Defined at:
  8904 ;;		line 13 in file "setting_hardaware/adc.c"
  8905 ;; Parameters:    Size  Location     Type
  8906 ;;  channel         2   11[COMRAM] int 
  8907 ;; Auto vars:     Size  Location     Type
  8908 ;;  digital         2   15[COMRAM] int 
  8909 ;; Return value:  Size  Location     Type
  8910 ;;                  2   11[COMRAM] int 
  8911 ;; Registers used:
  8912 ;;		wreg, status,2, status,0
  8913 ;; Tracked objects:
  8914 ;;		On entry : 0/0
  8915 ;;		On exit  : 0/0
  8916 ;;		Unchanged: 0/0
  8917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8918 ;;      Params:         2       0       0       0       0       0       0
  8919 ;;      Locals:         2       0       0       0       0       0       0
  8920 ;;      Temps:          2       0       0       0       0       0       0
  8921 ;;      Totals:         6       0       0       0       0       0       0
  8922 ;;Total ram usage:        6 bytes
  8923 ;; Hardware stack levels used:    1
  8924 ;; Hardware stack levels required when called:    4
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_Mode2
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text42
  8933  00383C                     __ptext42:
  8934                           	opt callstack 0
  8935  00383C                     _ADC_Read:
  8936                           	opt callstack 25
  8937  00383C                     
  8938                           ;setting_hardaware/adc.c: 13: int ADC_Read(int channel);setting_hardaware/adc.c: 14: {;s
      +                          etting_hardaware/adc.c: 15:     int digital;;setting_hardaware/adc.c: 17:     ADCON0bits
      +                          .CHS = 0x07;
  8939  00383C  50C2               	movf	194,w,c	;volatile
  8940  00383E  0BC3               	andlw	-61
  8941  003840  091C               	iorlw	28
  8942  003842  6EC2               	movwf	194,c	;volatile
  8943  003844                     
  8944                           ;setting_hardaware/adc.c: 18:     ADCON0bits.GO = 1;
  8945  003844  82C2               	bsf	194,1,c	;volatile
  8946  003846                     
  8947                           ;setting_hardaware/adc.c: 19:     ADCON0bits.ADON = 1;
  8948  003846  80C2               	bsf	194,0,c	;volatile
  8949  003848                     l119:
  8950  003848  B2C2               	btfsc	194,1,c	;volatile
  8951  00384A  EF29  F01C         	goto	u5041
  8952  00384E  EF2B  F01C         	goto	u5040
  8953  003852                     u5041:
  8954  003852  EF24  F01C         	goto	l119
  8955  003856                     u5040:
  8956  003856                     
  8957                           ;setting_hardaware/adc.c: 23:     digital = (ADRESH*256) | (ADRESL);
  8958  003856  50C3               	movf	195,w,c	;volatile
  8959  003858  CFC4 F00E          	movff	4036,??_ADC_Read	;volatile
  8960  00385C  6A0F               	clrf	(??_ADC_Read+1)^0,c
  8961  00385E  C00E  F00F         	movff	??_ADC_Read,??_ADC_Read+1
  8962  003862  6A0E               	clrf	??_ADC_Read^0,c
  8963  003864  100E               	iorwf	??_ADC_Read^0,w,c
  8964  003866  6E10               	movwf	ADC_Read@digital^0,c
  8965  003868  500F               	movf	(??_ADC_Read+1)^0,w,c
  8966  00386A  6E11               	movwf	(ADC_Read@digital+1)^0,c
  8967  00386C                     
  8968                           ;setting_hardaware/adc.c: 24:     return(digital);
  8969  00386C  C010  F00C         	movff	ADC_Read@digital,?_ADC_Read
  8970  003870  C011  F00D         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8971  003874  0012               	return		;funcret
  8972  003876                     __end_of_ADC_Read:
  8973                           	opt callstack 0
  8974                           
  8975 ;; *************** function _Mode1 *****************
  8976 ;; Defined at:
  8977 ;;		line 9 in file "main.c"
  8978 ;; Parameters:    Size  Location     Type
  8979 ;;		None
  8980 ;; Auto vars:     Size  Location     Type
  8981 ;;		None
  8982 ;; Return value:  Size  Location     Type
  8983 ;;                  1    wreg      void 
  8984 ;; Registers used:
  8985 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8986 ;; Tracked objects:
  8987 ;;		On entry : 0/0
  8988 ;;		On exit  : 0/0
  8989 ;;		Unchanged: 0/0
  8990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8991 ;;      Params:         0       0       0       0       0       0       0
  8992 ;;      Locals:         0       0       0       0       0       0       0
  8993 ;;      Temps:          0       0       0       0       0       0       0
  8994 ;;      Totals:         0       0       0       0       0       0       0
  8995 ;;Total ram usage:        0 bytes
  8996 ;; Hardware stack levels used:    1
  8997 ;; Hardware stack levels required when called:    6
  8998 ;; This function calls:
  8999 ;;		_ClearBuffer
  9000 ;;		_UART_Write_Text
  9001 ;; This function is called by:
  9002 ;;		_main
  9003 ;; This function uses a non-reentrant model
  9004 ;;
  9005                           
  9006                           	psect	text43
  9007  003998                     __ptext43:
  9008                           	opt callstack 0
  9009  003998                     _Mode1:
  9010                           	opt callstack 24
  9011  003998                     
  9012                           ;main.c: 11:     ClearBuffer();
  9013  003998  ECFD  F01B         	call	_ClearBuffer	;wreg free
  9014  00399C                     
  9015                           ;main.c: 14:     UART_Write_Text("Hello ");
  9016  00399C  0E01               	movlw	low STR_1
  9017  00399E  6E0D               	movwf	UART_Write_Text@text^0,c
  9018  0039A0  0E06               	movlw	high STR_1
  9019  0039A2  6E0E               	movwf	(UART_Write_Text@text+1)^0,c
  9020  0039A4  EC2B  F01A         	call	_UART_Write_Text	;wreg free
  9021  0039A8                     
  9022                           ;main.c: 15:     UART_Write_Text("World!");
  9023  0039A8  0E08               	movlw	low STR_2
  9024  0039AA  6E0D               	movwf	UART_Write_Text@text^0,c
  9025  0039AC  0E06               	movlw	high STR_2
  9026  0039AE  6E0E               	movwf	(UART_Write_Text@text+1)^0,c
  9027  0039B0  EC2B  F01A         	call	_UART_Write_Text	;wreg free
  9028                           
  9029                           ;main.c: 17:     ClearBuffer();
  9030  0039B4  ECFD  F01B         	call	_ClearBuffer	;wreg free
  9031  0039B8  0012               	return		;funcret
  9032  0039BA                     __end_of_Mode1:
  9033                           	opt callstack 0
  9034                           
  9035 ;; *************** function _UART_Write_Text *****************
  9036 ;; Defined at:
  9037 ;;		line 67 in file "setting_hardaware/uart.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;  text            2   12[COMRAM] PTR unsigned char 
  9040 ;;		 -> STR_5(2), str(10), STR_2(7), STR_1(7), 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  i               2   16[COMRAM] int 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9052 ;;      Params:         2       0       0       0       0       0       0
  9053 ;;      Locals:         2       0       0       0       0       0       0
  9054 ;;      Temps:          2       0       0       0       0       0       0
  9055 ;;      Totals:         6       0       0       0       0       0       0
  9056 ;;Total ram usage:        6 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:    5
  9059 ;; This function calls:
  9060 ;;		_UART_Write
  9061 ;; This function is called by:
  9062 ;;		_Mode1
  9063 ;;		_Mode2
  9064 ;; This function uses a non-reentrant model
  9065 ;;
  9066                           
  9067                           	psect	text44
  9068  003456                     __ptext44:
  9069                           	opt callstack 0
  9070  003456                     _UART_Write_Text:
  9071                           	opt callstack 24
  9072  003456                     
  9073                           ;setting_hardaware/uart.c: 68:     for(int i=0;text[i]!='\0';i++)
  9074  003456  0E00               	movlw	0
  9075  003458  6E12               	movwf	(UART_Write_Text@i+1)^0,c
  9076  00345A  0E00               	movlw	0
  9077  00345C  6E11               	movwf	UART_Write_Text@i^0,c
  9078  00345E  EF4B  F01A         	goto	l4068
  9079  003462                     l4064:
  9080                           
  9081                           ;setting_hardaware/uart.c: 69:         UART_Write(text[i]);
  9082  003462  5011               	movf	UART_Write_Text@i^0,w,c
  9083  003464  240D               	addwf	UART_Write_Text@text^0,w,c
  9084  003466  6E0F               	movwf	??_UART_Write_Text^0,c
  9085  003468  5012               	movf	(UART_Write_Text@i+1)^0,w,c
  9086  00346A  200E               	addwfc	(UART_Write_Text@text+1)^0,w,c
  9087  00346C  6E10               	movwf	(??_UART_Write_Text+1)^0,c
  9088  00346E  C00F  FFF6         	movff	??_UART_Write_Text,tblptrl
  9089  003472  C010  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  9090  003476  6AF8               	clrf	tblptru,c
  9091  003478  0E05               	movlw	(high __ramtop+-1)
  9092  00347A  64F7               	cpfsgt	tblptrh,c
  9093  00347C  D003               	bra	u5007
  9094  00347E  0008               	tblrd		*
  9095  003480  50F5               	movf	tablat,w,c
  9096  003482  D005               	bra	u5000
  9097  003484                     u5007:
  9098  003484  CFF6 FFE1          	movff	tblptrl,fsr1l
  9099  003488  CFF7 FFE2          	movff	tblptrh,fsr1h
  9100  00348C  50E7               	movf	indf1,w,c
  9101  00348E                     u5000:
  9102  00348E  EC03  F01D         	call	_UART_Write
  9103  003492  4A11               	infsnz	UART_Write_Text@i^0,f,c
  9104  003494  2A12               	incf	(UART_Write_Text@i+1)^0,f,c
  9105  003496                     l4068:
  9106  003496  5011               	movf	UART_Write_Text@i^0,w,c
  9107  003498  240D               	addwf	UART_Write_Text@text^0,w,c
  9108  00349A  6E0F               	movwf	??_UART_Write_Text^0,c
  9109  00349C  5012               	movf	(UART_Write_Text@i+1)^0,w,c
  9110  00349E  200E               	addwfc	(UART_Write_Text@text+1)^0,w,c
  9111  0034A0  6E10               	movwf	(??_UART_Write_Text+1)^0,c
  9112  0034A2  C00F  FFF6         	movff	??_UART_Write_Text,tblptrl
  9113  0034A6  C010  FFF7         	movff	??_UART_Write_Text+1,tblptrh
  9114  0034AA  6AF8               	clrf	tblptru,c
  9115  0034AC  0E05               	movlw	(high __ramtop+-1)
  9116  0034AE  64F7               	cpfsgt	tblptrh,c
  9117  0034B0  D003               	bra	u5017
  9118  0034B2  0008               	tblrd		*
  9119  0034B4  50F5               	movf	tablat,w,c
  9120  0034B6  D005               	bra	u5010
  9121  0034B8                     u5017:
  9122  0034B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  9123  0034BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  9124  0034C0  50E7               	movf	indf1,w,c
  9125  0034C2                     u5010:
  9126  0034C2  0900               	iorlw	0
  9127  0034C4  A4D8               	btfss	status,2,c
  9128  0034C6  EF67  F01A         	goto	u5021
  9129  0034CA  EF69  F01A         	goto	u5020
  9130  0034CE                     u5021:
  9131  0034CE  EF31  F01A         	goto	l4064
  9132  0034D2                     u5020:
  9133  0034D2  0012               	return		;funcret
  9134  0034D4                     __end_of_UART_Write_Text:
  9135                           	opt callstack 0
  9136                           
  9137 ;; *************** function _UART_Write *****************
  9138 ;; Defined at:
  9139 ;;		line 57 in file "setting_hardaware/uart.c"
  9140 ;; Parameters:    Size  Location     Type
  9141 ;;  data            1    wreg     unsigned char 
  9142 ;; Auto vars:     Size  Location     Type
  9143 ;;  data            1   11[COMRAM] unsigned char 
  9144 ;; Return value:  Size  Location     Type
  9145 ;;                  1    wreg      void 
  9146 ;; Registers used:
  9147 ;;		wreg
  9148 ;; Tracked objects:
  9149 ;;		On entry : 0/0
  9150 ;;		On exit  : 0/0
  9151 ;;		Unchanged: 0/0
  9152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9153 ;;      Params:         0       0       0       0       0       0       0
  9154 ;;      Locals:         1       0       0       0       0       0       0
  9155 ;;      Temps:          0       0       0       0       0       0       0
  9156 ;;      Totals:         1       0       0       0       0       0       0
  9157 ;;Total ram usage:        1 bytes
  9158 ;; Hardware stack levels used:    1
  9159 ;; Hardware stack levels required when called:    4
  9160 ;; This function calls:
  9161 ;;		Nothing
  9162 ;; This function is called by:
  9163 ;;		_UART_Write_Text
  9164 ;; This function uses a non-reentrant model
  9165 ;;
  9166                           
  9167                           	psect	text45
  9168  003A06                     __ptext45:
  9169                           	opt callstack 0
  9170  003A06                     _UART_Write:
  9171                           	opt callstack 24
  9172                           
  9173                           ;incstack = 0
  9174                           ;UART_Write@data stored from wreg
  9175  003A06  6E0C               	movwf	UART_Write@data^0,c
  9176  003A08                     l54:
  9177  003A08  A2AC               	btfss	172,1,c	;volatile
  9178  003A0A  EF09  F01D         	goto	u4961
  9179  003A0E  EF0B  F01D         	goto	u4960
  9180  003A12                     u4961:
  9181  003A12  EF04  F01D         	goto	l54
  9182  003A16                     u4960:
  9183  003A16                     
  9184                           ;setting_hardaware/uart.c: 60:     TXREG = data;
  9185  003A16  C00C  FFAD         	movff	UART_Write@data,4013	;volatile
  9186  003A1A  0012               	return		;funcret
  9187  003A1C                     __end_of_UART_Write:
  9188                           	opt callstack 0
  9189                           
  9190 ;; *************** function _ClearBuffer *****************
  9191 ;; Defined at:
  9192 ;;		line 72 in file "setting_hardaware/uart.c"
  9193 ;; Parameters:    Size  Location     Type
  9194 ;;		None
  9195 ;; Auto vars:     Size  Location     Type
  9196 ;;  i               2   11[COMRAM] int 
  9197 ;; Return value:  Size  Location     Type
  9198 ;;                  1    wreg      void 
  9199 ;; Registers used:
  9200 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9201 ;; Tracked objects:
  9202 ;;		On entry : 0/0
  9203 ;;		On exit  : 0/0
  9204 ;;		Unchanged: 0/0
  9205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9206 ;;      Params:         0       0       0       0       0       0       0
  9207 ;;      Locals:         2       0       0       0       0       0       0
  9208 ;;      Temps:          0       0       0       0       0       0       0
  9209 ;;      Totals:         2       0       0       0       0       0       0
  9210 ;;Total ram usage:        2 bytes
  9211 ;; Hardware stack levels used:    1
  9212 ;; Hardware stack levels required when called:    4
  9213 ;; This function calls:
  9214 ;;		Nothing
  9215 ;; This function is called by:
  9216 ;;		_Mode1
  9217 ;;		_Mode2
  9218 ;;		_main
  9219 ;; This function uses a non-reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text46
  9223  0037FA                     __ptext46:
  9224                           	opt callstack 0
  9225  0037FA                     _ClearBuffer:
  9226                           	opt callstack 25
  9227  0037FA                     
  9228                           ;setting_hardaware/uart.c: 73:     for(int i = 0; i < 10 ; i++)
  9229  0037FA  0E00               	movlw	0
  9230  0037FC  6E0D               	movwf	(ClearBuffer@i+1)^0,c
  9231  0037FE  0E00               	movlw	0
  9232  003800  6E0C               	movwf	ClearBuffer@i^0,c
  9233  003802                     l4076:
  9234                           
  9235                           ;setting_hardaware/uart.c: 74:         mystring[i] = '\0';
  9236  003802  0EDA               	movlw	low _mystring
  9237  003804  240C               	addwf	ClearBuffer@i^0,w,c
  9238  003806  6ED9               	movwf	fsr2l,c
  9239  003808  0E00               	movlw	high _mystring
  9240  00380A  200D               	addwfc	(ClearBuffer@i+1)^0,w,c
  9241  00380C  6EDA               	movwf	fsr2h,c
  9242  00380E  0E00               	movlw	0
  9243  003810  6EDF               	movwf	indf2,c
  9244  003812  4A0C               	infsnz	ClearBuffer@i^0,f,c
  9245  003814  2A0D               	incf	(ClearBuffer@i+1)^0,f,c
  9246  003816  BE0D               	btfsc	(ClearBuffer@i+1)^0,7,c
  9247  003818  EF17  F01C         	goto	u5031
  9248  00381C  500D               	movf	(ClearBuffer@i+1)^0,w,c
  9249  00381E  E109               	bnz	u5030
  9250  003820  0E0A               	movlw	10
  9251  003822  5C0C               	subwf	ClearBuffer@i^0,w,c
  9252  003824  A0D8               	btfss	status,0,c
  9253  003826  EF17  F01C         	goto	u5031
  9254  00382A  EF19  F01C         	goto	u5030
  9255  00382E                     u5031:
  9256  00382E  EF01  F01C         	goto	l4076
  9257  003832                     u5030:
  9258  003832                     
  9259                           ;setting_hardaware/uart.c: 75:     lenStr = 0;
  9260  003832  0E00               	movlw	0
  9261  003834  6E72               	movwf	(_lenStr+1)^0,c
  9262  003836  0E00               	movlw	0
  9263  003838  6E71               	movwf	_lenStr^0,c
  9264  00383A  0012               	return		;funcret
  9265  00383C                     __end_of_ClearBuffer:
  9266                           	opt callstack 0
  9267                           
  9268 ;; *************** function _Lo_ISR *****************
  9269 ;; Defined at:
  9270 ;;		line 92 in file "setting_hardaware/uart.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;		None
  9273 ;; Auto vars:     Size  Location     Type
  9274 ;;		None
  9275 ;; Return value:  Size  Location     Type
  9276 ;;                  1    wreg      void 
  9277 ;; Registers used:
  9278 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9279 ;; Tracked objects:
  9280 ;;		On entry : 0/0
  9281 ;;		On exit  : 0/0
  9282 ;;		Unchanged: 0/0
  9283 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9284 ;;      Params:         0       0       0       0       0       0       0
  9285 ;;      Locals:         0       0       0       0       0       0       0
  9286 ;;      Temps:          5       0       0       0       0       0       0
  9287 ;;      Totals:         5       0       0       0       0       0       0
  9288 ;;Total ram usage:        5 bytes
  9289 ;; Hardware stack levels used:    1
  9290 ;; Hardware stack levels required when called:    3
  9291 ;; This function calls:
  9292 ;;		_MyusartRead
  9293 ;; This function is called by:
  9294 ;;		Interrupt level 1
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           	psect	intcodelo
  9299  000018                     __pintcodelo:
  9300                           	opt callstack 0
  9301  000018                     _Lo_ISR:
  9302                           	opt callstack 18
  9303                           
  9304                           ;incstack = 0
  9305  000018  8073               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  9306  00001A  CFD8 F007          	movff	status,??_Lo_ISR
  9307  00001E  CFE8 F008          	movff	wreg,??_Lo_ISR+1
  9308  000022  CFE0 F009          	movff	bsr,??_Lo_ISR+2
  9309  000026  CFD9 F00A          	movff	fsr2l,??_Lo_ISR+3
  9310  00002A  CFDA F00B          	movff	fsr2h,??_Lo_ISR+4
  9311  00002E                     
  9312                           ;setting_hardaware/uart.c: 94:     if(RCIF)
  9313  00002E  AA9E               	btfss	3998,5,c	;volatile
  9314  000030  EF1C  F000         	goto	i1u533_21
  9315  000034  EF1E  F000         	goto	i1u533_20
  9316  000038                     i1u533_21:
  9317  000038  EF2A  F000         	goto	i1l81
  9318  00003C                     i1u533_20:
  9319  00003C                     
  9320                           ;setting_hardaware/uart.c: 95:     {;setting_hardaware/uart.c: 96:         if(RCSTAbits.
      +                          OERR)
  9321  00003C  A2AB               	btfss	171,1,c	;volatile
  9322  00003E  EF23  F000         	goto	i1u534_21
  9323  000042  EF25  F000         	goto	i1u534_20
  9324  000046                     i1u534_21:
  9325  000046  EF28  F000         	goto	i1l4302
  9326  00004A                     i1u534_20:
  9327  00004A                     
  9328                           ;setting_hardaware/uart.c: 97:         {;setting_hardaware/uart.c: 98:             CREN 
      +                          = 0;
  9329  00004A  98AB               	bcf	4011,4,c	;volatile
  9330                           
  9331                           ;setting_hardaware/uart.c: 99:             __nop();
  9332  00004C  F000               	nop	
  9333                           
  9334                           ;setting_hardaware/uart.c: 100:             CREN = 1;
  9335  00004E  88AB               	bsf	4011,4,c	;volatile
  9336  000050                     i1l4302:
  9337                           
  9338                           ;setting_hardaware/uart.c: 103:         MyusartRead();
  9339  000050  ECDB  F01B         	call	_MyusartRead	;wreg free
  9340  000054                     i1l81:
  9341  000054  C00B  FFDA         	movff	??_Lo_ISR+4,fsr2h
  9342  000058  C00A  FFD9         	movff	??_Lo_ISR+3,fsr2l
  9343  00005C  C009  FFE0         	movff	??_Lo_ISR+2,bsr
  9344  000060  C008  FFE8         	movff	??_Lo_ISR+1,wreg
  9345  000064  C007  FFD8         	movff	??_Lo_ISR,status
  9346  000068  9073               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  9347  00006A  0010               	retfie	
  9348  00006C                     __end_of_Lo_ISR:
  9349                           	opt callstack 0
  9350                           
  9351 ;; *************** function _MyusartRead *****************
  9352 ;; Defined at:
  9353 ;;		line 78 in file "setting_hardaware/uart.c"
  9354 ;; Parameters:    Size  Location     Type
  9355 ;;		None
  9356 ;; Auto vars:     Size  Location     Type
  9357 ;;		None
  9358 ;; Return value:  Size  Location     Type
  9359 ;;                  1    wreg      void 
  9360 ;; Registers used:
  9361 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9362 ;; Tracked objects:
  9363 ;;		On entry : 0/0
  9364 ;;		On exit  : 0/0
  9365 ;;		Unchanged: 0/0
  9366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9367 ;;      Params:         0       0       0       0       0       0       0
  9368 ;;      Locals:         0       0       0       0       0       0       0
  9369 ;;      Temps:          0       0       0       0       0       0       0
  9370 ;;      Totals:         0       0       0       0       0       0       0
  9371 ;;Total ram usage:        0 bytes
  9372 ;; Hardware stack levels used:    1
  9373 ;; Hardware stack levels required when called:    2
  9374 ;; This function calls:
  9375 ;;		i1_UART_Write
  9376 ;;		i1___awmod
  9377 ;; This function is called by:
  9378 ;;		_Lo_ISR
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text48
  9383  0037B6                     __ptext48:
  9384                           	opt callstack 0
  9385  0037B6                     _MyusartRead:
  9386                           	opt callstack 18
  9387  0037B6                     
  9388                           ;setting_hardaware/uart.c: 80:     mystring[lenStr] = RCREG;
  9389  0037B6  0EDA               	movlw	low _mystring
  9390  0037B8  2471               	addwf	_lenStr^0,w,c
  9391  0037BA  6ED9               	movwf	fsr2l,c
  9392  0037BC  0E00               	movlw	high _mystring
  9393  0037BE  2072               	addwfc	(_lenStr+1)^0,w,c
  9394  0037C0  6EDA               	movwf	fsr2h,c
  9395  0037C2  CFAE FFDF          	movff	4014,indf2	;volatile
  9396  0037C6                     
  9397                           ;setting_hardaware/uart.c: 81:     UART_Write(mystring[lenStr]);
  9398  0037C6  0EDA               	movlw	low _mystring
  9399  0037C8  2471               	addwf	_lenStr^0,w,c
  9400  0037CA  6ED9               	movwf	fsr2l,c
  9401  0037CC  0E00               	movlw	high _mystring
  9402  0037CE  2072               	addwfc	(_lenStr+1)^0,w,c
  9403  0037D0  6EDA               	movwf	fsr2h,c
  9404  0037D2  50DF               	movf	indf2,w,c
  9405  0037D4  EC0E  F01D         	call	i1_UART_Write
  9406  0037D8                     
  9407                           ;setting_hardaware/uart.c: 82:     lenStr++;
  9408  0037D8  4A71               	infsnz	_lenStr^0,f,c
  9409  0037DA  2A72               	incf	(_lenStr+1)^0,f,c
  9410  0037DC                     
  9411                           ;setting_hardaware/uart.c: 83:     lenStr %= 10;
  9412  0037DC  C071  F001         	movff	_lenStr,i1___awmod@dividend
  9413  0037E0  C072  F002         	movff	_lenStr+1,i1___awmod@dividend+1
  9414  0037E4  0E00               	movlw	0
  9415  0037E6  6E04               	movwf	(i1___awmod@divisor+1)^0,c
  9416  0037E8  0E0A               	movlw	10
  9417  0037EA  6E03               	movwf	i1___awmod@divisor^0,c
  9418  0037EC  EC2D  F019         	call	i1___awmod	;wreg free
  9419  0037F0  C001  F071         	movff	?i1___awmod,_lenStr
  9420  0037F4  C002  F072         	movff	?i1___awmod+1,_lenStr+1
  9421  0037F8  0012               	return		;funcret
  9422  0037FA                     __end_of_MyusartRead:
  9423                           	opt callstack 0
  9424                           
  9425 ;; *************** function i1___awmod *****************
  9426 ;; Defined at:
  9427 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
  9428 ;; Parameters:    Size  Location     Type
  9429 ;;  dividend        2    0[COMRAM] int 
  9430 ;;  divisor         2    2[COMRAM] int 
  9431 ;; Auto vars:     Size  Location     Type
  9432 ;;  __awmod         1    5[COMRAM] unsigned char 
  9433 ;;  __awmod         1    4[COMRAM] unsigned char 
  9434 ;; Return value:  Size  Location     Type
  9435 ;;                  2    0[COMRAM] int 
  9436 ;; Registers used:
  9437 ;;		wreg, status,2, status,0
  9438 ;; Tracked objects:
  9439 ;;		On entry : 0/0
  9440 ;;		On exit  : 0/0
  9441 ;;		Unchanged: 0/0
  9442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9443 ;;      Params:         4       0       0       0       0       0       0
  9444 ;;      Locals:         2       0       0       0       0       0       0
  9445 ;;      Temps:          0       0       0       0       0       0       0
  9446 ;;      Totals:         6       0       0       0       0       0       0
  9447 ;;Total ram usage:        6 bytes
  9448 ;; Hardware stack levels used:    1
  9449 ;; Hardware stack levels required when called:    1
  9450 ;; This function calls:
  9451 ;;		Nothing
  9452 ;; This function is called by:
  9453 ;;		_MyusartRead
  9454 ;; This function uses a non-reentrant model
  9455 ;;
  9456                           
  9457                           	psect	text49
  9458  00325A                     __ptext49:
  9459                           	opt callstack 0
  9460  00325A                     i1___awmod:
  9461                           	opt callstack 18
  9462  00325A  0E00               	movlw	0
  9463  00325C  6E06               	movwf	i1___awmod@sign^0,c
  9464  00325E  BE02               	btfsc	(i1___awmod@dividend+1)^0,7,c
  9465  003260  EF36  F019         	goto	i1u525_20
  9466  003264  EF34  F019         	goto	i1u525_21
  9467  003268                     i1u525_21:
  9468  003268  EF3C  F019         	goto	i1l4218
  9469  00326C                     i1u525_20:
  9470  00326C  6C01               	negf	i1___awmod@dividend^0,c
  9471  00326E  1E02               	comf	(i1___awmod@dividend+1)^0,f,c
  9472  003270  B0D8               	btfsc	status,0,c
  9473  003272  2A02               	incf	(i1___awmod@dividend+1)^0,f,c
  9474  003274  0E01               	movlw	1
  9475  003276  6E06               	movwf	i1___awmod@sign^0,c
  9476  003278                     i1l4218:
  9477  003278  BE04               	btfsc	(i1___awmod@divisor+1)^0,7,c
  9478  00327A  EF43  F019         	goto	i1u526_20
  9479  00327E  EF41  F019         	goto	i1u526_21
  9480  003282                     i1u526_21:
  9481  003282  EF47  F019         	goto	i1l4222
  9482  003286                     i1u526_20:
  9483  003286  6C03               	negf	i1___awmod@divisor^0,c
  9484  003288  1E04               	comf	(i1___awmod@divisor+1)^0,f,c
  9485  00328A  B0D8               	btfsc	status,0,c
  9486  00328C  2A04               	incf	(i1___awmod@divisor+1)^0,f,c
  9487  00328E                     i1l4222:
  9488  00328E  5003               	movf	i1___awmod@divisor^0,w,c
  9489  003290  1004               	iorwf	(i1___awmod@divisor+1)^0,w,c
  9490  003292  B4D8               	btfsc	status,2,c
  9491  003294  EF4E  F019         	goto	i1u527_21
  9492  003298  EF50  F019         	goto	i1u527_20
  9493  00329C                     i1u527_21:
  9494  00329C  EF74  F019         	goto	i1l4238
  9495  0032A0                     i1u527_20:
  9496  0032A0  0E01               	movlw	1
  9497  0032A2  6E05               	movwf	i1___awmod@counter^0,c
  9498  0032A4  EF58  F019         	goto	i1l4228
  9499  0032A8                     i1l4226:
  9500  0032A8  90D8               	bcf	status,0,c
  9501  0032AA  3603               	rlcf	i1___awmod@divisor^0,f,c
  9502  0032AC  3604               	rlcf	(i1___awmod@divisor+1)^0,f,c
  9503  0032AE  2A05               	incf	i1___awmod@counter^0,f,c
  9504  0032B0                     i1l4228:
  9505  0032B0  AE04               	btfss	(i1___awmod@divisor+1)^0,7,c
  9506  0032B2  EF5D  F019         	goto	i1u528_21
  9507  0032B6  EF5F  F019         	goto	i1u528_20
  9508  0032BA                     i1u528_21:
  9509  0032BA  EF54  F019         	goto	i1l4226
  9510  0032BE                     i1u528_20:
  9511  0032BE                     i1l4230:
  9512  0032BE  5003               	movf	i1___awmod@divisor^0,w,c
  9513  0032C0  5C01               	subwf	i1___awmod@dividend^0,w,c
  9514  0032C2  5004               	movf	(i1___awmod@divisor+1)^0,w,c
  9515  0032C4  5802               	subwfb	(i1___awmod@dividend+1)^0,w,c
  9516  0032C6  A0D8               	btfss	status,0,c
  9517  0032C8  EF68  F019         	goto	i1u529_21
  9518  0032CC  EF6A  F019         	goto	i1u529_20
  9519  0032D0                     i1u529_21:
  9520  0032D0  EF6E  F019         	goto	i1l4234
  9521  0032D4                     i1u529_20:
  9522  0032D4  5003               	movf	i1___awmod@divisor^0,w,c
  9523  0032D6  5E01               	subwf	i1___awmod@dividend^0,f,c
  9524  0032D8  5004               	movf	(i1___awmod@divisor+1)^0,w,c
  9525  0032DA  5A02               	subwfb	(i1___awmod@dividend+1)^0,f,c
  9526  0032DC                     i1l4234:
  9527  0032DC  90D8               	bcf	status,0,c
  9528  0032DE  3204               	rrcf	(i1___awmod@divisor+1)^0,f,c
  9529  0032E0  3203               	rrcf	i1___awmod@divisor^0,f,c
  9530  0032E2  2E05               	decfsz	i1___awmod@counter^0,f,c
  9531  0032E4  EF5F  F019         	goto	i1l4230
  9532  0032E8                     i1l4238:
  9533  0032E8  5006               	movf	i1___awmod@sign^0,w,c
  9534  0032EA  B4D8               	btfsc	status,2,c
  9535  0032EC  EF7A  F019         	goto	i1u530_21
  9536  0032F0  EF7C  F019         	goto	i1u530_20
  9537  0032F4                     i1u530_21:
  9538  0032F4  EF80  F019         	goto	i1l4242
  9539  0032F8                     i1u530_20:
  9540  0032F8  6C01               	negf	i1___awmod@dividend^0,c
  9541  0032FA  1E02               	comf	(i1___awmod@dividend+1)^0,f,c
  9542  0032FC  B0D8               	btfsc	status,0,c
  9543  0032FE  2A02               	incf	(i1___awmod@dividend+1)^0,f,c
  9544  003300                     i1l4242:
  9545  003300  C001  F001         	movff	i1___awmod@dividend,?i1___awmod
  9546  003304  C002  F002         	movff	i1___awmod@dividend+1,?i1___awmod+1
  9547  003308  0012               	return		;funcret
  9548  00330A                     __end_ofi1___awmod:
  9549                           	opt callstack 0
  9550                           
  9551 ;; *************** function i1_UART_Write *****************
  9552 ;; Defined at:
  9553 ;;		line 57 in file "setting_hardaware/uart.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  data            1    wreg     unsigned char 
  9556 ;; Auto vars:     Size  Location     Type
  9557 ;;  data            1    0[COMRAM] unsigned char 
  9558 ;; Return value:  Size  Location     Type
  9559 ;;                  1    wreg      void 
  9560 ;; Registers used:
  9561 ;;		wreg
  9562 ;; Tracked objects:
  9563 ;;		On entry : 0/0
  9564 ;;		On exit  : 0/0
  9565 ;;		Unchanged: 0/0
  9566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9567 ;;      Params:         0       0       0       0       0       0       0
  9568 ;;      Locals:         1       0       0       0       0       0       0
  9569 ;;      Temps:          0       0       0       0       0       0       0
  9570 ;;      Totals:         1       0       0       0       0       0       0
  9571 ;;Total ram usage:        1 bytes
  9572 ;; Hardware stack levels used:    1
  9573 ;; Hardware stack levels required when called:    1
  9574 ;; This function calls:
  9575 ;;		Nothing
  9576 ;; This function is called by:
  9577 ;;		_MyusartRead
  9578 ;; This function uses a non-reentrant model
  9579 ;;
  9580                           
  9581                           	psect	text50
  9582  003A1C                     __ptext50:
  9583                           	opt callstack 0
  9584  003A1C                     i1_UART_Write:
  9585                           	opt callstack 18
  9586                           
  9587                           ;incstack = 0
  9588                           ;i1UART_Write@data stored from wreg
  9589  003A1C  6E01               	movwf	i1UART_Write@data^0,c
  9590  003A1E                     i1l54:
  9591  003A1E  A2AC               	btfss	172,1,c	;volatile
  9592  003A20  EF14  F01D         	goto	i1u524_21
  9593  003A24  EF16  F01D         	goto	i1u524_20
  9594  003A28                     i1u524_21:
  9595  003A28  EF0F  F01D         	goto	i1l54
  9596  003A2C                     i1u524_20:
  9597  003A2C                     
  9598                           ;setting_hardaware/uart.c: 60:     TXREG = data;
  9599  003A2C  C001  FFAD         	movff	i1UART_Write@data,4013	;volatile
  9600  003A30  0012               	return		;funcret
  9601  003A32                     __end_ofi1_UART_Write:
  9602                           	opt callstack 0
  9603                           
  9604 ;; *************** function _Hi_ISR *****************
  9605 ;; Defined at:
  9606 ;;		line 66 in file "main.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;		None
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      void 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9620 ;;      Params:         0       0       0       0       0       0       0
  9621 ;;      Locals:         0       0       0       0       0       0       0
  9622 ;;      Temps:          0       0       0       0       0       0       0
  9623 ;;      Totals:         0       0       0       0       0       0       0
  9624 ;;Total ram usage:        0 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		Interrupt level 2
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	intcode
  9634  000008                     __pintcode:
  9635                           	opt callstack 0
  9636  000008                     _Hi_ISR:
  9637                           	opt callstack 18
  9638                           
  9639                           ;incstack = 0
  9640  000008  8273               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  9641  00000A  EDDD  F01C         	call	int_func,f	;refresh shadow registers
  9642                           
  9643                           	psect	intcode_body
  9644  0039BA                     __pintcode_body:
  9645                           	opt callstack 18
  9646  0039BA                     int_func:
  9647                           	opt callstack 18
  9648  0039BA  0006               	pop		; remove dummy address from shadow register refresh
  9649  0039BC                     
  9650                           ;main.c: 68:     if(PIR1bits.CCP1IF == 1) {
  9651  0039BC  A49E               	btfss	158,2,c	;volatile
  9652  0039BE  EFE3  F01C         	goto	i2u269_41
  9653  0039C2  EFE5  F01C         	goto	i2u269_40
  9654  0039C6                     i2u269_41:
  9655  0039C6  EFEB  F01C         	goto	i2l177
  9656  0039CA                     i2u269_40:
  9657  0039CA                     
  9658                           ;main.c: 69:         RC2 ^= 1;
  9659  0039CA  7482               	btg	3970,2,c	;volatile
  9660                           
  9661                           ;main.c: 70:         PIR1bits.CCP1IF = 0;
  9662  0039CC  949E               	bcf	158,2,c	;volatile
  9663  0039CE                     
  9664                           ;main.c: 71:         TMR3 = 0;
  9665  0039CE  0E00               	movlw	0
  9666  0039D0  6EB3               	movwf	179,c	;volatile
  9667  0039D2  0E00               	movlw	0
  9668  0039D4  6EB2               	movwf	178,c	;volatile
  9669  0039D6                     i2l177:
  9670  0039D6  9273               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  9671  0039D8  0011               	retfie		f
  9672  0039DA                     __end_of_Hi_ISR:
  9673                           	opt callstack 0
  9674                           
  9675                           	psect	rparam
  9676  0000                     
  9677                           	psect	temp
  9678  000073                     btemp:
  9679                           	opt callstack 0
  9680  000073                     	ds	1
  9681  0000                     int$flags	set	btemp
  9682  0000                     wtemp8	set	btemp+1
  9683  0000                     ttemp5	set	btemp+1
  9684  0000                     ttemp6	set	btemp+4
  9685  0000                     ttemp7	set	btemp+8
  9686                           tosu	equ	0xFFF
  9687                           tosh	equ	0xFFE
  9688                           tosl	equ	0xFFD
  9689                           stkptr	equ	0xFFC
  9690                           pclatu	equ	0xFFB
  9691                           pclath	equ	0xFFA
  9692                           pcl	equ	0xFF9
  9693                           tblptru	equ	0xFF8
  9694                           tblptrh	equ	0xFF7
  9695                           tblptrl	equ	0xFF6
  9696                           tablat	equ	0xFF5
  9697                           prodh	equ	0xFF4
  9698                           prodl	equ	0xFF3
  9699                           indf0	equ	0xFEF
  9700                           postinc0	equ	0xFEE
  9701                           postdec0	equ	0xFED
  9702                           preinc0	equ	0xFEC
  9703                           plusw0	equ	0xFEB
  9704                           fsr0h	equ	0xFEA
  9705                           fsr0l	equ	0xFE9
  9706                           wreg	equ	0xFE8
  9707                           indf1	equ	0xFE7
  9708                           postinc1	equ	0xFE6
  9709                           postdec1	equ	0xFE5
  9710                           preinc1	equ	0xFE4
  9711                           plusw1	equ	0xFE3
  9712                           fsr1h	equ	0xFE2
  9713                           fsr1l	equ	0xFE1
  9714                           bsr	equ	0xFE0
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           postdec2	equ	0xFDD
  9718                           preinc2	equ	0xFDC
  9719                           plusw2	equ	0xFDB
  9720                           fsr2h	equ	0xFDA
  9721                           fsr2l	equ	0xFD9
  9722                           status	equ	0xFD8


Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         128
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    104     114
    BANK0           128     82     120
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           244      0       0

Pointer List with Targets:

    strchr@s	PTR const unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), mystring(BANK0[20]), 

    sp__strchr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), mystring(BANK0[20]), 

    strstr@h	PTR const unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), mystring(BANK0[20]), 

    strstr@n	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), STR_3(CODE[2]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[3]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_3(CODE[2]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_19(CODE[3]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_3(CODE[2]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(COMRAM[3]), NULL(NULL[0]), mystring(BANK0[20]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 20
		 -> vfpfcnvrt@ct(COMRAM[3]), NULL(NULL[0]), mystring(BANK0[20]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_3(CODE[2]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[6]), 
		 -> STR_3(CODE[2]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    S1483_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    memset@dest	PTR void  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    memset@s	PTR unsigned char  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__memset	PTR void  size(2) Largest target is 10
		 -> str(BANK0[10]), 

    sp__strstr	PTR unsigned char  size(2) Largest target is 20
		 -> NULL(NULL[0]), mystring(BANK0[20]), 

    UART_Write_Text@text	PTR unsigned char  size(2) Largest target is 10
		 -> STR_5(CODE[2]), str(BANK0[10]), STR_2(CODE[7]), STR_1(CODE[7]), 

    sp__GetString	PTR unsigned char  size(2) Largest target is 20
		 -> mystring(BANK0[20]), 


Critical Paths under _main in COMRAM

    _strstr->_strncmp
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    _atoi->_isspace
    _Mode1->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _Lo_ISR in COMRAM

    _MyusartRead->i1___awmod

Critical Paths under _Hi_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_Mode2
    _Mode2->_sprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _Lo_ISR in BANK0

    None.

Critical Paths under _Hi_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Lo_ISR in BANK1

    None.

Critical Paths under _Hi_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Lo_ISR in BANK2

    None.

Critical Paths under _Hi_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Lo_ISR in BANK3

    None.

Critical Paths under _Hi_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Lo_ISR in BANK4

    None.

Critical Paths under _Hi_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Lo_ISR in BANK5

    None.

Critical Paths under _Hi_ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   48294
                        _ClearBuffer
                          _GetString
                              _Mode1
                              _Mode2
                  _SYSTEM_Initialize
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                     _ADC_Initialize
                    _CCP1_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
                    _UART_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CCP1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Mode2                                                8     8      0   45291
                                             74 BANK0      8     8      0
                           _ADC_Read
                        _ClearBuffer
                          _GetString
                    _UART_Write_Text
                            ___flmul
                           ___xxtofl
                             _memset
                            _sprintf
                             _strstr
 ---------------------------------------------------------------------------------
 (1) _strstr                                               6     2      4    2451
                                             22 COMRAM     6     2      4
                          _GetString (ARG)
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strchr                                               5     1      4     240
                                             11 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             18    10      8   37357
                                             56 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6   36853
                                             96 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           48    42      6   36326
                                             74 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (2) _strncmp                                             11     5      6     865
                                             11 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              68    61      7   29247
                                             62 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (5) _tolower                                              8     6      2    1142
                                             17 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (6) _isupper                                              6     4      2     551
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) _strcpy                                              10     6      4    1037
                                             11 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    4047
                                             27 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               4     2      2     310
                                             11 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1537
                                             20 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4    1037
                                             11 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             36 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     517
                                             11 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (6) ___flsub                                              8     0      8    4007
                                             50 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fladd                                             16     8      8    3442
                                             11 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                             11 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (6) ___flmul                                             25    17      8    3413
                                             25 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     806
                                             50 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                             11 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2723
                                             11 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              6     2      4     723
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4     625
                                             11 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) _atoi                                                15    13      2    1515
                                             18 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (6) _isspace                                              7     5      2     259
                                             11 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              6     4      2     281
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                             11 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _memset                                              12     6      6     947
                                             11 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                             11 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) _GetString                                            2     0      2       0
                                             11 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             6     4      2      99
                                             11 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Mode1                                                0     0      0     484
                        _ClearBuffer
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (2) _UART_Write_Text                                      6     4      2     416
                                             12 COMRAM     6     4      2
                         _UART_Write
 ---------------------------------------------------------------------------------
 (3) _UART_Write                                           1     1      0      22
                                             11 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ClearBuffer                                          2     2      0      68
                                             11 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _Lo_ISR                                              5     5      0     370
                                              6 COMRAM     5     5      0
                        _MyusartRead
 ---------------------------------------------------------------------------------
 (11) _MyusartRead                                         0     0      0     370
                       i1_UART_Write
                          i1___awmod
 ---------------------------------------------------------------------------------
 (12) i1___awmod                                           6     2      4     348
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (12) i1_UART_Write                                        1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _Hi_ISR                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 13
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ClearBuffer
   _GetString
   _Mode1
     _ClearBuffer
     _UART_Write_Text
       _UART_Write
   _Mode2
     _ADC_Read
     _ClearBuffer
     _GetString
     _UART_Write_Text
       _UART_Write
     ___flmul
       ___xxtofl (ARG)
     ___xxtofl
     _memset
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             ___wmul
             _isdigit
             _isspace
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _isupper
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
                   _putch
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
           _isdigit
           _isupper
           _strncmp
           _tolower
             _isupper
     _strstr
       _GetString (ARG)
       _strchr (ARG)
       _strlen (ARG)
       _strncmp (ARG)
   _SYSTEM_Initialize
     _ADC_Initialize
     _CCP1_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _UART_Initialize
   _strstr
     _GetString (ARG)
     _strchr (ARG)
     _strlen (ARG)
     _strncmp (ARG)

 _Lo_ISR (ROOT)
   _MyusartRead
     i1_UART_Write
     i1___awmod

 _Hi_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5F3      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK4           100      0       0      11        0.0%
BANK4              100      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      50       6       31.2%
BITBANK5            F4      0       0      15        0.0%
BANK5               F4      0       0      13        0.0%
BITBANK0            80      0       0       3        0.0%
BANK0               80     52      78       4       93.8%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     68      72       1       90.5%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     13A      14        0.0%
DATA                 0      0     13A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Dec 14 05:18:04 2019

                  ___fldiv@aexp 0024                    ___fldiv@bexp 0023                    ___fldiv@sign 001C  
                            l15 39EE                              l18 3A4E                              l51 3996  
                            l60 3A46                              l54 3A08                              l71 383A  
                            l57 3A1A                              l66 34D2                              l88 3A56  
                            l99 3A3C                    ___awdiv@sign 0011                              bsr 000FE0  
           ___wmul@multiplicand 000E                     __CFG_BORV$3 000000                    __CFG_CP0$OFF 000000  
                  __CFG_CP1$OFF 000000         __end_of_CCP1_Initialize 3A3E                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                             l122 3874                             l116 3A04  
                           l221 30AE                             l119 3848                             l223 30E8  
                           l241 11EC                             l218 306C                             l331 1B0A  
                           l149 39B8                             l165 344E                             l158 2ABA  
                           l344 3588                             l345 3590                             l338 1A54  
                           l259 0A28                             l348 3974                             l613 2C7E  
                           l285 0DC0                             l622 38E4                             l607 33B2  
                           l618 2CC4                             l645 2BC0                             l902 15C6  
                           l903 15B4                             l592 3258                             l930 22CE  
                           l579 3026                             l932 212E                             l941 2174  
                           l918 3770                             l943 21EC                             l935 20F2  
                           l944 21DA                             l962 1BD0                             l971 1E3E  
                           l972 1E2C                             l876 13DC                             l893 14F6  
                           l885 16AC                             l877 13CA                             l966 1F34  
                           l878 1390                             l969 1DC6                             l979 1EF6  
                  __CFG_CPB$OFF 000000                             _RC2 007C12                    __CFG_CPD$OFF 000000  
                           _pad 3028                             _str 00EE                    ___awmod@sign 0011  
                           wreg 000FE8                    __CFG_IESO$ON 000000                    ___flmul@aexp 0027  
                  ___flmul@bexp 002C                    ___flmul@sign 0026                    ___flmul@temp 0031  
                  ___flmul@prod 002D                    __CFG_LVP$OFF 000000                    ___fltol@exp1 0015  
                  __CFG_WDT$OFF 000000                            l1010 25D0                            l1003 2538  
                          l1006 2694                            l1017 262C                            l1131 363E  
                          l1116 2F62                            l1124 37B4                            l1140 35EC  
                          l1061 2824                            l1029 2DC2                            l1070 2424  
                          l1134 3A58                            l1150 2E98                            l1058 281C  
                          l1146 36DE                            l1067 24E0                            l1091 38AC  
                          l1077 391C                            l1085 3690                            l1181 3532  
                          l1176 352A                            l1168 31A8                            l1098 299A  
                          l1187 36E0                            l1189 372A                            l4200 2682  
                          l4120 2844                            l5000 31C8                            l4034 3A08  
                          l4202 2684                            l4122 2850                            l5010 3200  
                          l5002 31D6                            l4036 3A16                            l4140 2972  
                          l4132 28F8                            l4116 2826                            l5012 320E  
                          l5020 3238                            l5004 31DE                            l5100 2B60  
                          l4052 3706                            l2460 3976                            l4070 37FA  
                          l4062 3456                            l4142 297E                            l4134 2924  
                          l4126 2886                            l5022 3248                            l5014 3224  
                          l5006 31F0                            l5030 3338                            l5110 2B90  
                          l4054 3722                            l4046 36E0                            l2470 398A  
                          l2462 3980                            l4080 3816                            l4064 3462  
                          l4160 24E4                            l4144 2984                            l4128 28DE  
                          l5120 3644                            l5024 3250                            l5016 322C  
                          l5008 31F8                            l5040 33B0                            l5032 3348  
                          l4400 126E                            l5112 2BA0                            l4048 36FA  
                          l2456 3A48                            l2480 3994                            l2472 398C  
                          l2464 3984                            l4082 3832                            l4066 3492  
                          l4090 3856                            l4058 3A3E                            l4162 24F4  
                          l4146 2988                            l4138 293E                            l5122 3658  
                          l5018 3232                            l5034 3376                            l5050 2C2E  
                          l4410 12A4                            l4402 1274                            l5114 2BB0  
                          l5106 2B74                            l5210 0988                            l5202 08C0  
                          l5130 063C                            l2490 39F0                            l2482 3A32  
                          l2458 3A50                            l2474 398E                            l2466 3986  
                          l4076 3802                            l4068 3496                            l4260 39A8  
                          l4092 386C                            l4084 383C                            l4180 25BA  
                          l4172 2572                            l4164 2502                            l5124 3686  
                          l5036 3386                            l5028 330A                            l5060 2CBC  
                          l5052 2C3E                            l5044 2BC2                            l4500 146A  
                          l4420 12E0                            l4412 12B4                            l4404 1282  
                          l5108 2B80                            l4340 2E9A                            l5300 0DB8  
                          l5220 09E8                            l5212 0990                            l5204 08F4  
                          l5140 0690                            l5132 0646                            l2492 39F2  
                          l2484 3A34                            l2476 3990                            l2468 3988  
                          l4078 3812                            l4086 3844                            l4190 263A  
                          l4182 25C6                            l4174 257A                            l4166 2548  
                          l5126 368A                            l5118 3640                            l5038 33AA  
                          l5062 2CC2                            l5054 2C4C                            l5046 2BF0  
                          l5070 38D4                            l4502 1490                            l4510 14E6  
                          l4430 12FE                            l4422 12EE                            l4414 12B6  
                          l4406 1284                            l4350 2F1C                            l4342 2EAC  
                          l5310 0E74                            l5302 0DDC                            l5222 09FA  
                          l5206 08FA                            l5214 09C2                            l5150 06D4  
                          l5142 069A                            l5134 0656                            l2494 39F6  
                          l2486 3A38                            l2478 3992                            l4256 3998  
                          l4088 3846                            l4192 263C                            l4184 2602  
                          l4176 2586                            l4168 255E                            l5056 2C5E  
                          l5048 2C00                            l4520 153A                            l4512 150C  
                          l4504 14C4                            l4440 1312                            l4432 1302  
                          l4424 12F2                            l4408 1294                            l4416 12BE  
                          l5080 2AE6                            l4600 2CC6                            l4344 2EBE  
                          l4360 3794                            l5400 1138                            l5320 0EBC  
                          l5312 0E82                            l5304 0E40                            l5240 0AAA  
                          l5224 0A02                            l5216 09D2                            l5208 0954  
                          l5152 06E0                            l5160 06F6                            l5144 06A2  
                          l5136 0664                            l2488 3A3A                            l4258 399C  
                          l4194 2640                            l4186 260E                            l4178 25B8  
                          l5058 2C6C                            l5066 38AE                            l4530 1564  
                          l4522 1548                            l4514 151C                            l4506 14C6  
                          l4450 1326                            l4442 1316                            l4434 1306  
                          l4426 12F6                            l4418 12CE                            l5090 2B34  
                          l5082 2B10                            l5074 2ABC                            l4602 2CE6  
                          l4346 2EC8                            l4354 3772                            l4362 3692  
                          l5402 1140                            l5330 0EE6                            l5322 0EC0  
                          l5306 0E4E                            l5314 0E8A                            l5250 0AE2  
                          l5242 0AB2                            l5234 0A46                            l5226 0A1C  
                          l5218 09D6                            l5170 0780                            l5162 071C  
                          l5154 06E8                            l5146 06B4                            l5138 066C  
                          l2690 39EA                            l4196 2664                            l4188 261C  
                          l4700 1FB8                            l5068 38C4                            l4540 1596  
                          l4532 1574                            l4524 154A                            l4508 14D6  
                          l4460 1378                            l4452 132A                            l4444 131A  
                          l4436 130A                            l4428 12FA                            l4380 1208  
                          l5084 2B12                            l5076 2AD2                            l4604 2D24  
                          l4612 2D64                            l4348 2EE6                            l4356 377E  
                          l4364 369E                            l4372 3876                            l5420 11C6  
                          l5412 1190                            l5404 1150                            l5340 0F1A  
                          l5332 0EEC                            l5324 0EC6                            l5316 0E9E  
                          l5308 0E62                            l5260 0B2C                            l5252 0AF0  
                          l5236 0A58                            l5244 0AB6                            l5228 0A34  
                          l5180 07F0                            l5172 0798                            l5156 06EC  
                          l5148 06C2                            l5500 1718                            l2684 39DA  
                          l4198 2674                            l5430 26AA                            l4702 1FC8  
                          l4710 1FF2                            l4550 15F0                            l4542 15AC  
                          l4526 1558                            l4518 1530                            l4534 1576  
                          l4470 13BC                            l4462 1388                            l4446 131E  
                          l4438 130E                            l4454 132E                            l4390 123C  
                          l4382 120A                            l5086 2B22                            l4614 2D76  
                          l4606 2D4C                            l4358 3790                            l4366 36A2  
                          l4622 3592                            l4630 350A                            l5422 11CC  
                          l5414 11A2                            l5406 1156                            l5326 0ED2  
                          l5318 0EAC                            l5334 0EF2                            l5342 0F20  
                          l5350 0FB8                            l5270 0B72                            l5262 0B3E  
                          l5254 0AF4                            l5246 0ABE                            l5238 0A74  
                          l5174 07A2                            l5166 0752                            l5158 06F0  
                          l5510 17AC                            l5502 1720                            l2686 39E2  
                          ?_pad 001C                            l5440 2708                            l5432 26AE  
                          l4800 22BC                            l4720 2034                            l4712 2002  
                          l4704 1FD8                            l4560 166C                            l4552 162A  
                          l4528 1560                            l4536 1584                            l4472 13BE  
                          l4464 139E                            l4456 1332                            l4448 1322  
                          l4384 121A                            l4392 1244                            l4376 11EE  
                          l5096 2B4C                            l5088 2B26                            l4608 2D58  
                          l4640 2346                            l4368 36D2                            l4624 35A2  
                          l4632 351C                            l5416 11AE                            l5408 115C  
                          l5360 1022                            l5352 0FD6                            l5344 0F78  
                          l5336 0F04                            l5328 0EE2                            l5280 0C86  
                          l5272 0BD6                            l5256 0B06                            l5264 0B46  
                          l5248 0AD0                            l5184 0826                            l5168 0764  
                          l5520 1832                            l5512 17BA                            l5504 172E  
                          l5600 3176                            l2688 39E6                            l5450 2734  
                          l5434 26B2                            l4802 22C2                            l4714 2018  
                          l4706 1FE8                            l4570 168C                            l4562 1670  
                          l4546 15D6                            l4554 162C                            l4538 1588  
                          l4490 1446                            l4482 140E                            l4474 13C8  
                          l4466 13AA                            l4458 135C                            l4394 1254  
                          l4386 122A                            l4378 11FA                            l5098 2B56  
                          l4618 2DBA                            l4650 2414                            l4642 235A  
                          l4626 34D4                            l5418 11B6                            l5370 1060  
                          l5362 1026                            l5354 0FF2                            l5346 0FAC  
                          l5338 0F16                            l5290 0D44                            l5282 0CBA  
                          l5274 0C2E                            l5266 0B4E                            l5258 0B14  
                          l5186 0838                            l5178 07CA                            l5530 18C4  
                          l5522 1842                            l5506 1752                            l5610 3600  
                          l5602 3188                            l5460 27DC                            l5452 2768  
                          l5444 270E                            l5436 26CE                            l5428 2696  
                          l4804 22C4                            l4740 20B6                            l4732 206C  
                          l4716 2028                            l4724 2048                            l4708 1FEA  
                          l4900 1DD6                            l4820 1B38                            l4812 1B0C  
                          l4572 169A                            l4564 167E                            l4556 163C  
                          l4548 15E2                            l4492 144A                            l4484 141E  
                          l4476 13EA                            l4468 13AE                            l4396 125A  
                          l4388 123A                            l4660 24D0                            l4644 2368  
                          l4652 2448                            l4636 22D0                            l4580 3036  
                          l5380 1092                            l5372 1068                            l5364 1036  
                          l5356 1004                            l5348 0FB4                            l5292 0D54  
                          l5284 0CEC                            l5276 0C62                            l5268 0B5E  
                          l5188 0854                            l5196 0870                            l5532 18DA  
                          l5540 1944                            l5524 1872                            l5516 1800  
                          l5508 178C                            l5612 3608                            l5604 31A0  
                          l5620 299C                            l4670 396C                            l5462 27EE  
                          l5446 2724                            l5438 2704                            l4750 20FC  
                          l4742 20BE                            l4734 2086                            l4726 2058  
                          l4718 2030                            l4902 1DE4                            l4830 1B74  
                          l4822 1B48                            l4814 1B18                            l4574 169C  
                          l4566 1684                            l4558 164C                            l4494 1458  
                          l4486 142C                            l4478 13FA                            l4398 126C  
                          l4654 2484                            l4638 22F0                            l4590 308C  
                          l4582 304A                            l5382 1098                            l5390 10E8  
                          l5374 1076                            l5366 1048                            l5358 1012  
                          l5294 0D88                            l5286 0D02                            l5278 0C68  
                          l5198 088A                            l5470 2DC4                            l5550 1A24  
                          l5542 1972                            l5534 18E8                            l5526 1882  
                          l5518 1812                            l5614 3610                            l5630 29CE  
                          l5622 29A0                            l4664 38E6                            l5464 2800  
                          l5456 279E                            l5448 272C                            l4760 2154  
                          l4752 211A                            l4744 20CE                            l4736 2096  
                          l4728 2058                            l4680 1F52                            l4912 1E4E  
                          l4920 1E96                            l4904 1DE8                            l4840 1BAA  
                          l4832 1B7A                            l4824 1B58                            l4816 1B26  
                          l4568 1686                            l4496 145A                            l4488 143A  
                          l4656 2498                            l4648 23D8                            l4592 3090  
                          l4584 3058                            l5392 10FA                            l5384 10BE  
                          l5376 107E                            l5368 1050                            l5296 0D98  
                          l5288 0D34                            l5480 2E20                            l5472 2DEE  
                          l5560 1A9A                            l5536 1918                            l5528 18B2  
                          l5616 362C                            l5608 35EE                            l5640 2A7C  
                          l5632 29E2                            l5624 29A0                            l4770 2192  
                          l4762 215A                            l4754 211C                            l4746 20E2  
                          l4738 20A6                            l4682 1F62                            l4690 1F8C  
                          l4674 1F36                            l4930 1F0A                            l4922 1EB0  
                          l4914 1E5A                            l4906 1DF6                            l4842 1BBA  
                          l4834 1B88                            l4826 1B5E                            l4818 1B28  
                          l4498 1464                            l4658 24C0                            l4594 30BC  
                          l4586 3064                            l4578 3028                            l5394 1114  
                          l5386 10DA                            l5378 1086                            l5298 0DAC  
                          l5482 2E3C                            l5562 1AAE                            l5546 19DE  
                          l5490 16AE                            l5650 2A96                            l5642 2A88  
                          l5634 2A2E                            l5626 29A0                            l4668 3950  
                          l4780 21FC                            l4772 2196                            l4764 2164  
                          l4756 212C                            l4748 20F0                            l4692 1F9C  
                          l4684 1F72                            l4676 1F42                            l4932 1F18  
                          l4924 1EC4                            l4916 1E68                            l4908 1E24  
                          l4860 1C3C                            l4852 1C04                            l4844 1BC0  
                          l4836 1B8A                            l4828 1B6E                            l4596 30D0  
                          l4588 3078                            l5396 111A                            l5388 10E2  
                          l5484 2E4E                            l5476 2DFA                            l5548 19F0  
                          l5556 1A68                            l5492 16D2                            l5572 1AD4  
                          l5580 3534                            l5636 2A4A                            l5652 2AB6  
                          l5660 33EA                            l4950 2F68                            l4790 225E  
                          l4782 2208                            l4774 21A4                            l4766 2172  
                          l4758 213E                            l4694 1FA2                            l4686 1F82  
                          l4678 1F50                            l4934 1F1A                            l4926 1EDE  
                          l4918 1E92                            l4870 1C86                            l4862 1C54  
                          l4854 1C10                            l4846 1BE0                            l4838 1B9A  
                          l4942 372C                            l5398 112C                            l5486 2E76  
                          l5478 2E08                            l5574 1AF8                            l5558 1A8C  
                          l5566 1ABA                            l5494 16E0                            l5582 353C  
                          l5590 30FC                            l5638 2A70                            l5662 3414  
                          l5654 33B4                            l4960 2F98                            l4952 2F76  
                          l4792 2274                            l4784 2216                            l4776 21D2  
                          l4768 2184                            l4696 1FA8                            l4688 1F84  
                          l4928 1EFA                            l4936 1F20                            l4880 1CDC  
                          l4872 1C96                            l4864 1C60                            l4856 1C1A  
                          l4848 1BF0                            l4944 373C                            l5568 1AC8  
                          l5496 16F0                            l5584 3548                            l5592 3114  
                          l5648 2A92                            l5664 341C                            l5656 33B8  
                          _ADFM 007E07                            l4970 2FC6                            l4962 2F9C  
                          l4954 2F7E                            l4794 228E                            l4786 2240  
                          l4698 1FB6                            l4938 1F24                            l4890 1D80  
                          l4882 1CF8                            l4874 1CA2                            l4866 1C6C  
                          l4858 1C30                            l5498 16F4                            l5586 356C  
                          l5594 3142                            l5666 3446                            l5658 33E2  
                          l4980 2FFA                            l4972 2FD4                            l4964 2FA4  
                          l4956 2F82                            l4948 2F64                            l4796 22AA  
                          l4788 2244                            l4892 1D8E                            l4884 1D04  
                          l4876 1CB2                            l4868 1C7A                            l5588 30EA  
                          l4982 3000                            l4974 2FDA                            l4966 2FB6  
                          l4958 2F90                            l4798 22AE                            l4894 1DAC  
                          l4886 1D20                            l4878 1CCC                            l5598 314E  
                          l5688 2752                            l4976 2FF0                            l4968 2FBE  
                          l4984 3006                            l4992 31AA                            l4896 1DB6  
                          l4888 1D4A                            l4986 3016                            l4978 2FF8  
                          l4994 31AE                            l4898 1DC4                            l4988 301E  
                          l4996 31BC                            l4998 31C4                            STR_1 0601  
                          STR_2 0608                            STR_3 0639                            STR_4 0621  
                          STR_5 0606                            STR_6 061B                            STR_7 060F  
                          STR_8 0615                            STR_9 0626                            _CREN 007D5C  
                          u5000 348E                            u5010 34C2                            u5020 34D2  
                          u5100 2882                            u5021 34CE                            u5101 287E  
                          u5030 3832                            u5110 28F4                            u5031 382E  
                          u5007 3484                            u5111 28F0                            u5040 3856  
                          u5200 262C                            u5120 293A                            u6000 3506  
                          u5017 34B8                            u5041 3852                            u5201 2628  
                          u5121 2936                            u5210 263A                            u5130 299A  
                          u6010 351C                            u5211 2636                            u5131 2996  
                          u6011 3518                            u5220 2674                            u5140 24F4  
                          u6100 2484                            u6020 2318                            u5221 2670  
                          u5141 24F0                            u6101 2480                            u5230 2682  
                          u5150 2502                            u6110 24C0                            u6030 2346  
                          u5231 267E                            u5151 24FE                            u6111 24BC  
                          u6031 2342                            u5160 255E                            u6120 3916  
                          u6200 2018                            u6040 2368                            u5400 2EE6  
                          u7000 09C2                            u5161 255A                            u6121 3910  
                          u6201 2014                            u6041 2364                            u6025 230E  
                          u5401 2EE2                            u7001 09BE                            u5170 25B4  
                          u5090 2840                            u6130 3918                            u6210 2058  
                          u5410 2F1C                            u7010 09E8                            u5171 25B0  
                          u5091 283C                            u6211 2054                            u5411 2F18  
                          u7011 09E4                            u5180 25FE                            u6300 21D2  
                          u6220 20CE                            u6140 1F50                            u5500 126C  
                          u6060 23D4                            u5420 37B4                            u7100 0AF0  
                          u7020 09FA                            u5181 25FA                            u6301 21CE  
                          u6221 20CA                            u6141 1F4C                            u5501 1268  
                          u6061 23D0                            u5421 37B0                            u7101 0AEC  
                          u7021 09F6                            u5190 261C                            u6310 21E8  
                          u6230 20F0                            u6150 1F62                            u5510 1282  
                          u6070 23F8                            u5430 36C2                            u7110 0B06  
                          u7030 0A1C                            u5191 2618                            u6311 21E4  
                          u6231 20EC                            u6151 1F5E                            u5511 127E  
                          u6055 237C                            u7111 0B02                            u7031 0A18  
                          u6320 21FC                            u6240 211A                            u6160 1F72  
                          u6400 1B88                            u5600 13BC                            u5520 1294  
                          u6080 2414                            u6056 2386                            u5440 36D2  
                          u7200 0E62                            u7120 0B14                            u7040 0A42  
                          u6321 21F8                            u6241 2116                            u6161 1F6E  
                          u6401 1B84                            u5601 13B8                            u5521 1290  
                          u6081 2410                            u6057 2396                            u5441 36CE  
                          u7201 0E5E                            u7121 0B10                            u7041 0A3E  
                          u6330 2216                            u6250 213E                            u6170 1FB6  
                          u6410 1B9A                            u5610 13DC                            u5530 12A4  
                          u6090 2468                            u5450 38A6                            u7210 0E74  
                          u7130 0B3E                            u7050 0A58                            u6331 2212  
                          u6251 213A                            u6171 1FB2                            u6411 1B96  
                          u5611 13D8                            u5531 12A0                            u6075 23EE  
                          u5451 38A0                            u7211 0E70                            u7131 0B3A  
                          u7051 0A54                            u6340 225E                            u6260 2154  
                          u6180 1FC8                            u6500 1E3A                            u6420 1BAA  
                          u5700 151C                            u5620 13EA                            u5540 12E0  
                          u5380 2EAC                            u5460 38A8                            u7300 1048  
                          u7220 0E82                            u7140 0C86                            u7060 0A74  
                          _RCIF 007CF5                            u6341 225A                            u6261 2150  
                          u6181 1FC4                            u6501 1E36                            u6421 1BA6  
                          u5701 1518                            u5621 13E6                            u5541 12DC  
                          u5381 2EA8                            u5437 36B8                            u7301 1044  
                          u7221 0E7E                            u7141 0C82                            u7061 0A70  
                          i1l54 3A1E                            u6350 228E                            u6270 2172  
                          u6190 1FD8                            u6510 1E4E                            u6430 1BE0  
                          u5710 1548                            u5630 13FA                            u5550 12EE  
                          u5470 1208                            u5390 2EBE                            u7310 1076  
                          u7230 0E9E                            u7150 0CEC                            u7070 0AAA  
                          u6351 228A                            u6271 216E                            u6191 1FD4  
                          u6511 1E4A                            u6431 1BDC                            u5711 1544  
                          u5631 13F6                            u5551 12EA                            u5471 1204  
                          u6095 245E                            u5391 2EBA                            u7311 1072  
                          u7231 0E9A                            u7151 0CE8                            u7071 0AA6  
                          u7400 2720                            u6600 2FF0                            u6360 22BC  
                          u6280 2192                            u6520 1E68                            u6440 1BF0  
                          u5800 162A                            u5720 1558                            u5640 142C  
                          u5560 135C                            u5480 121A                            u7320 10FA  
                          u7240 0EAC                            u7160 0D34                            u7080 0AD0  
                          i1l57 3A30                            i1l81 0054                            u7401 271C  
                          u6601 2FEC                            u6361 22B8                            u6281 218E  
                          u6521 1E64                            u6441 1BEC                            u5801 1626  
                          u5721 1554                            u5641 1428                            u5561 1358  
                          u5481 1216                            u7321 10F6                            u7241 0EA8  
                          u7161 0D30                            u7081 0ACC                            i1l74 37F8  
                          u7410 27D6                            u6610 3016                            u6290 21A4  
                          u6530 1EB0                            u6450 1D6A                            u6370 1B26  
                          u5810 163C                            u5730 1574                            u5650 143A  
                          u5570 1374                            u5490 122A                            u7330 1114  
                          u7250 0F04                            u7170 0D44                            u7090 0AE2  
                          u7411 27D0                            u6611 3012                            u6291 21A0  
                          u6531 1EAC                            u6371 1B22                            u5811 1638  
                          u5731 1570                            u5651 1436                            u5571 136E  
                          u5491 1226                            u7331 1110                            u7251 0F00  
                          u7171 0D40                            u7091 0ADE                            u7420 27D8  
                          u6620 31BC                            u6700 33AA                            u6540 1EDE  
                          u6460 1DC4                            u6380 1B38                            u5820 164C  
                          u5740 1584                            u5660 1458                            u5580 1376  
                          u5900 2D06                            u7340 112C                            u7260 0FD6  
                          u7180 0DAC                            u7500 16D2                            u6621 31B8  
                          u6701 33A6                            u6541 1EDA                            u6461 1DC0  
                          u6381 1B34                            u5821 1648                            u5741 1580  
                          u5661 1454                            u7341 1128                            u7261 0FD2  
                          u7181 0DA8                            u7501 16CE                            u7430 27EE  
                          u6630 31D6                            u6710 2BF0                            u6550 1F18  
                          u6470 1DE4                            u6390 1B48                            u5830 166C  
                          u5750 1596                            u5670 1490                            u5590 139E  
                          u5910 2D24                            u7350 118A                            u7270 0FF2  
                          u7190 0E4E                            u7510 1718                            u7431 27EA  
                          u6631 31D2                            u6711 2BEC                            u6551 1F14  
                          u6471 1DE0                            u6455 1D60                            u6391 1B44  
                          u5831 1668                            u5751 1592                            u5671 148C  
                          u5591 139A                            u5911 2D20                            u7351 1184  
                          u7271 0FEE                            u7191 0E4A                            u7511 1714  
                          u4960 3A16                            u7440 2800                            u6560 2F76  
                          u6640 31F0                            u6720 2C2E                            u6480 1DF6  
                          u5840 167E                            u5760 15AC                            u5680 14D6  
                          u6800 2B48                            u5920 2D4C                            u7360 118C  
                          u7280 1004                            u7600 19D8                            u7520 1752  
                          u4961 3A12                            u7441 27FC                            u6561 2F72  
                          u6641 31EC                            u6721 2C2A                            u6481 1DF2  
                          u5841 167A                            u5761 15A8                            u5681 14D2  
                          u6801 2B44                            u5921 2D48                            u5905 2CFC  
                          u7281 1000                            u7601 19D2                            u7521 174E  
                          u6570 2F90                            u6650 320E                            u6730 2C4C  
                          u6490 1E24                            u5850 169A                            u5770 15C2  
                          u5690 150C                            u6810 2B70                            u5930 2D76  
                          u7370 11A2                            u7290 1012                            u7450 2DEE  
                          u7610 19DA                            u7530 17FA                            u6571 2F8C  
                          u6651 320A                            u6731 2C48                            u6491 1E20  
                          u5851 1696                            u5771 15BE                            u5691 1508  
                          u6811 2B6C                            u5931 2D72                            u7371 119E  
                          u7291 100E                            u7451 2DEA                            u7531 17F4  
                          u7380 26CE                            u6580 2FB6                            u6660 3224  
                          u6740 2C6C                            u5780 15D6                            u6820 2B90  
                          u5860 3036                            u6900 071C                            u7460 2E20  
                          u7620 19F0                            u7540 17FC                            u4980 36FA  
                          u7700 2AB2                            u7381 26CA                            u6581 2FB2  
                          u6661 3220                            u6741 2C68                            u5781 15D2  
                          u6821 2B8C                            u5861 3032                            u6901 0718  
                          u7461 2E1C                            u7621 19EC                            u4981 36F6  
                          u7701 2AAE                            u7390 2704                            u6590 2FD4  
                          u6670 3248                            u6750 2CBC                            u5790 15F0  
                          u6830 2BA0                            u5950 2DB0                            u5870 3058  
                          u6910 074A                            u7470 2E3C                            u7630 1A8C  
                          u7550 1812                            u4990 3722                            u7710 33E2  
                          u7391 2700                            u6591 2FD0                            u6671 3244  
                          u6751 2CB8                            u5791 15EC                            u6831 2B9C  
                          u5951 2DAA                            u5871 3054                            u6911 0744  
                          u7471 2E38                            u7631 1A88                            u7551 180E  
                          u4991 371E                            u7711 33DE                            u6840 3658  
                          u6680 3338                            u6760 38C4                            u5960 2DB2  
                          u5880 30AE                            u6920 074C                            u7480 2E4E  
                          u7560 1842                            u7640 3588                            u7720 3414  
                          u6841 3654                            u6681 3334                            u6761 38C0  
                          u5945 2D88                            u5881 30AA                            u7481 2E4A  
                          u7561 183E                            u7641 3584                            u7721 3410  
                          u6850 3686                            u6690 3376                            u6770 2AD2  
                          u5890 30BC                            u5970 35DA                            u6930 0764  
                          u7490 2E76                            u7570 1882                            u7650 30FC  
                          u7730 3446                            u6851 3682                            u6691 3372  
                          u6771 2ACE                            u5891 30B8                            u6931 0760  
                          u7491 2E72                            u7571 187E                            u7651 30F8  
                          u7731 3442                            u6780 2B06                            u5980 35EC  
                          u6940 07F0                            u6860 0664                            u7580 18C4  
                          u7660 3142                            u5981 35E8                            u6941 07EC  
                          u6861 0660                            u7581 18C0                            u7661 313E  
                          u6790 2B34                            u5990 3504                            u6950 081E  
                          u6870 06B4                            u7590 1972                            u7670 3188  
                          u6791 2B30                            u5991 34FE                            u6951 0818  
                          u6871 06B0                            u7591 196E                            u7671 3184  
                          u6960 0820                            u6880 06C2                            u7680 31A0  
                          u6785 2AFC                            u5977 35D0                            u6881 06BE  
                          u7681 319C                            u6970 0838                            u6890 06D4  
                          u7690 29CA                            u6971 0834                            u6891 06D0  
                          u7691 29C6                            u6980 08BC                            u6981 08B8  
                          u6990 0950                            u6991 094C                            _TMR3 000FB2  
                  __CFG_WDTPS$1 000000                            _dbuf 0100                            _atoi 2696  
                          _main 33B4                            _prec 006D                            _nout 0069  
                          pad@i 0023                            pad@p 0020                            fsr1h 000FE2  
                          fsr2h 000FDA                            indf1 000FE7                            indf2 000FDF  
                          fsr1l 000FE1                            pad@w 0025                            fsr2l 000FD9  
                          btemp 0073                __end_of_ADC_Read 3876                   ___fpclassifyf 2CC6  
                          prodh 000FF4                            prodl 000FF3                            start 006C  
               ___fldiv@new_exp 001D                    _tolower$1566 0018                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000         __end_of_UART_Write_Text 34D4                           ??_pad 0022  
              ?_UART_Initialize 0001  __size_of_OSCILLATOR_Initialize 0008                    Mode2@digital 00CE  
 __end_of_OSCILLATOR_Initialize 3A50                   ___fltol@sign1 0014                           ?_atoi 0013  
               __end_of___fladd 16AE                           ?_main 0001                 __end_of___fldiv 22D0  
               __end_of___awdiv 3028                 __end_of___flneg 38E6                           STR_10 062E  
                         STR_13 062A                           STR_14 0632                           STR_17 0636  
                         STR_19 0636                 __end_of___awmod 325A                 __end_of___flmul 1F36  
               __end_of___flsub 3772                 __end_of___fltol 2BC2                 ___awdiv@divisor 000E  
                         i1l592 3308                           i2l177 39D6                 ___awdiv@counter 0010  
                         _RCREG 000FAE                    vfpfcnvrt@fmt 004D                           _SPBRG 000FAF  
                         _TRISA 000F92                           _TXREG 000FAD                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
                 __CFG_WRT3$OFF 000000                           _Mode1 3998                           _Mode2 299C  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000                  __CFG_EBTR3$OFF 000000                     ?_UART_Write 0001  
                 __CFG_WRTB$OFF 000000                   __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000  
                i1___awmod@sign 0006                  __CFG_EBTRB$OFF 000000                           _flags 006F  
                  Mode2@voltage 00CA                           _fputc 2E9A                           _fputs 3772  
               __end_of_isdigit 391E                           atoi@n 0020                           pad@fp 001C  
                         atoi@s 0013                           _width 006B                           _putch 3A58  
                   _ClearBuffer 37FA                 __end_of_isspace 3692                 __end_of_isupper 38AE  
                         tablat 000FF5                           ttemp5 0074                           ttemp6 0077  
                         ttemp7 007B                           status 000FD8                           wtemp8 0074  
               __end_of_sprintf 3640                  ?___fpclassifyf 000C                 __end_of_tolower 3534  
            __size_ofi1___awmod 00B0                 __end_of_strncmp 2E9A                  __CFG_PBADEN$ON 000000  
               __initialization 391E                    __end_of_atoi 2826                    __end_of_main 3456  
                        ??_atoi 0015                          ??_main 0069                ?_CCP1_Initialize 0001  
                 __activetblptr 000002              __size_of_GetString 000A                          ?_Mode1 0001  
                        ?_Mode2 0001                          _ADCON1 000FC1                          ?_fputc 000C  
                        ?_fputs 0015                          _ADRESH 000FC4                          _ADRESL 000FC3  
              ___awdiv@dividend 000C                          ?_putch 0001                          i1l4210 325A  
                        i1l4220 3286                          i1l4212 325E                          i1l4300 004A  
                        i1l4206 3A1E                          i1l4230 32BE                          i1l4222 328E  
                        i1l4214 326C                          i1l4302 0050                          i1l4208 3A2C  
                        i1l4240 32F8                          i1l4232 32D4                          i1l4224 32A0  
                        i1l4216 3274                          i1l4242 3300                          i1l4234 32DC  
                        i1l4226 32A8                          i1l4218 3278                          i1l4250 37D8  
                        i1l4236 32E2                          i1l4228 32B0                          i1l4252 37DC  
                        i1l4238 32E8                          i1l4246 37B6                          i1l4248 37C6  
                        i1l4296 002E                          i1l4298 003C                          i2l2770 39CE  
                        i2l2766 39BC                          i2l2768 39CA                __end_of___xxtofl 2696  
                        Mode2@i 00D0                          _Hi_ISR 0008                          _Lo_ISR 0018  
                __CFG_XINST$OFF 000000                    vfprintf@cfmt 0067                          ___flge 2BC2  
                        ___fleq 330A             __size_of_UART_Write 0016                       ??___fladd 0014  
                        ___wmul 3950                       ??___fldiv 0014                       ??___awdiv 0010  
                     ??___flneg 0010                  __CFG_STVREN$ON 000000                       ??___awmod 0010  
                     ??___flmul 0022                ?_UART_Write_Text 000D                       ??___flsub 003B  
                     ??___fltol 0010                          _efgtoa 063C                 ADC_Read@channel 000C  
                        _lenStr 0071                          _floorf 22D0                          _memset 2826  
               ADC_Read@digital 0010                          clear_0 3924                          clear_1 3930  
                        clear_2 393C                ___awdiv@quotient 0012                 ___awmod@divisor 000E  
               ___awmod@counter 0010                          pad@buf 001E                          _strchr 36E0  
                        _strcpy 3592                          _strlen 3692                          _strstr 30EA  
             __end_ofi1___awmod 330A                          fputc@c 000C                          fputs@c 0019  
                        fputs@i 001A                          fputs@s 0015                       ??_isdigit 000E  
               ___fpclassifyf@e 0014                 ___fpclassifyf@u 0016                       ?_ADC_Read 000C  
               ___fpclassifyf@x 000C                    __mediumconst 0000                       ??_isspace 000E  
                        tblptrh 000FF7                       ??_isupper 000E                          tblptrl 000FF6  
                        tblptru 000FF8                          putch@c 0001                __end_of_vfprintf 3592  
                     ??_sprintf 0069                       ??_tolower 0014                       ??_strncmp 0012  
 __size_of_INTERRUPT_Initialize 0008                      ___flge@ff1 0033                      ___flge@ff2 0037  
               ??___fpclassifyf 0010                    ___xxtofl@arg 0016                    ___xxtofl@exp 0015  
             _SYSTEM_Initialize 39DA                    ___xxtofl@val 000C                      ___fleq@ff1 000C  
                    ___fleq@ff2 0010                      __accesstop 0080         __end_of__initialization 3942  
                    ___flneg@f1 000C              ?_SYSTEM_Initialize 0001                   ___rparam_used 000001  
                    ___fltol@f1 000C               __end_of_GetString 3A48                   ?i1_UART_Write 0001  
                 __end_of_Mode1 39BA                   __end_of_Mode2 2ABC                  __pcstackCOMRAM 0001  
           ??_SYSTEM_Initialize 000C                   __end_of_fputc 2F64                   __end_of_fputs 37B6  
                 __end_of_putch 3A5A                      ??_ADC_Read 000E                   ??_MyusartRead 0007  
                       ??_Mode1 0013                         ??_Mode2 0069                         ??_fputc 0010  
     __end_of_SYSTEM_Initialize 39F0                         ??_fputs 0019                         ??_putch 000C  
                    __pbssBANK0 00D2                      __pbssBANK1 0100                         ?_Hi_ISR 0001  
                       ?_Lo_ISR 0001                  ??i1_UART_Write 0001                      _efgtoa$931 0084  
                    _efgtoa$932 0086                      _efgtoa$941 008A                      _efgtoa$942 008C  
                    _efgtoa$943 008E                      _efgtoa$937 0088                         ?___flge 0033  
                       ?___fleq 000C                         ?___wmul 000C                         ?_efgtoa 003F  
                       _CCP1CON 000FBD                         ?_floorf 0025                         ?_memset 000C  
       __size_of_ADC_Initialize 0016                         ?_strchr 000C                         ?_strcpy 000C  
                       ?_strlen 000C                         ?_strstr 0017                       ?___xxtofl 000C  
                  ??_UART_Write 000C              __size_of_vfpfcnvrt 045E                    ?_ClearBuffer 0001  
           __end_of_MyusartRead 37FA                 __size_of_Hi_ISR 39D2                 __size_of_Lo_ISR 0054  
                       __Hparam 0000                         __Lparam 0000                 __size_of___flge 0104  
               __size_of___fleq 00AA                         ___fladd 11EE                         ___fldiv 1F36  
                       ___awdiv 2F64                         ___flneg 38AE                         ___awmod 31AA  
                       ___flmul 1B0C                         ___flsub 372C                         ___fltol 2ABC  
               __size_of___wmul 0026              __end_of_UART_Write 3A1C                       ?_vfprintf 0061  
                  __psmallconst 0600                 __size_of_efgtoa 0BB2                 __size_of_floorf 0212  
                       __pcinit 391E                 __size_of_memset 0176                         __ramtop 0600  
                       __ptext0 33B4                         __ptext1 39DA                         __ptext2 3976  
                       __ptext3 3A48                         __ptext4 3A50                         __ptext5 3A32  
                       __ptext6 39F0                         __ptext7 299C                         __ptext8 30EA  
                       __ptext9 36E0                 __size_of_strchr 004C                 __size_of_strcpy 005C  
               __size_of_strlen 004E                 __size_of_strstr 00C0           _OSCILLATOR_Initialize 3A48  
                  __size_of_pad 00C2                         _isdigit 38E6                      ??___xxtofl 0010  
              ___awmod@dividend 000C        __size_of_UART_Initialize 0022                         _isspace 3640  
                       _isupper 3876                         efgtoa@c 0045                         efgtoa@d 0098  
                       efgtoa@e 00B0                         efgtoa@f 0041                         efgtoa@g 00AC  
                       efgtoa@h 00A2                         efgtoa@i 00AA                         efgtoa@l 00A6  
                       efgtoa@m 0094                         efgtoa@n 00B2                         efgtoa@p 009C  
                       efgtoa@t 0090                         efgtoa@u 00B4                         efgtoa@w 009F  
                       atoi@neg 0019      __size_of_SYSTEM_Initialize 0016                         _sprintf 35EE  
                       _tolower 34D4                         _strncmp 2DC4                  __pintcode_body 39BA  
          end_of_initialization 3942                         floorf@e 0033                         floorf@m 002F  
                       floorf@u 0035                         floorf@x 0025                         fputc@fp 000E  
                       memset@c 000E                         memset@k 0014                         memset@n 0010  
                       memset@s 0016                   __Lmediumconst 0000                         int_func 39BA  
                       fputs@fp 0017               __end_of_vfpfcnvrt 1B0C                      efgtoa@mode 00A1  
                    efgtoa@sign 009A                       _RCSTAbits 000FAB                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_vfprintf 0067                         strchr@c 000E                         strchr@s 000C  
                       strcpy@d 0014                         strlen@a 000E                         strcpy@s 0012  
                       strlen@s 000C                         strstr@h 0017                         strstr@n 0019  
                UART_Write@data 000C                     ___fladd@grs 001B                   ___xxtofl@sign 0014  
                     _TRISCbits 000F94                     _MyusartRead 37B6            __end_ofi1_UART_Write 3A32  
                     i1___awmod 325A                     ___fldiv@grs 001F                     ___fldiv@rem 0018  
             __size_of_ADC_Read 003A        __size_of_CCP1_Initialize 000C                     ___flmul@grs 0028  
                     _TXSTAbits 000FAC                  __end_of_Hi_ISR 39DA                  __end_of_Lo_ISR 006C  
  __end_of_INTERRUPT_Initialize 3A58                  __end_of___flge 2CC6                  __end_of___fleq 33B4  
                     _GetString 3A3E                     vfpfcnvrt@ap 004F                     vfpfcnvrt@ct 005D  
                   vfpfcnvrt@fp 004B                  __end_of___wmul 3976                     _BAUDCONbits 000FB8  
                __end_of_efgtoa 11EE                  _ADC_Initialize 39F0                  __end_of_floorf 24E2  
        ?_OSCILLATOR_Initialize 0001                      floorf@F524 00D2                  __end_of_memset 299C  
      __size_of_UART_Write_Text 007E                  __end_of_strchr 372C                  __end_of_strcpy 35EE  
                __end_of_strlen 36E0                  __end_of_strstr 31AA             start_initialization 391E  
                   __end_of_pad 30EA                      ?i1___awmod 0001                    ClearBuffer@i 000C  
             ??_UART_Initialize 000C            __size_of_ClearBuffer 0042           __end_of___fpclassifyf 2DC4  
              __CFG_OSC$INTIO67 000000                        ??_Hi_ISR 0001                        ??_Lo_ISR 0007  
                   vfprintf@fmt 0063                        ??___flge 003B                        ??___fleq 0014  
                      ??___wmul 0010                        ??_efgtoa 0046          __end_of_ADC_Initialize 3A06  
                    ?_GetString 000C              i1___awmod@dividend 0001                        ??_floorf 0029  
              __CFG_LPT1OSC$OFF 000000                        ??_memset 0012                      memset@dest 000C  
                      ??_strchr 0010                        ??_strcpy 0010                        ??_strlen 000E  
                      ??_strstr 001B                       ___fladd@a 0010                       ___fladd@b 000C  
                     ___fldiv@a 0010                       ___fldiv@b 000C                       ___flmul@a 001E  
                     ___flmul@b 001A                     __pbssCOMRAM 0069                       ___flsub@a 0037  
                     ___flsub@b 0033                   __pcstackBANK0 0080               __size_of___xxtofl 01B4  
                     _atoi$1432 001B                       _atoi$1433 001F                       _atoi$1434 001D  
             ??_CCP1_Initialize 000C               __CFG_CCP2MX$PORTC 000000                       __pintcode 0008  
                      ?___fladd 000C                        ?___fldiv 000C                        ?___awdiv 000C  
                      ?___flneg 000C                        ?___awmod 000C                        ?___flmul 001A  
                      ?___flsub 0033                        ?___fltol 000C                 ?_ADC_Initialize 0001  
                   __pintcodelo 0018           __size_ofi1_UART_Write 0016               __size_of_vfprintf 005E  
                   __smallconst 0600                        ?_isdigit 000C                        _ADC_Read 383C  
                      ?_isspace 000C                  __size_of_Mode1 0022                  __size_of_Mode2 0120  
                      ?_isupper 000C                     ??i1___awmod 0005                        ?_sprintf 00B8  
                      ?_tolower 0012                  __size_of_fputc 00CA                  __size_of_fputs 0044  
                      ?_strncmp 000C                  __size_of_putch 0002               ??_UART_Write_Text 000F  
          _INTERRUPT_Initialize 3A50                  ___wmul@product 0010                        _IPR1bits 000F9F  
                      _PIE1bits 000F9D                        i1u530_20 32F8                        i1u530_21 32F4  
                      i1u524_20 3A2C                        i1u524_21 3A28                        i1u525_20 326C  
                      i1u533_20 003C                        i1u525_21 3268                        i1u533_21 0038  
                      i1u526_20 3286                        i1u534_20 004A                        i1u526_21 3282  
                      i1u534_21 0046                        i1u527_20 32A0                        i1u527_21 329C  
                      i1u528_20 32BE                        i1u528_21 32BA                        i1u529_20 32D4  
                      i1u529_21 32D0                        _PIR1bits 000F9E                        i2u269_40 39CA  
                      i2u269_41 39C6                    i1_UART_Write 3A1C                        _RCONbits 000FD0  
                   ??_GetString 000E                       _vfpfcnvrt 16AE                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0               ___wmul@multiplier 000C                    ?_MyusartRead 0001  
                  _isspace$1463 0012                      vfpfcnvrt@c 0060                      vfpfcnvrt@f 0059  
         ?_INTERRUPT_Initialize 0001                i1UART_Write@data 0001                        __Hrparam 0000  
                    vfprintf@ap 0065                        __Lrparam 0000                      vfprintf@fp 0061  
            __CFG_BOREN$SBORDIS 000000               i1___awmod@divisor 0003         ??_OSCILLATOR_Initialize 000C  
             i1___awmod@counter 0005                __size_of___fladd 04C0                __size_of___fldiv 039A  
              __size_of___awdiv 00C4                __size_of___flneg 0038                __size_of___awmod 00B0  
              __size_of___flmul 042A                __size_of___flsub 0046                __size_of___fltol 0106  
                    ?_vfpfcnvrt 004B              ___fpclassifyf@F463 00D6                 _UART_Initialize 3976  
                    sprintf@fmt 00BA                        ___xxtofl 24E2                __size_of_isdigit 0038  
              __size_of_isspace 0052                        __ptext10 35EE                        __ptext11 3534  
                      __ptext20 3772                        __ptext12 16AE                        __ptext21 2E9A  
                      __ptext13 2DC4                        __ptext30 2BC2                        __ptext22 3A58  
                      __ptext14 063C                        __ptext31 330A                        __ptext23 22D0  
                      __ptext15 34D4                        __ptext40 24E2                        __ptext32 1F36  
                      __ptext24 2CC6                        __ptext16 3876                        __ptext41 3A3E  
                      __ptext33 31AA                        __ptext25 2ABC                        __ptext17 3592  
                      __ptext50 3A1C                        __ptext42 383C                        __ptext34 2F64  
                      __ptext26 372C                        __ptext18 3028                        __ptext43 3998  
                      __ptext35 2696                        __ptext27 11EE                        __ptext19 3692  
                      __ptext44 3456                        __ptext36 3640                        __ptext28 38AE  
                      __ptext45 3A06                        __ptext37 38E6                        __ptext29 1B0C  
                      __ptext46 37FA                        __ptext38 3950                        __ptext39 2826  
                      __ptext48 37B6                        __ptext49 325A                __size_of_isupper 0038  
              __size_of_sprintf 0052                __size_of_tolower 0060                      strcpy@dest 000C  
              __size_of_strncmp 00D6             UART_Write_Text@text 000D                   __size_of_atoi 0190  
                 __size_of_main 00A2                        efgtoa@fp 003F                        efgtoa@ne 0096  
                      efgtoa@pp 0092                        efgtoa@ou 0080                        int$flags 0073  
                      _vfprintf 3534                        _mystring 00DA                      _INTCONbits 000FF2  
               _CCP1_Initialize 3A32                        isdigit@c 000C          ??_INTERRUPT_Initialize 000C  
                 ??_ClearBuffer 000C                        intlevel1 0000                        intlevel2 0000  
                     sprintf@ap 00C2                        isspace@c 000C                       strcpy@src 000E  
                      isupper@c 000C                       strncmp@_l 000C                       strncmp@_r 000E  
              ??_ADC_Initialize 000C                      _OSCCONbits 000FD3                     efgtoa@nmode 009E  
       __end_of_UART_Initialize 3998                     ??_vfpfcnvrt 0051                   _vfpfcnvrt$961 0057  
                 _vfpfcnvrt$957 0055                 _UART_Write_Text 3456                        sprintf@f 00C4  
                      tolower@c 0012                        sprintf@s 00B8          __size_of___fpclassifyf 00FE  
                      strncmp@l 0013                        strncmp@n 0010                        strncmp@r 0015  
                    _UART_Write 3A06                        strstr@nl 001B                   ___fladd@signs 0018  
          __size_of_MyusartRead 0044                UART_Write_Text@i 0011                    ___fladd@aexp 0019  
                  ___fladd@bexp 001A             __end_of_ClearBuffer 383C  
